

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 17:07:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	functab,global,class=ENTRY,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F883 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000D                     	;# 
   466  000E                     	;# 
   467  000E                     	;# 
   468  000F                     	;# 
   469  0010                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0014                     	;# 
   474  0015                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  001D                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  0081                     	;# 
   488  0085                     	;# 
   489  0086                     	;# 
   490  0087                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529                           
   530                           	psect	strings
   531  0800                     __pstrings:	
   532  0800                     stringtab:	
   533  0800                     __stringtab:	
   534                           
   535                           ;	String table - string pointers are 1 byte each
   536  0800  1BFF               	btfsc	btemp+1,7
   537  0801  280A               	ljmp	stringcode
   538  0802  1383               	bcf	3,7
   539  0803  187F               	btfsc	btemp+1,0
   540  0804  1783               	bsf	3,7
   541  0805  0800               	movf	0,w
   542  0806  0A84               	incf	4,f
   543  0807  1903               	skipnz
   544  0808  0AFF               	incf	btemp+1,f
   545  0809  0008               	return
   546  080A                     stringcode:	
   547  080A                     stringdir:	
   548  080A  3008               	movlw	high stringdir
   549  080B  008A               	movwf	10
   550  080C  0804               	movf	4,w
   551  080D  0A84               	incf	4,f
   552  080E  0782               	addwf	2,f
   553  080F                     __stringbase:	
   554  080F  3400               	retlw	0
   555  0810                     __end_of__stringtab:	
   556  0810                     _dpowers:	
   557  0810  3401               	retlw	1
   558  0811  3400               	retlw	0
   559  0812  3400               	retlw	0
   560  0813  3400               	retlw	0
   561  0814  340A               	retlw	10
   562  0815  3400               	retlw	0
   563  0816  3400               	retlw	0
   564  0817  3400               	retlw	0
   565  0818  3464               	retlw	100
   566  0819  3400               	retlw	0
   567  081A  3400               	retlw	0
   568  081B  3400               	retlw	0
   569  081C  34E8               	retlw	232
   570  081D  3403               	retlw	3
   571  081E  3400               	retlw	0
   572  081F  3400               	retlw	0
   573  0820  3410               	retlw	16
   574  0821  3427               	retlw	39
   575  0822  3400               	retlw	0
   576  0823  3400               	retlw	0
   577  0824  34A0               	retlw	160
   578  0825  3486               	retlw	134
   579  0826  3401               	retlw	1
   580  0827  3400               	retlw	0
   581  0828  3440               	retlw	64
   582  0829  3442               	retlw	66
   583  082A  340F               	retlw	15
   584  082B  3400               	retlw	0
   585  082C  3480               	retlw	128
   586  082D  3496               	retlw	150
   587  082E  3498               	retlw	152
   588  082F  3400               	retlw	0
   589  0830  3400               	retlw	0
   590  0831  34E1               	retlw	225
   591  0832  34F5               	retlw	245
   592  0833  3405               	retlw	5
   593  0834  3400               	retlw	0
   594  0835  34CA               	retlw	202
   595  0836  349A               	retlw	154
   596  0837  343B               	retlw	59
   597  0838                     __end_of_dpowers:	
   598  0007                     _PORTC	set	7
   599  0006                     _PORTB	set	6
   600  0005                     _PORTA	set	5
   601  0009                     _PORTE	set	9
   602  0019                     _TXREG	set	25
   603  001A                     _RCREG	set	26
   604  0018                     _RCSTAbits	set	24
   605  000C                     _PIR1bits	set	12
   606  0018                     _RCSTA	set	24
   607  001F                     _ADCON0bits	set	31
   608  001E                     _ADRESH	set	30
   609  001F                     _ADCON0	set	31
   610  0087                     _TRISC	set	135
   611  0086                     _TRISB	set	134
   612  0085                     _TRISA	set	133
   613  0089                     _TRISE	set	137
   614  0098                     _TXSTAbits	set	152
   615  009A                     _SPBRGH	set	154
   616  0099                     _SPBRG	set	153
   617  0098                     _TXSTA	set	152
   618  009E                     _ADRESL	set	158
   619  009F                     _ADCON1	set	159
   620  008F                     _OSCCON	set	143
   621  0189                     _ANSELH	set	393
   622  0188                     _ANSEL	set	392
   623  0187                     _BAUDCTL	set	391
   624  0838                     STR_2:	
   625  0838  340A               	retlw	10
   626  0839  3441               	retlw	65	;'A'
   627  083A  346E               	retlw	110	;'n'
   628  083B  3461               	retlw	97	;'a'
   629  083C  346C               	retlw	108	;'l'
   630  083D  346F               	retlw	111	;'o'
   631  083E  3467               	retlw	103	;'g'
   632  083F  3420               	retlw	32	;' '
   633  0840  343A               	retlw	58	;':'
   634  0841  3420               	retlw	32	;' '
   635  0842  3425               	retlw	37	;'%'
   636  0843  3464               	retlw	100	;'d'
   637  0844  3420               	retlw	32	;' '
   638  0845  340A               	retlw	10
   639  0846  3400               	retlw	0
   640  0847                     STR_3:	
   641  0847  3425               	retlw	37	;'%'
   642  0848  346C               	retlw	108	;'l'
   643  0849  3475               	retlw	117	;'u'
   644  084A  342E               	retlw	46	;'.'
   645  084B  3425               	retlw	37	;'%'
   646  084C  3432               	retlw	50	;'2'
   647  084D  342E               	retlw	46	;'.'
   648  084E  3432               	retlw	50	;'2'
   649  084F  346C               	retlw	108	;'l'
   650  0850  3475               	retlw	117	;'u'
   651  0851  3400               	retlw	0
   652  0852                     STR_1:	
   653  0852  3456               	retlw	86	;'V'
   654  0853  346F               	retlw	111	;'o'
   655  0854  346C               	retlw	108	;'l'
   656  0855  3474               	retlw	116	;'t'
   657  0856  3420               	retlw	32	;' '
   658  0857  343A               	retlw	58	;':'
   659  0858  3400               	retlw	0
   660                           
   661                           ; #config settings
   662  0000                     
   663                           	psect	cinit
   664  07F7                     start_initialization:	
   665  07F7                     __initialization:	
   666                           
   667                           ; Clear objects allocated to BANK1
   668  07F7  1383               	bcf	3,7	;select IRP bank0
   669  07F8  30A0               	movlw	low __pbssBANK1
   670  07F9  0084               	movwf	4
   671  07FA  30B1               	movlw	low (__pbssBANK1+17)
   672  07FB  158A  20EA         	fcall	clear_ram0
   673  07FD                     end_of_initialization:	
   674                           ;End of C runtime variable initialization code
   675                           
   676  07FD                     __end_of__initialization:	
   677  07FD  0183               	clrf	3
   678  07FE  158A  2B04         	ljmp	_main	;jump to C main() function
   679                           
   680                           	psect	bssBANK1
   681  00A0                     __pbssBANK1:	
   682  00A0                     ftoa1@buf:	
   683  00A0                     	ds	17
   684                           
   685                           	psect	clrtext
   686  08EA                     clear_ram0:	
   687                           ;	Called with FSR containing the base address, and
   688                           ;	W with the last address+1
   689                           
   690  08EA  0064               	clrwdt	;clear the watchdog before getting into this loop
   691  08EB                     clrloop0:	
   692  08EB  0180               	clrf	0	;clear RAM location pointed to by FSR
   693  08EC  0A84               	incf	4,f	;increment pointer
   694  08ED  0604               	xorwf	4,w	;XOR with final address
   695  08EE  1903               	btfsc	3,2	;have we reached the end yet?
   696  08EF  3400               	retlw	0	;all done for this memory range, return
   697  08F0  0604               	xorwf	4,w	;XOR again to restore value
   698  08F1  28EB               	goto	clrloop0	;do the next byte
   699                           
   700                           	psect	cstackCOMMON
   701  0070                     __pcstackCOMMON:	
   702  0070                     ?_isdigit:	
   703  0070                     ?___flge:	
   704                           ; 1 bit 
   705                           
   706  0070                     ?_OSCILLATOR_Initialize:	
   707                           ; 1 bit 
   708                           
   709  0070                     ??_OSCILLATOR_Initialize:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_PIN_MANAGER_Initialize:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ??_PIN_MANAGER_Initialize:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_ADC_Initialize:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_ADC_Initialize:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_EUSART_Initialize:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_EUSART_Initialize:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_isdigit:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_SYSTEM_Initialize:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_SYSTEM_Initialize:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_EUSART_Write:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ??_EUSART_Write:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_main:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?__Umul8_16:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_ADC_GetConversion:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     ?___wmul:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ?___lldiv:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     ?___flneg:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0070                     ?___fladd:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0070                     ?___xxtofl:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0070                     EUSART_Write@txData:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0070                     _isdigit$804:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     __Umul8_16@multiplicand:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ___wmul@multiplier:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ___lldiv@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ___flge@ff1:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0070                     ___flneg@f1:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0070                     ___fladd@b:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0070                     ___xxtofl@val:	
   794                           ; 4 bytes @ 0x0
   795                           
   796                           
   797                           ; 4 bytes @ 0x0
   798  0070                     	ds	1
   799  0071                     ?_putch:	
   800  0071                     putch@txData:	
   801                           ; 1 bytes @ 0x1
   802                           
   803  0071                     isdigit@c:	
   804                           ; 1 bytes @ 0x1
   805                           
   806                           
   807                           ; 1 bytes @ 0x1
   808  0071                     	ds	1
   809  0072                     ??__Umul8_16:	
   810  0072                     ??_ADC_GetConversion:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     ??_putch:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0072                     ___wmul@multiplicand:	
   817                           ; 1 bytes @ 0x2
   818                           
   819                           
   820                           ; 2 bytes @ 0x2
   821  0072                     	ds	2
   822  0074                     ??___wmul:	
   823  0074                     ??___flneg:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0074                     ??___xxtofl:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0074                     ___wmul@product:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0074                     __Umul8_16@product:	
   833                           ; 2 bytes @ 0x4
   834                           
   835  0074                     ___lldiv@dividend:	
   836                           ; 2 bytes @ 0x4
   837                           
   838  0074                     ___flge@ff2:	
   839                           ; 4 bytes @ 0x4
   840                           
   841  0074                     ___fladd@a:	
   842                           ; 4 bytes @ 0x4
   843                           
   844                           
   845                           ; 4 bytes @ 0x4
   846  0074                     	ds	2
   847  0076                     __Umul8_16@word_mpld:	
   848                           
   849                           ; 2 bytes @ 0x6
   850  0076                     	ds	1
   851  0077                     ADC_GetConversion@channel:	
   852                           
   853                           ; 1 bytes @ 0x7
   854  0077                     	ds	1
   855  0078                     ??___lldiv:	
   856  0078                     ??___flge:	
   857                           ; 1 bytes @ 0x8
   858                           
   859  0078                     ___fladd@signs:	
   860                           ; 1 bytes @ 0x8
   861                           
   862  0078                     ___xxtofl@sign:	
   863                           ; 1 bytes @ 0x8
   864                           
   865  0078                     __Umul8_16@multiplier:	
   866                           ; 1 bytes @ 0x8
   867                           
   868                           
   869                           ; 1 bytes @ 0x8
   870  0078                     	ds	1
   871  0079                     ___fladd@aexp:	
   872  0079                     ___xxtofl@exp:	
   873                           ; 1 bytes @ 0x9
   874                           
   875  0079                     ___lldiv@quotient:	
   876                           ; 1 bytes @ 0x9
   877                           
   878                           
   879                           ; 4 bytes @ 0x9
   880  0079                     	ds	1
   881  007A                     ___fladd@bexp:	
   882  007A                     ___xxtofl@arg:	
   883                           ; 1 bytes @ 0xA
   884                           
   885                           
   886                           ; 4 bytes @ 0xA
   887  007A                     	ds	1
   888  007B                     ___fladd@grs:	
   889                           
   890                           ; 1 bytes @ 0xB
   891  007B                     	ds	2
   892  007D                     ___lldiv@counter:	
   893                           
   894                           ; 1 bytes @ 0xD
   895  007D                     	ds	1
   896  007E                     ??___flsub:	
   897                           
   898                           	psect	cstackBANK0
   899  0020                     __pcstackBANK0:	
   900                           ; 1 bytes @ 0xE
   901                           
   902  0020                     ??___fladd:	
   903  0020                     ?___llmod:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0020                     ?___flmul:	
   907                           ; 4 bytes @ 0x0
   908                           
   909  0020                     ___llmod@divisor:	
   910                           ; 4 bytes @ 0x0
   911                           
   912  0020                     ___flmul@b:	
   913                           ; 4 bytes @ 0x0
   914                           
   915                           
   916                           ; 4 bytes @ 0x0
   917  0020                     	ds	4
   918  0024                     ___llmod@dividend:	
   919  0024                     ___flmul@a:	
   920                           ; 4 bytes @ 0x4
   921                           
   922                           
   923                           ; 4 bytes @ 0x4
   924  0024                     	ds	4
   925  0028                     ??___llmod:	
   926  0028                     ??___flmul:	
   927                           ; 1 bytes @ 0x8
   928                           
   929  0028                     ?___flsub:	
   930                           ; 1 bytes @ 0x8
   931                           
   932  0028                     ___flsub@a:	
   933                           ; 4 bytes @ 0x8
   934                           
   935                           
   936                           ; 4 bytes @ 0x8
   937  0028                     	ds	1
   938  0029                     ___llmod@counter:	
   939                           
   940                           ; 1 bytes @ 0x9
   941  0029                     	ds	1
   942  002A                     ?__doprnt:	
   943  002A                     __doprnt@f:	
   944                           ; 2 bytes @ 0xA
   945                           
   946                           
   947                           ; 2 bytes @ 0xA
   948  002A                     	ds	2
   949  002C                     __doprnt@ap:	
   950  002C                     ___flsub@b:	
   951                           ; 1 bytes @ 0xC
   952                           
   953                           
   954                           ; 4 bytes @ 0xC
   955  002C                     	ds	1
   956  002D                     ??__doprnt:	
   957  002D                     ___flmul@sign:	
   958                           ; 1 bytes @ 0xD
   959                           
   960                           
   961                           ; 1 bytes @ 0xD
   962  002D                     	ds	1
   963  002E                     ___flmul@grs:	
   964                           
   965                           ; 4 bytes @ 0xE
   966  002E                     	ds	4
   967  0032                     __doprnt@cp:	
   968  0032                     ___flmul@aexp:	
   969                           ; 1 bytes @ 0x12
   970                           
   971                           
   972                           ; 1 bytes @ 0x12
   973  0032                     	ds	1
   974  0033                     ___flmul@bexp:	
   975  0033                     __doprnt@len:	
   976                           ; 1 bytes @ 0x13
   977                           
   978                           
   979                           ; 2 bytes @ 0x13
   980  0033                     	ds	1
   981  0034                     ___flmul@prod:	
   982                           
   983                           ; 4 bytes @ 0x14
   984  0034                     	ds	1
   985  0035                     __doprnt@val:	
   986                           
   987                           ; 4 bytes @ 0x15
   988  0035                     	ds	3
   989  0038                     ___flmul@temp:	
   990                           
   991                           ; 2 bytes @ 0x18
   992  0038                     	ds	1
   993  0039                     __doprnt@flag:	
   994                           
   995                           ; 1 bytes @ 0x19
   996  0039                     	ds	1
   997  003A                     ?___fltol:	
   998  003A                     ?___fldiv:	
   999                           ; 4 bytes @ 0x1A
  1000                           
  1001  003A                     __doprnt@width:	
  1002                           ; 4 bytes @ 0x1A
  1003                           
  1004  003A                     ___fltol@f1:	
  1005                           ; 2 bytes @ 0x1A
  1006                           
  1007  003A                     ___fldiv@a:	
  1008                           ; 4 bytes @ 0x1A
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x1A
  1012  003A                     	ds	2
  1013  003C                     __doprnt@prec:	
  1014                           
  1015                           ; 2 bytes @ 0x1C
  1016  003C                     	ds	2
  1017  003E                     ??___fltol:	
  1018  003E                     __doprnt@c:	
  1019                           ; 1 bytes @ 0x1E
  1020                           
  1021  003E                     ___fldiv@b:	
  1022                           ; 1 bytes @ 0x1E
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x1E
  1026  003E                     	ds	1
  1027  003F                     __doprnt@pb:	
  1028                           
  1029                           ; 1 bytes @ 0x1F
  1030  003F                     	ds	1
  1031  0040                     ?_sprintf:	
  1032  0040                     sprintf@f:	
  1033                           ; 2 bytes @ 0x20
  1034                           
  1035                           
  1036                           ; 1 bytes @ 0x20
  1037  0040                     	ds	2
  1038  0042                     ??___fldiv:	
  1039                           
  1040                           ; 1 bytes @ 0x22
  1041  0042                     	ds	1
  1042  0043                     ___fltol@sign1:	
  1043                           
  1044                           ; 1 bytes @ 0x23
  1045  0043                     	ds	1
  1046  0044                     ___fltol@exp1:	
  1047                           
  1048                           ; 1 bytes @ 0x24
  1049  0044                     	ds	3
  1050  0047                     ___fldiv@rem:	
  1051                           
  1052                           ; 4 bytes @ 0x27
  1053  0047                     	ds	2
  1054  0049                     ??_sprintf:	
  1055                           
  1056                           ; 1 bytes @ 0x29
  1057  0049                     	ds	1
  1058  004A                     sprintf@wh:	
  1059                           
  1060                           ; 1 bytes @ 0x2A
  1061  004A                     	ds	1
  1062  004B                     ___fldiv@sign:	
  1063  004B                     sprintf@ap:	
  1064                           ; 1 bytes @ 0x2B
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x2B
  1068  004B                     	ds	1
  1069  004C                     ___fldiv@new_exp:	
  1070  004C                     sprintf@pb:	
  1071                           ; 2 bytes @ 0x2C
  1072                           
  1073                           
  1074                           ; 2 bytes @ 0x2C
  1075  004C                     	ds	2
  1076  004E                     ?_ftoa1:	
  1077  004E                     ftoa1@f:	
  1078                           ; 1 bytes @ 0x2E
  1079                           
  1080  004E                     ___fldiv@grs:	
  1081                           ; 4 bytes @ 0x2E
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x2E
  1085  004E                     	ds	4
  1086  0052                     ___fldiv@bexp:	
  1087  0052                     ftoa1@status:	
  1088                           ; 1 bytes @ 0x32
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x32
  1092  0052                     	ds	1
  1093  0053                     ___fldiv@aexp:	
  1094                           
  1095                           ; 1 bytes @ 0x33
  1096  0053                     	ds	1
  1097  0054                     ??_ftoa1:	
  1098                           
  1099                           ; 1 bytes @ 0x34
  1100  0054                     	ds	1
  1101  0055                     ftoa1@rem:	
  1102                           
  1103                           ; 4 bytes @ 0x35
  1104  0055                     	ds	4
  1105  0059                     ftoa1@l:	
  1106                           
  1107                           ; 4 bytes @ 0x39
  1108  0059                     	ds	4
  1109  005D                     ftoa1@cp:	
  1110                           
  1111                           ; 1 bytes @ 0x3D
  1112  005D                     	ds	1
  1113  005E                     ?_printf:	
  1114  005E                     printf@f:	
  1115                           ; 2 bytes @ 0x3E
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x3E
  1119  005E                     	ds	4
  1120  0062                     ??_printf:	
  1121                           
  1122                           ; 1 bytes @ 0x42
  1123  0062                     	ds	1
  1124  0063                     printf@ap:	
  1125                           
  1126                           ; 1 bytes @ 0x43
  1127  0063                     	ds	1
  1128  0064                     printf@pb:	
  1129                           
  1130                           ; 2 bytes @ 0x44
  1131  0064                     	ds	2
  1132  0066                     ??_main:	
  1133                           
  1134                           ; 1 bytes @ 0x46
  1135  0066                     	ds	3
  1136  0069                     main@volt:	
  1137                           
  1138                           ; 4 bytes @ 0x49
  1139  0069                     	ds	4
  1140  006D                     main@adc:	
  1141                           
  1142                           ; 2 bytes @ 0x4D
  1143  006D                     	ds	2
  1144                           
  1145                           	psect	maintext
  1146  0B04                     __pmaintext:	
  1147 ;;
  1148 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1149 ;;
  1150 ;; *************** function _main *****************
  1151 ;; Defined at:
  1152 ;;		line 16 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  volt            4   73[BANK0 ] float 
  1157 ;;  adc             2   77[BANK0 ] unsigned int 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : B00/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1167 ;;      Params:         0       0       0       0
  1168 ;;      Locals:         0       6       0       0
  1169 ;;      Temps:          0       3       0       0
  1170 ;;      Totals:         0       9       0       0
  1171 ;;Total ram usage:        9 bytes
  1172 ;; Hardware stack levels required when called:    5
  1173 ;; This function calls:
  1174 ;;		_ADC_GetConversion
  1175 ;;		_SYSTEM_Initialize
  1176 ;;		___fldiv
  1177 ;;		___flmul
  1178 ;;		___xxtofl
  1179 ;;		_ftoa1
  1180 ;;		_printf
  1181 ;; This function is called by:
  1182 ;;		Startup code after reset
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _main
  1188  0B04                     _main:	
  1189                           
  1190                           ;main.c: 18:     SYSTEM_Initialize();
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1194  0B04  158A  2107  158A   	fcall	_SYSTEM_Initialize
  1195  0B07                     l145:	
  1196                           ;main.c: 20:     while(1)
  1197                           
  1198                           
  1199                           ;main.c: 21:     {;main.c: 22:         uint16_t adc = ADC_GetConversion(0);
  1200  0B07  3000               	movlw	0
  1201  0B08  158A  21B2  158A   	fcall	_ADC_GetConversion
  1202  0B0B  0871               	movf	?_ADC_GetConversion+1,w
  1203  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0B0E  00EE               	movwf	main@adc+1
  1206  0B0F  0870               	movf	?_ADC_GetConversion,w
  1207  0B10  00ED               	movwf	main@adc
  1208                           
  1209                           ;main.c: 23:         float volt = (5.0 * adc) / 1024.0;
  1210  0B11  3044               	movlw	68
  1211  0B12  00BD               	movwf	___fldiv@a+3
  1212  0B13  3080               	movlw	128
  1213  0B14  00BC               	movwf	___fldiv@a+2
  1214  0B15  3000               	movlw	0
  1215  0B16  00BB               	movwf	___fldiv@a+1
  1216  0B17  3000               	movlw	0
  1217  0B18  00BA               	movwf	___fldiv@a
  1218  0B19  3040               	movlw	64
  1219  0B1A  00A3               	movwf	___flmul@b+3
  1220  0B1B  30A0               	movlw	160
  1221  0B1C  00A2               	movwf	___flmul@b+2
  1222  0B1D  3000               	movlw	0
  1223  0B1E  00A1               	movwf	___flmul@b+1
  1224  0B1F  3000               	movlw	0
  1225  0B20  00A0               	movwf	___flmul@b
  1226  0B21  086D               	movf	main@adc,w
  1227  0B22  00F0               	movwf	___xxtofl@val
  1228  0B23  086E               	movf	main@adc+1,w
  1229  0B24  00F1               	movwf	___xxtofl@val+1
  1230  0B25  01F2               	clrf	___xxtofl@val+2
  1231  0B26  01F3               	clrf	___xxtofl@val+3
  1232  0B27  3000               	movlw	0
  1233  0B28  118A  203B  158A   	fcall	___xxtofl
  1234  0B2B  0873               	movf	?___xxtofl+3,w
  1235  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0B2E  00A7               	movwf	___flmul@a+3
  1238  0B2F  0872               	movf	?___xxtofl+2,w
  1239  0B30  00A6               	movwf	___flmul@a+2
  1240  0B31  0871               	movf	?___xxtofl+1,w
  1241  0B32  00A5               	movwf	___flmul@a+1
  1242  0B33  0870               	movf	?___xxtofl,w
  1243  0B34  00A4               	movwf	___flmul@a
  1244  0B35  118A  21A0  158A   	fcall	___flmul
  1245  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0B3A  0823               	movf	?___flmul+3,w
  1248  0B3B  00C1               	movwf	___fldiv@b+3
  1249  0B3C  0822               	movf	?___flmul+2,w
  1250  0B3D  00C0               	movwf	___fldiv@b+2
  1251  0B3E  0821               	movf	?___flmul+1,w
  1252  0B3F  00BF               	movwf	___fldiv@b+1
  1253  0B40  0820               	movf	?___flmul,w
  1254  0B41  00BE               	movwf	___fldiv@b
  1255  0B42  158A  241E  158A   	fcall	___fldiv
  1256  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0B47  083D               	movf	?___fldiv+3,w
  1259  0B48  00EC               	movwf	main@volt+3
  1260  0B49  083C               	movf	?___fldiv+2,w
  1261  0B4A  00EB               	movwf	main@volt+2
  1262  0B4B  083B               	movf	?___fldiv+1,w
  1263  0B4C  00EA               	movwf	main@volt+1
  1264  0B4D  083A               	movf	?___fldiv,w
  1265  0B4E  00E9               	movwf	main@volt
  1266                           
  1267                           ;main.c: 24:         printf("Volt :");
  1268  0B4F  3043               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1269  0B50  00DE               	movwf	printf@f
  1270  0B51  3080               	movlw	128
  1271  0B52  00DF               	movwf	printf@f+1
  1272  0B53  158A  2139  158A   	fcall	_printf
  1273                           
  1274                           ;main.c: 25:         printf(ftoa1(volt,1));
  1275  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0B58  086C               	movf	main@volt+3,w
  1278  0B59  00D1               	movwf	ftoa1@f+3
  1279  0B5A  086B               	movf	main@volt+2,w
  1280  0B5B  00D0               	movwf	ftoa1@f+2
  1281  0B5C  086A               	movf	main@volt+1,w
  1282  0B5D  00CF               	movwf	ftoa1@f+1
  1283  0B5E  0869               	movf	main@volt,w
  1284  0B5F  00CE               	movwf	ftoa1@f
  1285  0B60  3001               	movlw	1
  1286  0B61  00D2               	movwf	ftoa1@status
  1287  0B62  3000               	movlw	0
  1288  0B63  00D3               	movwf	ftoa1@status+1
  1289  0B64  118A  20DE  158A   	fcall	_ftoa1
  1290  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0B69  00DE               	movwf	printf@f
  1293  0B6A  3000               	movlw	0
  1294  0B6B  00DF               	movwf	printf@f+1
  1295  0B6C  158A  2139  158A   	fcall	_printf
  1296                           
  1297                           ;main.c: 26:         printf("\nAnalog : %d \n", adc);
  1298  0B6F  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1299  0B70  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0B71  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0B72  00DE               	movwf	printf@f
  1302  0B73  3080               	movlw	128
  1303  0B74  00DF               	movwf	printf@f+1
  1304  0B75  086E               	movf	main@adc+1,w
  1305  0B76  00E1               	movwf	?_printf+3
  1306  0B77  086D               	movf	main@adc,w
  1307  0B78  00E0               	movwf	?_printf+2
  1308  0B79  158A  2139  158A   	fcall	_printf
  1309                           
  1310                           ;main.c: 27:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  1311  0B7C  3015               	movlw	21
  1312  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0B7F  00E8               	movwf	??_main+2
  1315  0B80  304B               	movlw	75
  1316  0B81  00E7               	movwf	??_main+1
  1317  0B82  30BE               	movlw	190
  1318  0B83  00E6               	movwf	??_main
  1319  0B84                     u4197:	
  1320  0B84  0BE6               	decfsz	??_main,f
  1321  0B85  2B84               	goto	u4197
  1322  0B86  0BE7               	decfsz	??_main+1,f
  1323  0B87  2B84               	goto	u4197
  1324  0B88  0BE8               	decfsz	??_main+2,f
  1325  0B89  2B84               	goto	u4197
  1326  0B8A  2B07               	goto	l145
  1327  0B8B                     __end_of_main:	
  1328                           
  1329                           	psect	text1
  1330  0939                     __ptext1:	
  1331 ;; *************** function _printf *****************
  1332 ;; Defined at:
  1333 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  f               2   62[BANK0 ] PTR const unsigned char 
  1336 ;;		 -> ftoa1@buf(17), STR_2(15), STR_1(7), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  pb              2   68[BANK0 ] struct __prbuf
  1339 ;;  ap              1   67[BANK0 ] PTR void [1]
  1340 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2   62[BANK0 ] int 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1350 ;;      Params:         0       4       0       0
  1351 ;;      Locals:         0       3       0       0
  1352 ;;      Temps:          0       1       0       0
  1353 ;;      Totals:         0       8       0       0
  1354 ;;Total ram usage:        8 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    3
  1357 ;; This function calls:
  1358 ;;		__doprnt
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _printf
  1366  0939                     _printf:	
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1370  0939  1283               	bcf	3,5	;RP0=0, select bank0
  1371  093A  1303               	bcf	3,6	;RP1=0, select bank0
  1372  093B  01E4               	clrf	printf@pb
  1373  093C  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1374  093D  00E2               	movwf	??_printf
  1375  093E  0862               	movf	??_printf,w
  1376  093F  00E5               	movwf	low ((printf@pb| 0+1))
  1377  0940  3060               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1378  0941  00E2               	movwf	??_printf
  1379  0942  0862               	movf	??_printf,w
  1380  0943  00E3               	movwf	printf@ap
  1381                           
  1382                           ;	Return value of _printf is never used
  1383  0944  085E               	movf	printf@f,w
  1384  0945  00AA               	movwf	__doprnt@f
  1385  0946  085F               	movf	printf@f+1,w
  1386  0947  00AB               	movwf	__doprnt@f+1
  1387  0948  3063               	movlw	(low (printf@ap| 0))& (0+255)
  1388  0949  00E2               	movwf	??_printf
  1389  094A  0862               	movf	??_printf,w
  1390  094B  00AC               	movwf	__doprnt@ap
  1391  094C  3064               	movlw	(low (printf@pb| 0))& (0+255)
  1392  094D  118A  24A3         	fcall	__doprnt
  1393  094F  0008               	return
  1394  0950                     __end_of_printf:	
  1395                           
  1396                           	psect	text2
  1397  00DE                     __ptext2:	
  1398 ;; *************** function _ftoa1 *****************
  1399 ;; Defined at:
  1400 ;;		line 33 in file "main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  f               4   46[BANK0 ] float 
  1403 ;;  status          2   50[BANK0 ] PTR int 
  1404 ;;		 -> RAM(512), 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  l               4   57[BANK0 ] unsigned long 
  1407 ;;  rem             4   53[BANK0 ] unsigned long 
  1408 ;;  cp              1   61[BANK0 ] PTR unsigned char 
  1409 ;;		 -> ftoa1@buf(17), 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      PTR unsigned char 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1419 ;;      Params:         0       6       0       0
  1420 ;;      Locals:         0       9       0       0
  1421 ;;      Temps:          0       1       0       0
  1422 ;;      Totals:         0      16       0       0
  1423 ;;Total ram usage:       16 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		___flge
  1428 ;;		___flmul
  1429 ;;		___flneg
  1430 ;;		___flsub
  1431 ;;		___fltol
  1432 ;;		___xxtofl
  1433 ;;		_sprintf
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _ftoa1
  1441  00DE                     _ftoa1:	
  1442                           
  1443                           ;main.c: 33: char *ftoa1(float f, int * status);main.c: 34: {;main.c: 35:  static char b
      +                          uf[17];;main.c: 36:  char * cp = buf;
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _ftoa1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1447  00DE  30A0               	movlw	(low (ftoa1@buf| 0))& (0+255)
  1448  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1449  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1450  00E1  00D4               	movwf	??_ftoa1
  1451  00E2  0854               	movf	??_ftoa1,w
  1452  00E3  00DD               	movwf	ftoa1@cp
  1453                           
  1454                           ;main.c: 37:  unsigned long l, rem;;main.c: 39:  if(f < 0) {
  1455  00E4  0851               	movf	ftoa1@f+3,w
  1456  00E5  00F3               	movwf	___flge@ff1+3
  1457  00E6  0850               	movf	ftoa1@f+2,w
  1458  00E7  00F2               	movwf	___flge@ff1+2
  1459  00E8  084F               	movf	ftoa1@f+1,w
  1460  00E9  00F1               	movwf	___flge@ff1+1
  1461  00EA  084E               	movf	ftoa1@f,w
  1462  00EB  00F0               	movwf	___flge@ff1
  1463  00EC  3000               	movlw	0
  1464  00ED  00F7               	movwf	___flge@ff2+3
  1465  00EE  3000               	movlw	0
  1466  00EF  00F6               	movwf	___flge@ff2+2
  1467  00F0  3000               	movlw	0
  1468  00F1  00F5               	movwf	___flge@ff2+1
  1469  00F2  3000               	movlw	0
  1470  00F3  00F4               	movwf	___flge@ff2
  1471  00F4  158A  238B  118A   	fcall	___flge
  1472  00F7  1803               	btfsc	3,0
  1473  00F8  291B               	goto	l2701
  1474                           
  1475                           ;main.c: 40:   *cp++ = '-';
  1476  00F9  302D               	movlw	45
  1477  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1478  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1479  00FC  00D4               	movwf	??_ftoa1
  1480  00FD  085D               	movf	ftoa1@cp,w
  1481  00FE  0084               	movwf	4
  1482  00FF  0854               	movf	??_ftoa1,w
  1483  0100  1383               	bcf	3,7	;select IRP bank0
  1484  0101  0080               	movwf	0
  1485  0102  3001               	movlw	1
  1486  0103  00D4               	movwf	??_ftoa1
  1487  0104  0854               	movf	??_ftoa1,w
  1488  0105  07DD               	addwf	ftoa1@cp,f
  1489                           
  1490                           ;main.c: 41:   f = -f;
  1491  0106  0851               	movf	ftoa1@f+3,w
  1492  0107  00F3               	movwf	___flneg@f1+3
  1493  0108  0850               	movf	ftoa1@f+2,w
  1494  0109  00F2               	movwf	___flneg@f1+2
  1495  010A  084F               	movf	ftoa1@f+1,w
  1496  010B  00F1               	movwf	___flneg@f1+1
  1497  010C  084E               	movf	ftoa1@f,w
  1498  010D  00F0               	movwf	___flneg@f1
  1499  010E  158A  20F2  118A   	fcall	___flneg
  1500  0111  0873               	movf	?___flneg+3,w
  1501  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0114  00D1               	movwf	ftoa1@f+3
  1504  0115  0872               	movf	?___flneg+2,w
  1505  0116  00D0               	movwf	ftoa1@f+2
  1506  0117  0871               	movf	?___flneg+1,w
  1507  0118  00CF               	movwf	ftoa1@f+1
  1508  0119  0870               	movf	?___flneg,w
  1509  011A  00CE               	movwf	ftoa1@f
  1510  011B                     l2701:	
  1511                           
  1512                           ;main.c: 43:  l = (unsigned long)f;
  1513  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1514  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1515  011D  0851               	movf	ftoa1@f+3,w
  1516  011E  00BD               	movwf	___fltol@f1+3
  1517  011F  0850               	movf	ftoa1@f+2,w
  1518  0120  00BC               	movwf	___fltol@f1+2
  1519  0121  084F               	movf	ftoa1@f+1,w
  1520  0122  00BB               	movwf	___fltol@f1+1
  1521  0123  084E               	movf	ftoa1@f,w
  1522  0124  00BA               	movwf	___fltol@f1
  1523  0125  158A  2297  118A   	fcall	___fltol
  1524  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1526  012A  083D               	movf	?___fltol+3,w
  1527  012B  00DC               	movwf	ftoa1@l+3
  1528  012C  083C               	movf	?___fltol+2,w
  1529  012D  00DB               	movwf	ftoa1@l+2
  1530  012E  083B               	movf	?___fltol+1,w
  1531  012F  00DA               	movwf	ftoa1@l+1
  1532  0130  083A               	movf	?___fltol,w
  1533  0131  00D9               	movwf	ftoa1@l
  1534                           
  1535                           ;main.c: 44:  f -= (float)l;
  1536  0132  085C               	movf	ftoa1@l+3,w
  1537  0133  00F3               	movwf	___xxtofl@val+3
  1538  0134  085B               	movf	ftoa1@l+2,w
  1539  0135  00F2               	movwf	___xxtofl@val+2
  1540  0136  085A               	movf	ftoa1@l+1,w
  1541  0137  00F1               	movwf	___xxtofl@val+1
  1542  0138  0859               	movf	ftoa1@l,w
  1543  0139  00F0               	movwf	___xxtofl@val
  1544  013A  3000               	movlw	0
  1545  013B  118A  203B  118A   	fcall	___xxtofl
  1546  013E  0873               	movf	?___xxtofl+3,w
  1547  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0141  00AB               	movwf	___flsub@a+3
  1550  0142  0872               	movf	?___xxtofl+2,w
  1551  0143  00AA               	movwf	___flsub@a+2
  1552  0144  0871               	movf	?___xxtofl+1,w
  1553  0145  00A9               	movwf	___flsub@a+1
  1554  0146  0870               	movf	?___xxtofl,w
  1555  0147  00A8               	movwf	___flsub@a
  1556  0148  0851               	movf	ftoa1@f+3,w
  1557  0149  00AF               	movwf	___flsub@b+3
  1558  014A  0850               	movf	ftoa1@f+2,w
  1559  014B  00AE               	movwf	___flsub@b+2
  1560  014C  084F               	movf	ftoa1@f+1,w
  1561  014D  00AD               	movwf	___flsub@b+1
  1562  014E  084E               	movf	ftoa1@f,w
  1563  014F  00AC               	movwf	___flsub@b
  1564  0150  158A  2170  118A   	fcall	___flsub
  1565  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0155  082B               	movf	?___flsub+3,w
  1568  0156  00D1               	movwf	ftoa1@f+3
  1569  0157  082A               	movf	?___flsub+2,w
  1570  0158  00D0               	movwf	ftoa1@f+2
  1571  0159  0829               	movf	?___flsub+1,w
  1572  015A  00CF               	movwf	ftoa1@f+1
  1573  015B  0828               	movf	?___flsub,w
  1574  015C  00CE               	movwf	ftoa1@f
  1575                           
  1576                           ;main.c: 45:  rem = (unsigned long)(f * 1e6);
  1577  015D  0851               	movf	ftoa1@f+3,w
  1578  015E  00A7               	movwf	___flmul@a+3
  1579  015F  0850               	movf	ftoa1@f+2,w
  1580  0160  00A6               	movwf	___flmul@a+2
  1581  0161  084F               	movf	ftoa1@f+1,w
  1582  0162  00A5               	movwf	___flmul@a+1
  1583  0163  084E               	movf	ftoa1@f,w
  1584  0164  00A4               	movwf	___flmul@a
  1585  0165  3049               	movlw	73
  1586  0166  00A3               	movwf	___flmul@b+3
  1587  0167  3074               	movlw	116
  1588  0168  00A2               	movwf	___flmul@b+2
  1589  0169  3024               	movlw	36
  1590  016A  00A1               	movwf	___flmul@b+1
  1591  016B  3000               	movlw	0
  1592  016C  00A0               	movwf	___flmul@b
  1593  016D  118A  21A0  118A   	fcall	___flmul
  1594  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0172  0823               	movf	?___flmul+3,w
  1597  0173  00BD               	movwf	___fltol@f1+3
  1598  0174  0822               	movf	?___flmul+2,w
  1599  0175  00BC               	movwf	___fltol@f1+2
  1600  0176  0821               	movf	?___flmul+1,w
  1601  0177  00BB               	movwf	___fltol@f1+1
  1602  0178  0820               	movf	?___flmul,w
  1603  0179  00BA               	movwf	___fltol@f1
  1604  017A  158A  2297  118A   	fcall	___fltol
  1605  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1606  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1607  017F  083D               	movf	?___fltol+3,w
  1608  0180  00D8               	movwf	ftoa1@rem+3
  1609  0181  083C               	movf	?___fltol+2,w
  1610  0182  00D7               	movwf	ftoa1@rem+2
  1611  0183  083B               	movf	?___fltol+1,w
  1612  0184  00D6               	movwf	ftoa1@rem+1
  1613  0185  083A               	movf	?___fltol,w
  1614  0186  00D5               	movwf	ftoa1@rem
  1615                           
  1616                           ;main.c: 46:  sprintf(cp, "%lu.%2.2lu", l, rem);
  1617  0187  3038               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1618  0188  00D4               	movwf	??_ftoa1
  1619  0189  0854               	movf	??_ftoa1,w
  1620  018A  00C0               	movwf	sprintf@f
  1621  018B  085C               	movf	ftoa1@l+3,w
  1622  018C  00C4               	movwf	?_sprintf+4
  1623  018D  085B               	movf	ftoa1@l+2,w
  1624  018E  00C3               	movwf	?_sprintf+3
  1625  018F  085A               	movf	ftoa1@l+1,w
  1626  0190  00C2               	movwf	?_sprintf+2
  1627  0191  0859               	movf	ftoa1@l,w
  1628  0192  00C1               	movwf	?_sprintf+1
  1629  0193  0858               	movf	ftoa1@rem+3,w
  1630  0194  00C8               	movwf	?_sprintf+8
  1631  0195  0857               	movf	ftoa1@rem+2,w
  1632  0196  00C7               	movwf	?_sprintf+7
  1633  0197  0856               	movf	ftoa1@rem+1,w
  1634  0198  00C6               	movwf	?_sprintf+6
  1635  0199  0855               	movf	ftoa1@rem,w
  1636  019A  00C5               	movwf	?_sprintf+5
  1637  019B  085D               	movf	ftoa1@cp,w
  1638  019C  158A  2150         	fcall	_sprintf
  1639                           
  1640                           ;main.c: 47:  return buf;
  1641  019E  30A0               	movlw	(low (ftoa1@buf| 0))& (0+255)
  1642  019F  0008               	return
  1643  01A0                     __end_of_ftoa1:	
  1644                           
  1645                           	psect	text3
  1646  0950                     __ptext3:	
  1647 ;; *************** function _sprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  wh              1    wreg     PTR unsigned char 
  1652 ;;		 -> ftoa1@buf(17), 
  1653 ;;  f               1   32[BANK0 ] PTR const unsigned char 
  1654 ;;		 -> STR_3(11), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  wh              1   42[BANK0 ] PTR unsigned char 
  1657 ;;		 -> ftoa1@buf(17), 
  1658 ;;  pb              2   44[BANK0 ] struct __prbuf
  1659 ;;  ap              1   43[BANK0 ] PTR void [1]
  1660 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2   32[BANK0 ] int 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       9       0       0
  1671 ;;      Locals:         0       4       0       0
  1672 ;;      Temps:          0       1       0       0
  1673 ;;      Totals:         0      14       0       0
  1674 ;;Total ram usage:       14 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    3
  1677 ;; This function calls:
  1678 ;;		__doprnt
  1679 ;; This function is called by:
  1680 ;;		_ftoa1
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _sprintf
  1686  0950                     _sprintf:	
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1690                           ;sprintf@wh stored from wreg
  1691  0950  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0951  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0952  00CA               	movwf	sprintf@wh
  1694  0953  084A               	movf	sprintf@wh,w
  1695  0954  00C9               	movwf	??_sprintf
  1696  0955  0849               	movf	??_sprintf,w
  1697  0956  00CC               	movwf	sprintf@pb
  1698  0957  01CD               	clrf	low ((sprintf@pb| 0+1))
  1699  0958  3041               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1700  0959  00C9               	movwf	??_sprintf
  1701  095A  0849               	movf	??_sprintf,w
  1702  095B  00CB               	movwf	sprintf@ap
  1703  095C  0840               	movf	sprintf@f,w
  1704  095D  00AA               	movwf	__doprnt@f
  1705  095E  3000               	movlw	0
  1706  095F  1D03               	btfss	3,2
  1707  0960  3080               	movlw	128
  1708  0961  00AB               	movwf	__doprnt@f+1
  1709  0962  304B               	movlw	(low (sprintf@ap| 0))& (0+255)
  1710  0963  00C9               	movwf	??_sprintf
  1711  0964  0849               	movf	??_sprintf,w
  1712  0965  00AC               	movwf	__doprnt@ap
  1713  0966  304C               	movlw	(low (sprintf@pb| 0))& (0+255)
  1714  0967  118A  24A3         	fcall	__doprnt
  1715  0969  1283               	bcf	3,5	;RP0=0, select bank0
  1716  096A  1303               	bcf	3,6	;RP1=0, select bank0
  1717  096B  084C               	movf	sprintf@pb,w
  1718  096C  0084               	movwf	4
  1719  096D  1383               	bcf	3,7	;select IRP bank0
  1720  096E  0180               	clrf	0
  1721  096F  0008               	return
  1722  0970                     __end_of_sprintf:	
  1723                           
  1724                           	psect	text4
  1725  04A3                     __ptext4:	
  1726 ;; *************** function __doprnt *****************
  1727 ;; Defined at:
  1728 ;;		line 466 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  pb              1    wreg     PTR struct __prbuf
  1731 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1732 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  1733 ;;		 -> STR_3(11), ftoa1@buf(17), STR_2(15), STR_1(7), 
  1734 ;;  ap              1   12[BANK0 ] PTR PTR void 
  1735 ;;		 -> sprintf@ap(1), printf@ap(1), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  pb              1   31[BANK0 ] PTR struct __prbuf
  1738 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1739 ;;  val             4   21[BANK0 ] unsigned long 
  1740 ;;  tmpval          4    0        struct .
  1741 ;;  prec            2   28[BANK0 ] int 
  1742 ;;  width           2   26[BANK0 ] int 
  1743 ;;  len             2   19[BANK0 ] unsigned int 
  1744 ;;  c               1   30[BANK0 ] unsigned char 
  1745 ;;  flag            1   25[BANK0 ] unsigned char 
  1746 ;;  cp              1   18[BANK0 ] PTR const unsigned char 
  1747 ;;		 -> _doprnt@c(1), 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2   10[BANK0 ] int 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1757 ;;      Params:         0       3       0       0
  1758 ;;      Locals:         0      14       0       0
  1759 ;;      Temps:          0       5       0       0
  1760 ;;      Totals:         0      22       0       0
  1761 ;;Total ram usage:       22 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    2
  1764 ;; This function calls:
  1765 ;;		Absolute function
  1766 ;;		___lldiv
  1767 ;;		___llmod
  1768 ;;		___wmul
  1769 ;;		_isdigit
  1770 ;;		_putch
  1771 ;; This function is called by:
  1772 ;;		_printf
  1773 ;;		_sprintf
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function __doprnt
  1779  04A3                     __doprnt:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1783                           ;__doprnt@pb stored from wreg
  1784  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1785  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1786  04A5  00BF               	movwf	__doprnt@pb
  1787  04A6                     l2153:	
  1788                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 466: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.05\pic\sources\c90\common\doprnt.c: 467: {;C:\Program Files\Microchip\xc8\v2.05
      +                          \pic\sources\c90\common\doprnt.c: 507:  char c;;C:\Program Files\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 509:  int width;;C:\Program Files\Microchip\xc8\v2.05\pic\
      +                          sources\c90\common\doprnt.c: 512:  int prec;;C:\Program Files\Microchip\xc8\v2.05\pic\so
      +                          urces\c90\common\doprnt.c: 520:  unsigned char flag;
  1789                           
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while((c = 
      +                          *f++)) {
  1792  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1793  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1794  04A8  082B               	movf	__doprnt@f+1,w
  1795  04A9  00AE               	movwf	??__doprnt+1
  1796  04AA  082A               	movf	__doprnt@f,w
  1797  04AB  00AD               	movwf	??__doprnt
  1798  04AC  0AAA               	incf	__doprnt@f,f
  1799  04AD  1903               	skipnz
  1800  04AE  0AAB               	incf	__doprnt@f+1,f
  1801  04AF  082E               	movf	??__doprnt+1,w
  1802  04B0  00FF               	movwf	127
  1803  04B1  082D               	movf	??__doprnt,w
  1804  04B2  0084               	movwf	4
  1805  04B3  158A  2000  118A   	fcall	stringtab
  1806  04B6  00AF               	movwf	??__doprnt+2
  1807  04B7  082F               	movf	??__doprnt+2,w
  1808  04B8  00BE               	movwf	__doprnt@c
  1809  04B9  083E               	movf	__doprnt@c,w
  1810  04BA  1903               	btfsc	3,2
  1811  04BB  2FF4               	goto	l2155
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c != '%
      +                          ')
  1814  04BC  3025               	movlw	37
  1815  04BD  063E               	xorwf	__doprnt@c,w
  1816  04BE  1903               	btfsc	3,2
  1817  04BF  2CE2               	goto	l1991
  1818  04C0  0A3F               	incf	__doprnt@pb,w
  1819  04C1  0084               	movwf	4
  1820  04C2  1383               	bcf	3,7	;select IRP bank0
  1821  04C3  0800               	movf	0,w
  1822  04C4  1903               	btfsc	3,2
  1823  04C5  2CD3               	goto	l1987
  1824  04C6  083E               	movf	__doprnt@c,w
  1825  04C7  00AD               	movwf	??__doprnt
  1826  04C8  082D               	movf	??__doprnt,w
  1827  04C9  00F1               	movwf	putch@txData
  1828  04CA  0A3F               	incf	__doprnt@pb,w
  1829  04CB  0084               	movwf	4
  1830  04CC  0800               	movf	0,w
  1831  04CD  118A  2002  118A   	fcall	fptable
  1832  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  1833  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  1834  04D2  2CA6               	goto	l2153
  1835  04D3                     l1987:	
  1836  04D3  083E               	movf	__doprnt@c,w
  1837  04D4  00AD               	movwf	??__doprnt
  1838  04D5  083F               	movf	__doprnt@pb,w
  1839  04D6  0084               	movwf	4
  1840  04D7  0800               	movf	0,w
  1841  04D8  0084               	movwf	4
  1842  04D9  082D               	movf	??__doprnt,w
  1843  04DA  0080               	movwf	0
  1844  04DB  3001               	movlw	1
  1845  04DC  00AD               	movwf	??__doprnt
  1846  04DD  083F               	movf	__doprnt@pb,w
  1847  04DE  0084               	movwf	4
  1848  04DF  082D               	movf	??__doprnt,w
  1849  04E0  0780               	addwf	0,f
  1850  04E1  2CA6               	goto	l2153
  1851  04E2                     l1991:	
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 558:   width = 0;
  1854  04E2  01BA               	clrf	__doprnt@width
  1855  04E3  01BB               	clrf	__doprnt@width+1
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag = 0;
  1858  04E4  01B9               	clrf	__doprnt@flag
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 609:   if(isdigit
      +                          ((unsigned)*f)) {
  1861  04E5  082B               	movf	__doprnt@f+1,w
  1862  04E6  00FF               	movwf	127
  1863  04E7  082A               	movf	__doprnt@f,w
  1864  04E8  0084               	movwf	4
  1865  04E9  158A  2000  118A   	fcall	stringtab
  1866  04EC  118A  200A  118A   	fcall	_isdigit
  1867  04EF  1C03               	btfss	3,0
  1868  04F0  2D2D               	goto	l2005
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 610:    width = 0
      +                          ;
  1871  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1872  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1873  04F3  01BA               	clrf	__doprnt@width
  1874  04F4  01BB               	clrf	__doprnt@width+1
  1875  04F5                     l1997:	
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 612:     width *=
      +                           10;
  1878  04F5  300A               	movlw	10
  1879  04F6  00F0               	movwf	___wmul@multiplier
  1880  04F7  3000               	movlw	0
  1881  04F8  00F1               	movwf	___wmul@multiplier+1
  1882  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1883  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1884  04FB  083B               	movf	__doprnt@width+1,w
  1885  04FC  00F3               	movwf	___wmul@multiplicand+1
  1886  04FD  083A               	movf	__doprnt@width,w
  1887  04FE  00F2               	movwf	___wmul@multiplicand
  1888  04FF  158A  2191  118A   	fcall	___wmul
  1889  0502  0871               	movf	?___wmul+1,w
  1890  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0505  00BB               	movwf	__doprnt@width+1
  1893  0506  0870               	movf	?___wmul,w
  1894  0507  00BA               	movwf	__doprnt@width
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 613:        width
      +                           += *f++ - '0';
  1897  0508  082B               	movf	__doprnt@f+1,w
  1898  0509  00FF               	movwf	127
  1899  050A  082A               	movf	__doprnt@f,w
  1900  050B  0084               	movwf	4
  1901  050C  158A  2000  118A   	fcall	stringtab
  1902  050F  3ED0               	addlw	208
  1903  0510  00AD               	movwf	??__doprnt
  1904  0511  30FF               	movlw	255
  1905  0512  1803               	skipnc
  1906  0513  3000               	movlw	0
  1907  0514  00AE               	movwf	??__doprnt+1
  1908  0515  082D               	movf	??__doprnt,w
  1909  0516  07BA               	addwf	__doprnt@width,f
  1910  0517  1803               	skipnc
  1911  0518  0ABB               	incf	__doprnt@width+1,f
  1912  0519  082E               	movf	??__doprnt+1,w
  1913  051A  07BB               	addwf	__doprnt@width+1,f
  1914  051B  3001               	movlw	1
  1915  051C  07AA               	addwf	__doprnt@f,f
  1916  051D  1803               	skipnc
  1917  051E  0AAB               	incf	__doprnt@f+1,f
  1918  051F  3000               	movlw	0
  1919  0520  07AB               	addwf	__doprnt@f+1,f
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 614:    } while(i
      +                          sdigit((unsigned)*f));
  1922  0521  082B               	movf	__doprnt@f+1,w
  1923  0522  00FF               	movwf	127
  1924  0523  082A               	movf	__doprnt@f,w
  1925  0524  0084               	movwf	4
  1926  0525  158A  2000  118A   	fcall	stringtab
  1927  0528  118A  200A  118A   	fcall	_isdigit
  1928  052B  1803               	btfsc	3,0
  1929  052C  2CF5               	goto	l1997
  1930  052D                     l2005:	
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*f == '
      +                          .') {
  1933  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1934  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1935  052F  082B               	movf	__doprnt@f+1,w
  1936  0530  00FF               	movwf	127
  1937  0531  082A               	movf	__doprnt@f,w
  1938  0532  0084               	movwf	4
  1939  0533  158A  2000  118A   	fcall	stringtab
  1940  0536  3A2E               	xorlw	46
  1941  0537  1D03               	skipz
  1942  0538  2D79               	goto	l2017
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++;
  1945  0539  3001               	movlw	1
  1946  053A  07AA               	addwf	__doprnt@f,f
  1947  053B  1803               	skipnc
  1948  053C  0AAB               	incf	__doprnt@f+1,f
  1949  053D  3000               	movlw	0
  1950  053E  07AB               	addwf	__doprnt@f+1,f
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec = 0;
  1953  053F  01BC               	clrf	__doprnt@prec
  1954  0540  01BD               	clrf	__doprnt@prec+1
  1955  0541                     l2015:	
  1956                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     while(is
      +                          digit((unsigned)*f))
  1957                           
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     while(is
      +                          digit((unsigned)*f))
  1960  0541  082B               	movf	__doprnt@f+1,w
  1961  0542  00FF               	movwf	127
  1962  0543  082A               	movf	__doprnt@f,w
  1963  0544  0084               	movwf	4
  1964  0545  158A  2000  118A   	fcall	stringtab
  1965  0548  118A  200A  118A   	fcall	_isdigit
  1966  054B  1C03               	btfss	3,0
  1967  054C  2E11               	goto	l2057
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      prec = 
      +                          prec*10 + *f++ - '0';
  1970  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1971  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1972  054F  083D               	movf	__doprnt@prec+1,w
  1973  0550  00F1               	movwf	___wmul@multiplier+1
  1974  0551  083C               	movf	__doprnt@prec,w
  1975  0552  00F0               	movwf	___wmul@multiplier
  1976  0553  300A               	movlw	10
  1977  0554  00F2               	movwf	___wmul@multiplicand
  1978  0555  3000               	movlw	0
  1979  0556  00F3               	movwf	___wmul@multiplicand+1
  1980  0557  158A  2191  118A   	fcall	___wmul
  1981  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1982  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1983  055C  082B               	movf	__doprnt@f+1,w
  1984  055D  00FF               	movwf	127
  1985  055E  082A               	movf	__doprnt@f,w
  1986  055F  0084               	movwf	4
  1987  0560  158A  2000  118A   	fcall	stringtab
  1988  0563  0770               	addwf	?___wmul,w
  1989  0564  00AD               	movwf	??__doprnt
  1990  0565  3000               	movlw	0
  1991  0566  1803               	skipnc
  1992  0567  3001               	movlw	1
  1993  0568  0771               	addwf	?___wmul+1,w
  1994  0569  00AE               	movwf	??__doprnt+1
  1995  056A  082D               	movf	??__doprnt,w
  1996  056B  3ED0               	addlw	208
  1997  056C  00BC               	movwf	__doprnt@prec
  1998  056D  082E               	movf	??__doprnt+1,w
  1999  056E  1803               	skipnc
  2000  056F  3E01               	addlw	1
  2001  0570  3EFF               	addlw	255
  2002  0571  00BD               	movwf	__doprnt@prec+1
  2003  0572  3001               	movlw	1
  2004  0573  07AA               	addwf	__doprnt@f,f
  2005  0574  1803               	skipnc
  2006  0575  0AAB               	incf	__doprnt@f+1,f
  2007  0576  3000               	movlw	0
  2008  0577  07AB               	addwf	__doprnt@f+1,f
  2009  0578  2D41               	goto	l2015
  2010  0579                     l2017:	
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    prec = 0;
  2013  0579  01BC               	clrf	__doprnt@prec
  2014  057A  01BD               	clrf	__doprnt@prec+1
  2015  057B  2E11               	goto	l2057
  2016  057C                     l264:	
  2017                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 660:   case 'l':
  2018                           
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 662:    flag |= 0
      +                          x10;
  2021  057C  1639               	bsf	__doprnt@flag,4
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 663:    goto loop
      +                          ;
  2024  057D  2E11               	goto	l2057
  2025  057E                     l2019:	
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 772:    if(prec &
      +                          & prec < len)
  2028  057E  083C               	movf	__doprnt@prec,w
  2029  057F  043D               	iorwf	__doprnt@prec+1,w
  2030  0580  1903               	btfsc	3,2
  2031  0581  2D8E               	goto	l269
  2032  0582  0834               	movf	__doprnt@len+1,w
  2033  0583  023D               	subwf	__doprnt@prec+1,w
  2034  0584  1D03               	skipz
  2035  0585  2D88               	goto	u2395
  2036  0586  0833               	movf	__doprnt@len,w
  2037  0587  023C               	subwf	__doprnt@prec,w
  2038  0588                     u2395:	
  2039  0588  1803               	skipnc
  2040  0589  2D8E               	goto	l269
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 773:     len = pr
      +                          ec;
  2043  058A  083D               	movf	__doprnt@prec+1,w
  2044  058B  00B4               	movwf	__doprnt@len+1
  2045  058C  083C               	movf	__doprnt@prec,w
  2046  058D  00B3               	movwf	__doprnt@len
  2047  058E                     l269:	
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 776:    if(width 
      +                          > len)
  2050  058E  083B               	movf	__doprnt@width+1,w
  2051  058F  0234               	subwf	__doprnt@len+1,w
  2052  0590  1D03               	skipz
  2053  0591  2D94               	goto	u2405
  2054  0592  083A               	movf	__doprnt@width,w
  2055  0593  0233               	subwf	__doprnt@len,w
  2056  0594                     u2405:	
  2057  0594  1803               	skipnc
  2058  0595  2D9D               	goto	l2027
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 777:     width -=
      +                           len;
  2061  0596  0833               	movf	__doprnt@len,w
  2062  0597  02BA               	subwf	__doprnt@width,f
  2063  0598  0834               	movf	__doprnt@len+1,w
  2064  0599  1C03               	skipc
  2065  059A  03BB               	decf	__doprnt@width+1,f
  2066  059B  02BB               	subwf	__doprnt@width+1,f
  2067  059C  2D9F               	goto	l2037
  2068  059D                     l2027:	
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 779:     width = 
      +                          0;
  2071  059D  01BA               	clrf	__doprnt@width
  2072  059E  01BB               	clrf	__doprnt@width+1
  2073  059F                     l2037:	
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 783:     while(wi
      +                          dth--)
  2076  059F  30FF               	movlw	255
  2077  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2078  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2079  05A2  07BA               	addwf	__doprnt@width,f
  2080  05A3  1803               	skipnc
  2081  05A4  0ABB               	incf	__doprnt@width+1,f
  2082  05A5  30FF               	movlw	255
  2083  05A6  07BB               	addwf	__doprnt@width+1,f
  2084  05A7  0A3A               	incf	__doprnt@width,w
  2085  05A8  1903               	btfsc	3,2
  2086  05A9  0A3B               	incf	__doprnt@width+1,w
  2087  05AA  1903               	btfsc	3,2
  2088  05AB  2DF9               	goto	l2051
  2089  05AC  0A3F               	incf	__doprnt@pb,w
  2090  05AD  0084               	movwf	4
  2091  05AE  1383               	bcf	3,7	;select IRP bank0
  2092  05AF  0800               	movf	0,w
  2093  05B0  1903               	btfsc	3,2
  2094  05B1  2DBD               	goto	l2033
  2095  05B2  3020               	movlw	32
  2096  05B3  00AD               	movwf	??__doprnt
  2097  05B4  082D               	movf	??__doprnt,w
  2098  05B5  00F1               	movwf	putch@txData
  2099  05B6  0A3F               	incf	__doprnt@pb,w
  2100  05B7  0084               	movwf	4
  2101  05B8  0800               	movf	0,w
  2102  05B9  118A  2002  118A   	fcall	fptable
  2103  05BC  2D9F               	goto	l2037
  2104  05BD                     l2033:	
  2105  05BD  3020               	movlw	32
  2106  05BE  00AD               	movwf	??__doprnt
  2107  05BF  083F               	movf	__doprnt@pb,w
  2108  05C0  0084               	movwf	4
  2109  05C1  0800               	movf	0,w
  2110  05C2  0084               	movwf	4
  2111  05C3  082D               	movf	??__doprnt,w
  2112  05C4  0080               	movwf	0
  2113  05C5  3001               	movlw	1
  2114  05C6  00AD               	movwf	??__doprnt
  2115  05C7  083F               	movf	__doprnt@pb,w
  2116  05C8  0084               	movwf	4
  2117  05C9  082D               	movf	??__doprnt,w
  2118  05CA  0780               	addwf	0,f
  2119  05CB  2D9F               	goto	l2037
  2120  05CC                     l2039:	
  2121  05CC  0A3F               	incf	__doprnt@pb,w
  2122  05CD  0084               	movwf	4
  2123  05CE  1383               	bcf	3,7	;select IRP bank0
  2124  05CF  0800               	movf	0,w
  2125  05D0  1903               	btfsc	3,2
  2126  05D1  2DE5               	goto	l2045
  2127  05D2  0832               	movf	__doprnt@cp,w
  2128  05D3  0084               	movwf	4
  2129  05D4  0800               	movf	0,w
  2130  05D5  00AD               	movwf	??__doprnt
  2131  05D6  082D               	movf	??__doprnt,w
  2132  05D7  00F1               	movwf	putch@txData
  2133  05D8  0A3F               	incf	__doprnt@pb,w
  2134  05D9  0084               	movwf	4
  2135  05DA  0800               	movf	0,w
  2136  05DB  118A  2002  118A   	fcall	fptable
  2137  05DE  3001               	movlw	1
  2138  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2139  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2140  05E1  00AD               	movwf	??__doprnt
  2141  05E2  082D               	movf	??__doprnt,w
  2142  05E3  07B2               	addwf	__doprnt@cp,f
  2143  05E4  2DF9               	goto	l2051
  2144  05E5                     l2045:	
  2145  05E5  0832               	movf	__doprnt@cp,w
  2146  05E6  0084               	movwf	4
  2147  05E7  0800               	movf	0,w
  2148  05E8  00AD               	movwf	??__doprnt
  2149  05E9  083F               	movf	__doprnt@pb,w
  2150  05EA  0084               	movwf	4
  2151  05EB  0800               	movf	0,w
  2152  05EC  0084               	movwf	4
  2153  05ED  082D               	movf	??__doprnt,w
  2154  05EE  0080               	movwf	0
  2155  05EF  3001               	movlw	1
  2156  05F0  00AD               	movwf	??__doprnt
  2157  05F1  082D               	movf	??__doprnt,w
  2158  05F2  07B2               	addwf	__doprnt@cp,f
  2159  05F3  3001               	movlw	1
  2160  05F4  00AD               	movwf	??__doprnt
  2161  05F5  083F               	movf	__doprnt@pb,w
  2162  05F6  0084               	movwf	4
  2163  05F7  082D               	movf	??__doprnt,w
  2164  05F8  0780               	addwf	0,f
  2165  05F9                     l2051:	
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 786:    while(len
      +                          --)
  2168  05F9  3001               	movlw	1
  2169  05FA  02B3               	subwf	__doprnt@len,f
  2170  05FB  3000               	movlw	0
  2171  05FC  1C03               	skipc
  2172  05FD  03B4               	decf	__doprnt@len+1,f
  2173  05FE  02B4               	subwf	__doprnt@len+1,f
  2174  05FF  0A33               	incf	__doprnt@len,w
  2175  0600  1D03               	skipz
  2176  0601  2DCC               	goto	l2039
  2177  0602  0A34               	incf	__doprnt@len+1,w
  2178  0603  1903               	btfsc	3,2
  2179  0604  2CA6               	goto	l2153
  2180  0605  2DCC               	goto	l2039
  2181  0606                     l2053:	
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 824:    cp = (cha
      +                          r *)&c;
  2184  0606  303E               	movlw	(low (__doprnt@c| 0))& (0+255)
  2185  0607  00AD               	movwf	??__doprnt
  2186  0608  082D               	movf	??__doprnt,w
  2187  0609  00B2               	movwf	__doprnt@cp
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 825:    len = 1;
  2190  060A  3001               	movlw	1
  2191  060B  00B3               	movwf	__doprnt@len
  2192  060C  3000               	movlw	0
  2193  060D  00B4               	movwf	__doprnt@len+1
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 826:    goto dost
      +                          ring;
  2196  060E  2D7E               	goto	l2019
  2197  060F                     l287:	
  2198                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 836:   case 'u':
  2199                           
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 837:    flag |= 0
      +                          x40;
  2202  060F  1739               	bsf	__doprnt@flag,6
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 838:    break;
  2205  0610  2E3A               	goto	l267
  2206  0611                     l2057:	
  2207  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0613  082B               	movf	__doprnt@f+1,w
  2210  0614  00AE               	movwf	??__doprnt+1
  2211  0615  082A               	movf	__doprnt@f,w
  2212  0616  00AD               	movwf	??__doprnt
  2213  0617  0AAA               	incf	__doprnt@f,f
  2214  0618  1903               	skipnz
  2215  0619  0AAB               	incf	__doprnt@f+1,f
  2216  061A  082E               	movf	??__doprnt+1,w
  2217  061B  00FF               	movwf	127
  2218  061C  082D               	movf	??__doprnt,w
  2219  061D  0084               	movwf	4
  2220  061E  158A  2000  118A   	fcall	stringtab
  2221  0621  00BE               	movwf	__doprnt@c
  2222  0622  00AF               	movwf	??__doprnt+2
  2223  0623  01B0               	clrf	??__doprnt+3
  2224                           
  2225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 1, Range of values is 0 to 0
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte            4     3 (average)
  2231                           ; direct_byte            9     7 (fixed)
  2232                           ; jumptable            260     6 (fixed)
  2233                           ;	Chosen strategy is simple_byte
  2234  0624  0830               	movf	??__doprnt+3,w
  2235  0625  3A00               	xorlw	0	; case 0
  2236  0626  1903               	skipnz
  2237  0627  2E29               	goto	l2887
  2238  0628  2E06               	goto	l2053
  2239  0629                     l2887:	
  2240                           
  2241                           ; Switch size 1, requested type "simple"
  2242                           ; Number of cases is 5, Range of values is 0 to 117
  2243                           ; switch strategies available:
  2244                           ; Name         Instructions Cycles
  2245                           ; simple_byte           16     9 (average)
  2246                           ; direct_byte          243     7 (fixed)
  2247                           ; jumptable            260     6 (fixed)
  2248                           ;	Chosen strategy is simple_byte
  2249  0629  082F               	movf	??__doprnt+2,w
  2250  062A  3A00               	xorlw	0	; case 0
  2251  062B  1903               	skipnz
  2252  062C  2FF4               	goto	l2155
  2253  062D  3A64               	xorlw	100	; case 100
  2254  062E  1903               	skipnz
  2255  062F  2E3A               	goto	l267
  2256  0630  3A0D               	xorlw	13	; case 105
  2257  0631  1903               	skipnz
  2258  0632  2E3A               	goto	l267
  2259  0633  3A05               	xorlw	5	; case 108
  2260  0634  1903               	skipnz
  2261  0635  2D7C               	goto	l264
  2262  0636  3A19               	xorlw	25	; case 117
  2263  0637  1903               	skipnz
  2264  0638  2E0F               	goto	l287
  2265  0639  2E06               	goto	l2053
  2266  063A                     l267:	
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1270:   if((flag 
      +                          & 0x40) == 0x00)
  2269  063A  1B39               	btfsc	__doprnt@flag,6
  2270  063B  2E7B               	goto	l288
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1274:    if(flag & 0x10)
  2273  063C  1E39               	btfss	__doprnt@flag,4
  2274  063D  2E52               	goto	l2063
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1275:     val = (
      +                          *(long *)__va_arg((*(long **)ap), (long)0));
  2277  063E  082C               	movf	__doprnt@ap,w
  2278  063F  0084               	movwf	4
  2279  0640  1383               	bcf	3,7	;select IRP bank0
  2280  0641  0800               	movf	0,w
  2281  0642  00AD               	movwf	??__doprnt
  2282  0643  3004               	movlw	4
  2283  0644  0780               	addwf	0,f
  2284  0645  082D               	movf	??__doprnt,w
  2285  0646  0084               	movwf	4
  2286  0647  0800               	movf	0,w
  2287  0648  00B5               	movwf	__doprnt@val
  2288  0649  0A84               	incf	4,f
  2289  064A  0800               	movf	0,w
  2290  064B  00B6               	movwf	__doprnt@val+1
  2291  064C  0A84               	incf	4,f
  2292  064D  0800               	movf	0,w
  2293  064E  00B7               	movwf	__doprnt@val+2
  2294  064F  0A84               	incf	4,f
  2295  0650  0800               	movf	0,w
  2296  0651  2E68               	goto	L1
  2297  0652                     l2063:	
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val = (
      +                          long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2300  0652  082C               	movf	__doprnt@ap,w
  2301  0653  0084               	movwf	4
  2302  0654  1383               	bcf	3,7	;select IRP bank0
  2303  0655  0800               	movf	0,w
  2304  0656  00AD               	movwf	??__doprnt
  2305  0657  3002               	movlw	2
  2306  0658  0780               	addwf	0,f
  2307  0659  082D               	movf	??__doprnt,w
  2308  065A  0084               	movwf	4
  2309  065B  0800               	movf	0,w
  2310  065C  00AE               	movwf	??__doprnt+1
  2311  065D  0A84               	incf	4,f
  2312  065E  0800               	movf	0,w
  2313  065F  00AF               	movwf	??__doprnt+2
  2314  0660  082E               	movf	??__doprnt+1,w
  2315  0661  00B5               	movwf	__doprnt@val
  2316  0662  082F               	movf	??__doprnt+2,w
  2317  0663  00B6               	movwf	__doprnt@val+1
  2318  0664  3000               	movlw	0
  2319  0665  1BB6               	btfsc	__doprnt@val+1,7
  2320  0666  30FF               	movlw	255
  2321  0667  00B7               	movwf	__doprnt@val+2
  2322  0668                     L1:	
  2323  0668  00B8               	movwf	__doprnt@val+3
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if((long
      +                          )val < 0) {
  2326  0669  1FB8               	btfss	__doprnt@val+3,7
  2327  066A  2EA6               	goto	l2075
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     flag |=
      +                           0x03;
  2330  066B  3003               	movlw	3
  2331  066C  00AD               	movwf	??__doprnt
  2332  066D  082D               	movf	??__doprnt,w
  2333  066E  04B9               	iorwf	__doprnt@flag,f
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     val = -
      +                          val;
  2336  066F  09B5               	comf	__doprnt@val,f
  2337  0670  09B6               	comf	__doprnt@val+1,f
  2338  0671  09B7               	comf	__doprnt@val+2,f
  2339  0672  09B8               	comf	__doprnt@val+3,f
  2340  0673  0AB5               	incf	__doprnt@val,f
  2341  0674  1903               	skipnz
  2342  0675  0AB6               	incf	__doprnt@val+1,f
  2343  0676  1903               	skipnz
  2344  0677  0AB7               	incf	__doprnt@val+2,f
  2345  0678  1903               	skipnz
  2346  0679  0AB8               	incf	__doprnt@val+3,f
  2347  067A  2EA6               	goto	l2075
  2348  067B                     l288:	
  2349                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1287:   else
  2350                           
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1292:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1300:     if(flag & 0x10)
  2353  067B  1E39               	btfss	__doprnt@flag,4
  2354  067C  2E92               	goto	l2073
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1301:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  2357  067D  082C               	movf	__doprnt@ap,w
  2358  067E  0084               	movwf	4
  2359  067F  1383               	bcf	3,7	;select IRP bank0
  2360  0680  0800               	movf	0,w
  2361  0681  00AD               	movwf	??__doprnt
  2362  0682  3004               	movlw	4
  2363  0683  0780               	addwf	0,f
  2364  0684  082D               	movf	??__doprnt,w
  2365  0685  0084               	movwf	4
  2366  0686  0800               	movf	0,w
  2367  0687  00B5               	movwf	__doprnt@val
  2368  0688  0A84               	incf	4,f
  2369  0689  0800               	movf	0,w
  2370  068A  00B6               	movwf	__doprnt@val+1
  2371  068B  0A84               	incf	4,f
  2372  068C  0800               	movf	0,w
  2373  068D  00B7               	movwf	__doprnt@val+2
  2374  068E  0A84               	incf	4,f
  2375  068F  0800               	movf	0,w
  2376  0690  00B8               	movwf	__doprnt@val+3
  2377  0691  2EA6               	goto	l2075
  2378  0692                     l2073:	
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1305:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2381  0692  082C               	movf	__doprnt@ap,w
  2382  0693  0084               	movwf	4
  2383  0694  1383               	bcf	3,7	;select IRP bank0
  2384  0695  0800               	movf	0,w
  2385  0696  00AD               	movwf	??__doprnt
  2386  0697  3002               	movlw	2
  2387  0698  0780               	addwf	0,f
  2388  0699  082D               	movf	??__doprnt,w
  2389  069A  0084               	movwf	4
  2390  069B  0800               	movf	0,w
  2391  069C  00AE               	movwf	??__doprnt+1
  2392  069D  0A84               	incf	4,f
  2393  069E  0800               	movf	0,w
  2394  069F  00AF               	movwf	??__doprnt+2
  2395  06A0  082E               	movf	??__doprnt+1,w
  2396  06A1  00B5               	movwf	__doprnt@val
  2397  06A2  082F               	movf	??__doprnt+2,w
  2398  06A3  00B6               	movwf	__doprnt@val+1
  2399  06A4  01B7               	clrf	__doprnt@val+2
  2400  06A5  01B8               	clrf	__doprnt@val+3
  2401  06A6                     l2075:	
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(prec =
      +                          = 0 && val == 0)
  2404  06A6  083C               	movf	__doprnt@prec,w
  2405  06A7  043D               	iorwf	__doprnt@prec+1,w
  2406  06A8  1D03               	btfss	3,2
  2407  06A9  2EB6               	goto	l2081
  2408  06AA  0838               	movf	__doprnt@val+3,w
  2409  06AB  0437               	iorwf	__doprnt@val+2,w
  2410  06AC  0436               	iorwf	__doprnt@val+1,w
  2411  06AD  0435               	iorwf	__doprnt@val,w
  2412  06AE  1D03               	skipz
  2413  06AF  2EB6               	goto	l2081
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    prec++;
  2416  06B0  3001               	movlw	1
  2417  06B1  07BC               	addwf	__doprnt@prec,f
  2418  06B2  1803               	skipnc
  2419  06B3  0ABD               	incf	__doprnt@prec+1,f
  2420  06B4  3000               	movlw	0
  2421  06B5  07BD               	addwf	__doprnt@prec+1,f
  2422  06B6                     l2081:	
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2425  06B6  01BE               	clrf	__doprnt@c
  2426  06B7  0ABE               	incf	__doprnt@c,f
  2427  06B8  300A               	movlw	10
  2428  06B9  063E               	xorwf	__doprnt@c,w
  2429  06BA  1903               	btfsc	3,2
  2430  06BB  2EF0               	goto	l2093
  2431  06BC                     l2087:	
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     if(val 
      +                          < dpowers[c])
  2434  06BC  083E               	movf	__doprnt@c,w
  2435  06BD  00AD               	movwf	??__doprnt
  2436  06BE  3001               	movlw	1
  2437  06BF                     u2525:	
  2438  06BF  1003               	clrc
  2439  06C0  0DAD               	rlf	??__doprnt,f
  2440  06C1  3EFF               	addlw	-1
  2441  06C2  1D03               	skipz
  2442  06C3  2EBF               	goto	u2525
  2443  06C4  1003               	clrc
  2444  06C5  0D2D               	rlf	??__doprnt,w
  2445  06C6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2446  06C7  0084               	movwf	4
  2447  06C8  158A  200A  118A   	fcall	stringdir
  2448  06CB  00AE               	movwf	??__doprnt+1
  2449  06CC  158A  200A  118A   	fcall	stringdir
  2450  06CF  00AF               	movwf	??__doprnt+2
  2451  06D0  158A  200A  118A   	fcall	stringdir
  2452  06D3  00B0               	movwf	??__doprnt+3
  2453  06D4  158A  200A  118A   	fcall	stringdir
  2454  06D7  00B1               	movwf	??__doprnt+4
  2455  06D8  0831               	movf	??__doprnt+4,w
  2456  06D9  0238               	subwf	__doprnt@val+3,w
  2457  06DA  1D03               	skipz
  2458  06DB  2EE6               	goto	u2535
  2459  06DC  0830               	movf	??__doprnt+3,w
  2460  06DD  0237               	subwf	__doprnt@val+2,w
  2461  06DE  1D03               	skipz
  2462  06DF  2EE6               	goto	u2535
  2463  06E0  082F               	movf	??__doprnt+2,w
  2464  06E1  0236               	subwf	__doprnt@val+1,w
  2465  06E2  1D03               	skipz
  2466  06E3  2EE6               	goto	u2535
  2467  06E4  082E               	movf	??__doprnt+1,w
  2468  06E5  0235               	subwf	__doprnt@val,w
  2469  06E6                     u2535:	
  2470  06E6  1C03               	btfss	3,0
  2471  06E7  2EF0               	goto	l2093
  2472  06E8  3001               	movlw	1
  2473  06E9  00AD               	movwf	??__doprnt
  2474  06EA  082D               	movf	??__doprnt,w
  2475  06EB  07BE               	addwf	__doprnt@c,f
  2476  06EC  300A               	movlw	10
  2477  06ED  063E               	xorwf	__doprnt@c,w
  2478  06EE  1D03               	btfss	3,2
  2479  06EF  2EBC               	goto	l2087
  2480  06F0                     l2093:	
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(c < pr
      +                          ec)
  2483  06F0  083D               	movf	__doprnt@prec+1,w
  2484  06F1  3A80               	xorlw	128
  2485  06F2  3C80               	sublw	128
  2486  06F3  1D03               	skipz
  2487  06F4  2EF7               	goto	u2555
  2488  06F5  083C               	movf	__doprnt@prec,w
  2489  06F6  023E               	subwf	__doprnt@c,w
  2490  06F7                     u2555:	
  2491  06F7  1803               	skipnc
  2492  06F8  2F00               	goto	l2097
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1359:    c = prec
      +                          ;
  2495  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  2496  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  2497  06FB  083C               	movf	__doprnt@prec,w
  2498  06FC  00AD               	movwf	??__doprnt
  2499  06FD  082D               	movf	??__doprnt,w
  2500  06FE  00BE               	movwf	__doprnt@c
  2501  06FF  2F16               	goto	l2101
  2502  0700                     l2097:	
  2503  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0702  083D               	movf	__doprnt@prec+1,w
  2506  0703  3A80               	xorlw	128
  2507  0704  00AD               	movwf	??__doprnt
  2508  0705  3080               	movlw	128
  2509  0706  022D               	subwf	??__doprnt,w
  2510  0707  1D03               	skipz
  2511  0708  2F0B               	goto	u2565
  2512  0709  083E               	movf	__doprnt@c,w
  2513  070A  023C               	subwf	__doprnt@prec,w
  2514  070B                     u2565:	
  2515  070B  1803               	skipnc
  2516  070C  2F16               	goto	l2101
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    prec = c
      +                          ;
  2519  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2520  070E  1303               	bcf	3,6	;RP1=0, select bank0
  2521  070F  083E               	movf	__doprnt@c,w
  2522  0710  00AD               	movwf	??__doprnt
  2523  0711  01AE               	clrf	??__doprnt+1
  2524  0712  082D               	movf	??__doprnt,w
  2525  0713  00BC               	movwf	__doprnt@prec
  2526  0714  082E               	movf	??__doprnt+1,w
  2527  0715  00BD               	movwf	__doprnt@prec+1
  2528  0716                     l2101:	
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1364:   if(width 
      +                          && flag & 0x03)
  2531  0716  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0717  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0718  083A               	movf	__doprnt@width,w
  2534  0719  043B               	iorwf	__doprnt@width+1,w
  2535  071A  1903               	btfsc	3,2
  2536  071B  2F26               	goto	l2113
  2537  071C  0839               	movf	__doprnt@flag,w
  2538  071D  3903               	andlw	3
  2539  071E  1903               	btfsc	3,2
  2540  071F  2F26               	goto	l2113
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1365:    width--;
  2543  0720  30FF               	movlw	255
  2544  0721  07BA               	addwf	__doprnt@width,f
  2545  0722  1803               	skipnc
  2546  0723  0ABB               	incf	__doprnt@width+1,f
  2547  0724  30FF               	movlw	255
  2548  0725  07BB               	addwf	__doprnt@width+1,f
  2549  0726                     l2113:	
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1400:   if(width 
      +                          > c)
  2552  0726  083B               	movf	__doprnt@width+1,w
  2553  0727  3A80               	xorlw	128
  2554  0728  3C80               	sublw	128
  2555  0729  1D03               	skipz
  2556  072A  2F2D               	goto	u2595
  2557  072B  083A               	movf	__doprnt@width,w
  2558  072C  023E               	subwf	__doprnt@c,w
  2559  072D                     u2595:	
  2560  072D  1803               	skipnc
  2561  072E  2F3B               	goto	l2117
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1401:    width -=
      +                           c;
  2564  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0731  083E               	movf	__doprnt@c,w
  2567  0732  00AD               	movwf	??__doprnt
  2568  0733  01AE               	clrf	??__doprnt+1
  2569  0734  082D               	movf	??__doprnt,w
  2570  0735  02BA               	subwf	__doprnt@width,f
  2571  0736  082E               	movf	??__doprnt+1,w
  2572  0737  1C03               	skipc
  2573  0738  03BB               	decf	__doprnt@width+1,f
  2574  0739  02BB               	subwf	__doprnt@width+1,f
  2575  073A  2F3F               	goto	l2119
  2576  073B                     l2117:	
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1403:    width = 
      +                          0;
  2579  073B  1283               	bcf	3,5	;RP0=0, select bank0
  2580  073C  1303               	bcf	3,6	;RP1=0, select bank0
  2581  073D  01BA               	clrf	__doprnt@width
  2582  073E  01BB               	clrf	__doprnt@width+1
  2583  073F                     l2119:	
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1443:    if(width
  2586  073F  083A               	movf	__doprnt@width,w
  2587  0740  043B               	iorwf	__doprnt@width+1,w
  2588  0741  1903               	btfsc	3,2
  2589  0742  2F6E               	goto	l2131
  2590  0743                     l2121:	
  2591  0743  0A3F               	incf	__doprnt@pb,w
  2592  0744  0084               	movwf	4
  2593  0745  1383               	bcf	3,7	;select IRP bank0
  2594  0746  0800               	movf	0,w
  2595  0747  1903               	btfsc	3,2
  2596  0748  2F54               	goto	l2125
  2597  0749  3020               	movlw	32
  2598  074A  00AD               	movwf	??__doprnt
  2599  074B  082D               	movf	??__doprnt,w
  2600  074C  00F1               	movwf	putch@txData
  2601  074D  0A3F               	incf	__doprnt@pb,w
  2602  074E  0084               	movwf	4
  2603  074F  0800               	movf	0,w
  2604  0750  118A  2002  118A   	fcall	fptable
  2605  0753  2F62               	goto	l2129
  2606  0754                     l2125:	
  2607  0754  3020               	movlw	32
  2608  0755  00AD               	movwf	??__doprnt
  2609  0756  083F               	movf	__doprnt@pb,w
  2610  0757  0084               	movwf	4
  2611  0758  0800               	movf	0,w
  2612  0759  0084               	movwf	4
  2613  075A  082D               	movf	??__doprnt,w
  2614  075B  0080               	movwf	0
  2615  075C  3001               	movlw	1
  2616  075D  00AD               	movwf	??__doprnt
  2617  075E  083F               	movf	__doprnt@pb,w
  2618  075F  0084               	movwf	4
  2619  0760  082D               	movf	??__doprnt,w
  2620  0761  0780               	addwf	0,f
  2621  0762                     l2129:	
  2622  0762  30FF               	movlw	255
  2623  0763  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0765  07BA               	addwf	__doprnt@width,f
  2626  0766  1803               	skipnc
  2627  0767  0ABB               	incf	__doprnt@width+1,f
  2628  0768  30FF               	movlw	255
  2629  0769  07BB               	addwf	__doprnt@width+1,f
  2630  076A  083A               	movf	__doprnt@width,w
  2631  076B  043B               	iorwf	__doprnt@width+1,w
  2632  076C  1D03               	btfss	3,2
  2633  076D  2F43               	goto	l2121
  2634  076E                     l2131:	
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(flag 
      +                          & 0x03)
  2637  076E  0839               	movf	__doprnt@flag,w
  2638  076F  3903               	andlw	3
  2639  0770  1903               	btfsc	3,2
  2640  0771  2F91               	goto	l2151
  2641  0772  0A3F               	incf	__doprnt@pb,w
  2642  0773  0084               	movwf	4
  2643  0774  1383               	bcf	3,7	;select IRP bank0
  2644  0775  0800               	movf	0,w
  2645  0776  1903               	btfsc	3,2
  2646  0777  2F83               	goto	l2137
  2647  0778  302D               	movlw	45
  2648  0779  00AD               	movwf	??__doprnt
  2649  077A  082D               	movf	??__doprnt,w
  2650  077B  00F1               	movwf	putch@txData
  2651  077C  0A3F               	incf	__doprnt@pb,w
  2652  077D  0084               	movwf	4
  2653  077E  0800               	movf	0,w
  2654  077F  118A  2002  118A   	fcall	fptable
  2655  0782  2F91               	goto	l2151
  2656  0783                     l2137:	
  2657  0783  302D               	movlw	45
  2658  0784                     L2:	
  2659  0784  00AD               	movwf	??__doprnt
  2660  0785  083F               	movf	__doprnt@pb,w
  2661  0786  0084               	movwf	4
  2662  0787  0800               	movf	0,w
  2663  0788  0084               	movwf	4
  2664  0789  082D               	movf	??__doprnt,w
  2665  078A  0080               	movwf	0
  2666  078B  3001               	movlw	1
  2667  078C  00AD               	movwf	??__doprnt
  2668  078D  083F               	movf	__doprnt@pb,w
  2669  078E  0084               	movwf	4
  2670  078F  082D               	movf	??__doprnt,w
  2671  0790  0780               	addwf	0,f
  2672  0791                     l2151:	
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   while(pre
      +                          c--) {
  2675  0791  30FF               	movlw	255
  2676  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0794  07BC               	addwf	__doprnt@prec,f
  2679  0795  1803               	skipnc
  2680  0796  0ABD               	incf	__doprnt@prec+1,f
  2681  0797  30FF               	movlw	255
  2682  0798  07BD               	addwf	__doprnt@prec+1,f
  2683  0799  0A3C               	incf	__doprnt@prec,w
  2684  079A  1903               	btfsc	3,2
  2685  079B  0A3D               	incf	__doprnt@prec+1,w
  2686  079C  1903               	btfsc	3,2
  2687  079D  2CA6               	goto	l2153
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c = (val / dpo
      +                          wers[prec]) % 10 + '0';
  2690  079E  3000               	movlw	0
  2691  079F  00A3               	movwf	___llmod@divisor+3
  2692  07A0  3000               	movlw	0
  2693  07A1  00A2               	movwf	___llmod@divisor+2
  2694  07A2  3000               	movlw	0
  2695  07A3  00A1               	movwf	___llmod@divisor+1
  2696  07A4  300A               	movlw	10
  2697  07A5  00A0               	movwf	___llmod@divisor
  2698  07A6  083C               	movf	__doprnt@prec,w
  2699  07A7  00AD               	movwf	??__doprnt
  2700  07A8  3001               	movlw	1
  2701  07A9                     u2655:	
  2702  07A9  1003               	clrc
  2703  07AA  0DAD               	rlf	??__doprnt,f
  2704  07AB  3EFF               	addlw	-1
  2705  07AC  1D03               	skipz
  2706  07AD  2FA9               	goto	u2655
  2707  07AE  1003               	clrc
  2708  07AF  0D2D               	rlf	??__doprnt,w
  2709  07B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2710  07B1  0084               	movwf	4
  2711  07B2  158A  200A  118A   	fcall	stringdir
  2712  07B5  00F0               	movwf	___lldiv@divisor
  2713  07B6  158A  200A  118A   	fcall	stringdir
  2714  07B9  00F1               	movwf	___lldiv@divisor+1
  2715  07BA  158A  200A  118A   	fcall	stringdir
  2716  07BD  00F2               	movwf	___lldiv@divisor+2
  2717  07BE  158A  200A  118A   	fcall	stringdir
  2718  07C1  00F3               	movwf	___lldiv@divisor+3
  2719  07C2  0838               	movf	__doprnt@val+3,w
  2720  07C3  00F7               	movwf	___lldiv@dividend+3
  2721  07C4  0837               	movf	__doprnt@val+2,w
  2722  07C5  00F6               	movwf	___lldiv@dividend+2
  2723  07C6  0836               	movf	__doprnt@val+1,w
  2724  07C7  00F5               	movwf	___lldiv@dividend+1
  2725  07C8  0835               	movf	__doprnt@val,w
  2726  07C9  00F4               	movwf	___lldiv@dividend
  2727  07CA  158A  2239  118A   	fcall	___lldiv
  2728  07CD  0873               	movf	?___lldiv+3,w
  2729  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2730  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2731  07D0  00A7               	movwf	___llmod@dividend+3
  2732  07D1  0872               	movf	?___lldiv+2,w
  2733  07D2  00A6               	movwf	___llmod@dividend+2
  2734  07D3  0871               	movf	?___lldiv+1,w
  2735  07D4  00A5               	movwf	___llmod@dividend+1
  2736  07D5  0870               	movf	?___lldiv,w
  2737  07D6  00A4               	movwf	___llmod@dividend
  2738  07D7  158A  21EB  118A   	fcall	___llmod
  2739  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  2740  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  2741  07DC  0820               	movf	?___llmod,w
  2742  07DD  3E30               	addlw	48
  2743  07DE  00AE               	movwf	??__doprnt+1
  2744  07DF  082E               	movf	??__doprnt+1,w
  2745  07E0  00BE               	movwf	__doprnt@c
  2746  07E1  0A3F               	incf	__doprnt@pb,w
  2747  07E2  0084               	movwf	4
  2748  07E3  1383               	bcf	3,7	;select IRP bank0
  2749  07E4  0800               	movf	0,w
  2750  07E5  1903               	btfsc	3,2
  2751  07E6  2FF2               	goto	l2147
  2752  07E7  083E               	movf	__doprnt@c,w
  2753  07E8  00AD               	movwf	??__doprnt
  2754  07E9  082D               	movf	??__doprnt,w
  2755  07EA  00F1               	movwf	putch@txData
  2756  07EB  0A3F               	incf	__doprnt@pb,w
  2757  07EC  0084               	movwf	4
  2758  07ED  0800               	movf	0,w
  2759  07EE  118A  2002  118A   	fcall	fptable
  2760  07F1  2F91               	goto	l2151
  2761  07F2                     l2147:	
  2762  07F2  083E               	movf	__doprnt@c,w
  2763  07F3  2F84               	goto	L2
  2764  07F4                     l2155:	
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1559:  return 0;
  2767  07F4  01AA               	clrf	?__doprnt
  2768  07F5  01AB               	clrf	?__doprnt+1
  2769  07F6  0008               	return
  2770  07F7                     __end_of__doprnt:	
  2771                           
  2772                           	psect	text5
  2773  08DE                     __ptext5:	
  2774 ;; *************** function _putch *****************
  2775 ;; Defined at:
  2776 ;;		line 124 in file "eusart.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  txData          1    1[COMMON] unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2790 ;;      Params:         1       0       0       0
  2791 ;;      Locals:         0       0       0       0
  2792 ;;      Temps:          0       0       0       0
  2793 ;;      Totals:         1       0       0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    1
  2797 ;; This function calls:
  2798 ;;		_EUSART_Write
  2799 ;; This function is called by:
  2800 ;;		_printf
  2801 ;;		__doprnt
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _putch
  2807  08DE                     _putch:	
  2808                           
  2809                           ;eusart.c: 124: void putch(char txData);eusart.c: 125: {;eusart.c: 126:     EUSART_Write
      +                          (txData);
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2813  08DE  0871               	movf	putch@txData,w
  2814  08DF  158A  20E2         	fcall	_EUSART_Write
  2815  08E1  0008               	return
  2816  08E2                     __end_of_putch:	
  2817                           
  2818                           	psect	text6
  2819  08E2                     __ptext6:	
  2820 ;; *************** function _EUSART_Write *****************
  2821 ;; Defined at:
  2822 ;;		line 110 in file "eusart.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  txData          1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  txData          1    0[COMMON] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2836 ;;      Params:         0       0       0       0
  2837 ;;      Locals:         1       0       0       0
  2838 ;;      Temps:          0       0       0       0
  2839 ;;      Totals:         1       0       0       0
  2840 ;;Total ram usage:        1 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_putch
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _EUSART_Write
  2851  08E2                     _EUSART_Write:	
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _EUSART_Write: [wreg]
  2855                           ;EUSART_Write@txData stored from wreg
  2856  08E2  00F0               	movwf	EUSART_Write@txData
  2857  08E3                     l96:	
  2858                           ;eusart.c: 113:     {;eusart.c: 114:     }
  2859                           
  2860                           
  2861                           ;eusart.c: 112:     while(0 == PIR1bits.TXIF)
  2862  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  2863  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  2864  08E5  1E0C               	btfss	12,4	;volatile
  2865  08E6  28E3               	goto	l96
  2866                           
  2867                           ;eusart.c: 116:     TXREG = txData;
  2868  08E7  0870               	movf	EUSART_Write@txData,w
  2869  08E8  0099               	movwf	25	;volatile
  2870  08E9  0008               	return
  2871  08EA                     __end_of_EUSART_Write:	
  2872                           
  2873                           	psect	text7
  2874  000A                     __ptext7:	
  2875 ;; *************** function _isdigit *****************
  2876 ;; Defined at:
  2877 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  c               1    wreg     unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  c               1    1[COMMON] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2891 ;;      Params:         0       0       0       0
  2892 ;;      Locals:         2       0       0       0
  2893 ;;      Temps:          0       0       0       0
  2894 ;;      Totals:         2       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		__doprnt
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _isdigit
  2906  000A                     _isdigit:	
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2910                           ;isdigit@c stored from wreg
  2911  000A  00F1               	movwf	isdigit@c
  2912  000B  01F0               	clrf	_isdigit$804
  2913  000C  303A               	movlw	58
  2914  000D  0271               	subwf	isdigit@c,w
  2915  000E  1803               	skipnc
  2916  000F  2816               	goto	l1917
  2917  0010  3030               	movlw	48
  2918  0011  0271               	subwf	isdigit@c,w
  2919  0012  1C03               	skipc
  2920  0013  2816               	goto	l1917
  2921  0014  01F0               	clrf	_isdigit$804
  2922  0015  0AF0               	incf	_isdigit$804,f
  2923  0016                     l1917:	
  2924  0016  0C70               	rrf	_isdigit$804,w
  2925  0017  0008               	return
  2926  0018                     __end_of_isdigit:	
  2927                           
  2928                           	psect	text8
  2929  0991                     __ptext8:	
  2930 ;; *************** function ___wmul *****************
  2931 ;; Defined at:
  2932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  multiplier      2    0[COMMON] unsigned int 
  2935 ;;  multiplicand    2    2[COMMON] unsigned int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  product         2    4[COMMON] unsigned int 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    0[COMMON] unsigned int 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2947 ;;      Params:         4       0       0       0
  2948 ;;      Locals:         2       0       0       0
  2949 ;;      Temps:          0       0       0       0
  2950 ;;      Totals:         6       0       0       0
  2951 ;;Total ram usage:        6 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		__doprnt
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function ___wmul
  2962  0991                     ___wmul:	
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2966  0991  01F4               	clrf	___wmul@product
  2967  0992  01F5               	clrf	___wmul@product+1
  2968  0993                     l1923:	
  2969  0993  1C70               	btfss	___wmul@multiplier,0
  2970  0994  299B               	goto	l332
  2971  0995  0872               	movf	___wmul@multiplicand,w
  2972  0996  07F4               	addwf	___wmul@product,f
  2973  0997  1803               	skipnc
  2974  0998  0AF5               	incf	___wmul@product+1,f
  2975  0999  0873               	movf	___wmul@multiplicand+1,w
  2976  099A  07F5               	addwf	___wmul@product+1,f
  2977  099B                     l332:	
  2978  099B  3001               	movlw	1
  2979  099C                     u2165:	
  2980  099C  1003               	clrc
  2981  099D  0DF2               	rlf	___wmul@multiplicand,f
  2982  099E  0DF3               	rlf	___wmul@multiplicand+1,f
  2983  099F  3EFF               	addlw	-1
  2984  09A0  1D03               	skipz
  2985  09A1  299C               	goto	u2165
  2986  09A2  3001               	movlw	1
  2987  09A3                     u2175:	
  2988  09A3  1003               	clrc
  2989  09A4  0CF1               	rrf	___wmul@multiplier+1,f
  2990  09A5  0CF0               	rrf	___wmul@multiplier,f
  2991  09A6  3EFF               	addlw	-1
  2992  09A7  1D03               	skipz
  2993  09A8  29A3               	goto	u2175
  2994  09A9  0870               	movf	___wmul@multiplier,w
  2995  09AA  0471               	iorwf	___wmul@multiplier+1,w
  2996  09AB  1D03               	btfss	3,2
  2997  09AC  2993               	goto	l1923
  2998  09AD  0875               	movf	___wmul@product+1,w
  2999  09AE  00F1               	movwf	?___wmul+1
  3000  09AF  0874               	movf	___wmul@product,w
  3001  09B0  00F0               	movwf	?___wmul
  3002  09B1  0008               	return
  3003  09B2                     __end_of___wmul:	
  3004                           
  3005                           	psect	text9
  3006  09EB                     __ptext9:	
  3007 ;; *************** function ___llmod *****************
  3008 ;; Defined at:
  3009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  divisor         4    0[BANK0 ] unsigned long 
  3012 ;;  dividend        4    4[BANK0 ] unsigned long 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  counter         1    9[BANK0 ] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  4    0[BANK0 ] unsigned long 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3024 ;;      Params:         0       8       0       0
  3025 ;;      Locals:         0       1       0       0
  3026 ;;      Temps:          0       1       0       0
  3027 ;;      Totals:         0      10       0       0
  3028 ;;Total ram usage:       10 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		__doprnt
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function ___llmod
  3039  09EB                     ___llmod:	
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3043  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  3044  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  3045  09ED  0823               	movf	___llmod@divisor+3,w
  3046  09EE  0422               	iorwf	___llmod@divisor+2,w
  3047  09EF  0421               	iorwf	___llmod@divisor+1,w
  3048  09F0  0420               	iorwf	___llmod@divisor,w
  3049  09F1  1903               	skipnz
  3050  09F2  2A30               	goto	l1975
  3051  09F3  01A9               	clrf	___llmod@counter
  3052  09F4  0AA9               	incf	___llmod@counter,f
  3053  09F5                     l1965:	
  3054  09F5  1BA3               	btfsc	___llmod@divisor+3,7
  3055  09F6  2A05               	goto	l1967
  3056  09F7  3001               	movlw	1
  3057  09F8  00A8               	movwf	??___llmod
  3058  09F9                     u2275:	
  3059  09F9  1003               	clrc
  3060  09FA  0DA0               	rlf	___llmod@divisor,f
  3061  09FB  0DA1               	rlf	___llmod@divisor+1,f
  3062  09FC  0DA2               	rlf	___llmod@divisor+2,f
  3063  09FD  0DA3               	rlf	___llmod@divisor+3,f
  3064  09FE  0BA8               	decfsz	??___llmod,f
  3065  09FF  29F9               	goto	u2275
  3066  0A00  3001               	movlw	1
  3067  0A01  00A8               	movwf	??___llmod
  3068  0A02  0828               	movf	??___llmod,w
  3069  0A03  07A9               	addwf	___llmod@counter,f
  3070  0A04  29F5               	goto	l1965
  3071  0A05                     l1967:	
  3072  0A05  0823               	movf	___llmod@divisor+3,w
  3073  0A06  0227               	subwf	___llmod@dividend+3,w
  3074  0A07  1D03               	skipz
  3075  0A08  2A13               	goto	u2295
  3076  0A09  0822               	movf	___llmod@divisor+2,w
  3077  0A0A  0226               	subwf	___llmod@dividend+2,w
  3078  0A0B  1D03               	skipz
  3079  0A0C  2A13               	goto	u2295
  3080  0A0D  0821               	movf	___llmod@divisor+1,w
  3081  0A0E  0225               	subwf	___llmod@dividend+1,w
  3082  0A0F  1D03               	skipz
  3083  0A10  2A13               	goto	u2295
  3084  0A11  0820               	movf	___llmod@divisor,w
  3085  0A12  0224               	subwf	___llmod@dividend,w
  3086  0A13                     u2295:	
  3087  0A13  1C03               	skipc
  3088  0A14  2A23               	goto	l1971
  3089  0A15  0820               	movf	___llmod@divisor,w
  3090  0A16  02A4               	subwf	___llmod@dividend,f
  3091  0A17  0821               	movf	___llmod@divisor+1,w
  3092  0A18  1C03               	skipc
  3093  0A19  0F21               	incfsz	___llmod@divisor+1,w
  3094  0A1A  02A5               	subwf	___llmod@dividend+1,f
  3095  0A1B  0822               	movf	___llmod@divisor+2,w
  3096  0A1C  1C03               	skipc
  3097  0A1D  0F22               	incfsz	___llmod@divisor+2,w
  3098  0A1E  02A6               	subwf	___llmod@dividend+2,f
  3099  0A1F  0823               	movf	___llmod@divisor+3,w
  3100  0A20  1C03               	skipc
  3101  0A21  0F23               	incfsz	___llmod@divisor+3,w
  3102  0A22  02A7               	subwf	___llmod@dividend+3,f
  3103  0A23                     l1971:	
  3104  0A23  3001               	movlw	1
  3105  0A24                     u2305:	
  3106  0A24  1003               	clrc
  3107  0A25  0CA3               	rrf	___llmod@divisor+3,f
  3108  0A26  0CA2               	rrf	___llmod@divisor+2,f
  3109  0A27  0CA1               	rrf	___llmod@divisor+1,f
  3110  0A28  0CA0               	rrf	___llmod@divisor,f
  3111  0A29  3EFF               	addlw	-1
  3112  0A2A  1D03               	skipz
  3113  0A2B  2A24               	goto	u2305
  3114  0A2C  3001               	movlw	1
  3115  0A2D  02A9               	subwf	___llmod@counter,f
  3116  0A2E  1D03               	btfss	3,2
  3117  0A2F  2A05               	goto	l1967
  3118  0A30                     l1975:	
  3119  0A30  0827               	movf	___llmod@dividend+3,w
  3120  0A31  00A3               	movwf	?___llmod+3
  3121  0A32  0826               	movf	___llmod@dividend+2,w
  3122  0A33  00A2               	movwf	?___llmod+2
  3123  0A34  0825               	movf	___llmod@dividend+1,w
  3124  0A35  00A1               	movwf	?___llmod+1
  3125  0A36  0824               	movf	___llmod@dividend,w
  3126  0A37  00A0               	movwf	?___llmod
  3127  0A38  0008               	return
  3128  0A39                     __end_of___llmod:	
  3129                           
  3130                           	psect	text10
  3131  0A39                     __ptext10:	
  3132 ;; *************** function ___lldiv *****************
  3133 ;; Defined at:
  3134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  divisor         4    0[COMMON] unsigned long 
  3137 ;;  dividend        4    4[COMMON] unsigned long 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  quotient        4    9[COMMON] unsigned long 
  3140 ;;  counter         1   13[COMMON] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  4    0[COMMON] unsigned long 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3150 ;;      Params:         8       0       0       0
  3151 ;;      Locals:         5       0       0       0
  3152 ;;      Temps:          1       0       0       0
  3153 ;;      Totals:        14       0       0       0
  3154 ;;Total ram usage:       14 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		__doprnt
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function ___lldiv
  3165  0A39                     ___lldiv:	
  3166                           
  3167                           ;incstack = 0
  3168                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3169  0A39  3000               	movlw	0
  3170  0A3A  00FC               	movwf	___lldiv@quotient+3
  3171  0A3B  3000               	movlw	0
  3172  0A3C  00FB               	movwf	___lldiv@quotient+2
  3173  0A3D  3000               	movlw	0
  3174  0A3E  00FA               	movwf	___lldiv@quotient+1
  3175  0A3F  3000               	movlw	0
  3176  0A40  00F9               	movwf	___lldiv@quotient
  3177  0A41  0873               	movf	___lldiv@divisor+3,w
  3178  0A42  0472               	iorwf	___lldiv@divisor+2,w
  3179  0A43  0471               	iorwf	___lldiv@divisor+1,w
  3180  0A44  0470               	iorwf	___lldiv@divisor,w
  3181  0A45  1903               	skipnz
  3182  0A46  2A8E               	goto	l1955
  3183  0A47  01FD               	clrf	___lldiv@counter
  3184  0A48  0AFD               	incf	___lldiv@counter,f
  3185  0A49                     l1941:	
  3186  0A49  1BF3               	btfsc	___lldiv@divisor+3,7
  3187  0A4A  2A59               	goto	l1943
  3188  0A4B  3001               	movlw	1
  3189  0A4C  00F8               	movwf	??___lldiv
  3190  0A4D                     u2205:	
  3191  0A4D  1003               	clrc
  3192  0A4E  0DF0               	rlf	___lldiv@divisor,f
  3193  0A4F  0DF1               	rlf	___lldiv@divisor+1,f
  3194  0A50  0DF2               	rlf	___lldiv@divisor+2,f
  3195  0A51  0DF3               	rlf	___lldiv@divisor+3,f
  3196  0A52  0BF8               	decfsz	??___lldiv,f
  3197  0A53  2A4D               	goto	u2205
  3198  0A54  3001               	movlw	1
  3199  0A55  00F8               	movwf	??___lldiv
  3200  0A56  0878               	movf	??___lldiv,w
  3201  0A57  07FD               	addwf	___lldiv@counter,f
  3202  0A58  2A49               	goto	l1941
  3203  0A59                     l1943:	
  3204  0A59  3001               	movlw	1
  3205  0A5A  00F8               	movwf	??___lldiv
  3206  0A5B                     u2225:	
  3207  0A5B  1003               	clrc
  3208  0A5C  0DF9               	rlf	___lldiv@quotient,f
  3209  0A5D  0DFA               	rlf	___lldiv@quotient+1,f
  3210  0A5E  0DFB               	rlf	___lldiv@quotient+2,f
  3211  0A5F  0DFC               	rlf	___lldiv@quotient+3,f
  3212  0A60  0BF8               	decfsz	??___lldiv,f
  3213  0A61  2A5B               	goto	u2225
  3214  0A62  0873               	movf	___lldiv@divisor+3,w
  3215  0A63  0277               	subwf	___lldiv@dividend+3,w
  3216  0A64  1D03               	skipz
  3217  0A65  2A70               	goto	u2235
  3218  0A66  0872               	movf	___lldiv@divisor+2,w
  3219  0A67  0276               	subwf	___lldiv@dividend+2,w
  3220  0A68  1D03               	skipz
  3221  0A69  2A70               	goto	u2235
  3222  0A6A  0871               	movf	___lldiv@divisor+1,w
  3223  0A6B  0275               	subwf	___lldiv@dividend+1,w
  3224  0A6C  1D03               	skipz
  3225  0A6D  2A70               	goto	u2235
  3226  0A6E  0870               	movf	___lldiv@divisor,w
  3227  0A6F  0274               	subwf	___lldiv@dividend,w
  3228  0A70                     u2235:	
  3229  0A70  1C03               	skipc
  3230  0A71  2A81               	goto	l1951
  3231  0A72  0870               	movf	___lldiv@divisor,w
  3232  0A73  02F4               	subwf	___lldiv@dividend,f
  3233  0A74  0871               	movf	___lldiv@divisor+1,w
  3234  0A75  1C03               	skipc
  3235  0A76  0F71               	incfsz	___lldiv@divisor+1,w
  3236  0A77  02F5               	subwf	___lldiv@dividend+1,f
  3237  0A78  0872               	movf	___lldiv@divisor+2,w
  3238  0A79  1C03               	skipc
  3239  0A7A  0F72               	incfsz	___lldiv@divisor+2,w
  3240  0A7B  02F6               	subwf	___lldiv@dividend+2,f
  3241  0A7C  0873               	movf	___lldiv@divisor+3,w
  3242  0A7D  1C03               	skipc
  3243  0A7E  0F73               	incfsz	___lldiv@divisor+3,w
  3244  0A7F  02F7               	subwf	___lldiv@dividend+3,f
  3245  0A80  1479               	bsf	___lldiv@quotient,0
  3246  0A81                     l1951:	
  3247  0A81  3001               	movlw	1
  3248  0A82                     u2245:	
  3249  0A82  1003               	clrc
  3250  0A83  0CF3               	rrf	___lldiv@divisor+3,f
  3251  0A84  0CF2               	rrf	___lldiv@divisor+2,f
  3252  0A85  0CF1               	rrf	___lldiv@divisor+1,f
  3253  0A86  0CF0               	rrf	___lldiv@divisor,f
  3254  0A87  3EFF               	addlw	-1
  3255  0A88  1D03               	skipz
  3256  0A89  2A82               	goto	u2245
  3257  0A8A  3001               	movlw	1
  3258  0A8B  02FD               	subwf	___lldiv@counter,f
  3259  0A8C  1D03               	btfss	3,2
  3260  0A8D  2A59               	goto	l1943
  3261  0A8E                     l1955:	
  3262  0A8E  087C               	movf	___lldiv@quotient+3,w
  3263  0A8F  00F3               	movwf	?___lldiv+3
  3264  0A90  087B               	movf	___lldiv@quotient+2,w
  3265  0A91  00F2               	movwf	?___lldiv+2
  3266  0A92  087A               	movf	___lldiv@quotient+1,w
  3267  0A93  00F1               	movwf	?___lldiv+1
  3268  0A94  0879               	movf	___lldiv@quotient,w
  3269  0A95  00F0               	movwf	?___lldiv
  3270  0A96  0008               	return
  3271  0A97                     __end_of___lldiv:	
  3272                           
  3273                           	psect	text11
  3274  003B                     __ptext11:	
  3275 ;; *************** function ___xxtofl *****************
  3276 ;; Defined at:
  3277 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  sign            1    wreg     unsigned char 
  3280 ;;  val             4    0[COMMON] long 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  sign            1    8[COMMON] unsigned char 
  3283 ;;  arg             4   10[COMMON] unsigned long 
  3284 ;;  exp             1    9[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  4    0[COMMON] unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3294 ;;      Params:         4       0       0       0
  3295 ;;      Locals:         6       0       0       0
  3296 ;;      Temps:          4       0       0       0
  3297 ;;      Totals:        14       0       0       0
  3298 ;;Total ram usage:       14 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;;		_ftoa1
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function ___xxtofl
  3310  003B                     ___xxtofl:	
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3314                           ;___xxtofl@sign stored from wreg
  3315  003B  00F8               	movwf	___xxtofl@sign
  3316  003C  0878               	movf	___xxtofl@sign,w
  3317  003D  1D03               	btfss	3,2
  3318  003E  1FF3               	btfss	___xxtofl@val+3,7
  3319  003F  2850               	goto	l2623
  3320  0040  0970               	comf	___xxtofl@val,w
  3321  0041  00FA               	movwf	___xxtofl@arg
  3322  0042  0971               	comf	___xxtofl@val+1,w
  3323  0043  00FB               	movwf	___xxtofl@arg+1
  3324  0044  0972               	comf	___xxtofl@val+2,w
  3325  0045  00FC               	movwf	___xxtofl@arg+2
  3326  0046  0973               	comf	___xxtofl@val+3,w
  3327  0047  00FD               	movwf	___xxtofl@arg+3
  3328  0048  0AFA               	incf	___xxtofl@arg,f
  3329  0049  1903               	skipnz
  3330  004A  0AFB               	incf	___xxtofl@arg+1,f
  3331  004B  1903               	skipnz
  3332  004C  0AFC               	incf	___xxtofl@arg+2,f
  3333  004D  1903               	skipnz
  3334  004E  0AFD               	incf	___xxtofl@arg+3,f
  3335  004F  2858               	goto	l759
  3336  0050                     l2623:	
  3337  0050  0873               	movf	___xxtofl@val+3,w
  3338  0051  00FD               	movwf	___xxtofl@arg+3
  3339  0052  0872               	movf	___xxtofl@val+2,w
  3340  0053  00FC               	movwf	___xxtofl@arg+2
  3341  0054  0871               	movf	___xxtofl@val+1,w
  3342  0055  00FB               	movwf	___xxtofl@arg+1
  3343  0056  0870               	movf	___xxtofl@val,w
  3344  0057  00FA               	movwf	___xxtofl@arg
  3345  0058                     l759:	
  3346  0058  0873               	movf	___xxtofl@val+3,w
  3347  0059  0472               	iorwf	___xxtofl@val+2,w
  3348  005A  0471               	iorwf	___xxtofl@val+1,w
  3349  005B  0470               	iorwf	___xxtofl@val,w
  3350  005C  1D03               	skipz
  3351  005D  2867               	goto	l2629
  3352  005E  3000               	movlw	0
  3353  005F  00F3               	movwf	?___xxtofl+3
  3354  0060  3000               	movlw	0
  3355  0061  00F2               	movwf	?___xxtofl+2
  3356  0062  3000               	movlw	0
  3357  0063  00F1               	movwf	?___xxtofl+1
  3358  0064  3000               	movlw	0
  3359  0065  00F0               	movwf	?___xxtofl
  3360  0066  0008               	return
  3361  0067                     l2629:	
  3362  0067  3096               	movlw	150
  3363  0068  00F4               	movwf	??___xxtofl
  3364  0069  0874               	movf	??___xxtofl,w
  3365  006A  00F9               	movwf	___xxtofl@exp
  3366  006B                     l2633:	
  3367  006B  30FE               	movlw	254
  3368  006C  057D               	andwf	___xxtofl@arg+3,w
  3369  006D  1903               	btfsc	3,2
  3370  006E  2898               	goto	l765
  3371  006F  3001               	movlw	1
  3372  0070  00F4               	movwf	??___xxtofl
  3373  0071  0874               	movf	??___xxtofl,w
  3374  0072  07F9               	addwf	___xxtofl@exp,f
  3375  0073  3001               	movlw	1
  3376  0074                     u3765:	
  3377  0074  1003               	clrc
  3378  0075  0CFD               	rrf	___xxtofl@arg+3,f
  3379  0076  0CFC               	rrf	___xxtofl@arg+2,f
  3380  0077  0CFB               	rrf	___xxtofl@arg+1,f
  3381  0078  0CFA               	rrf	___xxtofl@arg,f
  3382  0079  3EFF               	addlw	-1
  3383  007A  1D03               	skipz
  3384  007B  2874               	goto	u3765
  3385  007C  286B               	goto	l2633
  3386  007D                     l2635:	
  3387  007D  3001               	movlw	1
  3388  007E  00F4               	movwf	??___xxtofl
  3389  007F  0874               	movf	??___xxtofl,w
  3390  0080  07F9               	addwf	___xxtofl@exp,f
  3391  0081  3001               	movlw	1
  3392  0082  07FA               	addwf	___xxtofl@arg,f
  3393  0083  3000               	movlw	0
  3394  0084  1803               	skipnc
  3395  0085  3001               	movlw	1
  3396  0086  07FB               	addwf	___xxtofl@arg+1,f
  3397  0087  3000               	movlw	0
  3398  0088  1803               	skipnc
  3399  0089  3001               	movlw	1
  3400  008A  07FC               	addwf	___xxtofl@arg+2,f
  3401  008B  3000               	movlw	0
  3402  008C  1803               	skipnc
  3403  008D  3001               	movlw	1
  3404  008E  07FD               	addwf	___xxtofl@arg+3,f
  3405  008F  3001               	movlw	1
  3406  0090                     u3785:	
  3407  0090  1003               	clrc
  3408  0091  0CFD               	rrf	___xxtofl@arg+3,f
  3409  0092  0CFC               	rrf	___xxtofl@arg+2,f
  3410  0093  0CFB               	rrf	___xxtofl@arg+1,f
  3411  0094  0CFA               	rrf	___xxtofl@arg,f
  3412  0095  3EFF               	addlw	-1
  3413  0096  1D03               	skipz
  3414  0097  2890               	goto	u3785
  3415  0098                     l765:	
  3416  0098  30FF               	movlw	255
  3417  0099  057D               	andwf	___xxtofl@arg+3,w
  3418  009A  1903               	btfsc	3,2
  3419  009B  28AC               	goto	l2643
  3420  009C  287D               	goto	l2635
  3421  009D                     l2645:	
  3422  009D  3002               	movlw	2
  3423  009E  0279               	subwf	___xxtofl@exp,w
  3424  009F  1C03               	btfss	3,0
  3425  00A0  28AE               	goto	l772
  3426  00A1  3001               	movlw	1
  3427  00A2  02F9               	subwf	___xxtofl@exp,f
  3428  00A3  3001               	movlw	1
  3429  00A4  00F4               	movwf	??___xxtofl
  3430  00A5                     u3805:	
  3431  00A5  1003               	clrc
  3432  00A6  0DFA               	rlf	___xxtofl@arg,f
  3433  00A7  0DFB               	rlf	___xxtofl@arg+1,f
  3434  00A8  0DFC               	rlf	___xxtofl@arg+2,f
  3435  00A9  0DFD               	rlf	___xxtofl@arg+3,f
  3436  00AA  0BF4               	decfsz	??___xxtofl,f
  3437  00AB  28A5               	goto	u3805
  3438  00AC                     l2643:	
  3439  00AC  1FFC               	btfss	___xxtofl@arg+2,7
  3440  00AD  289D               	goto	l2645
  3441  00AE                     l772:	
  3442  00AE  1879               	btfsc	___xxtofl@exp,0
  3443  00AF  28B8               	goto	l773
  3444  00B0  30FF               	movlw	255
  3445  00B1  05FA               	andwf	___xxtofl@arg,f
  3446  00B2  30FF               	movlw	255
  3447  00B3  05FB               	andwf	___xxtofl@arg+1,f
  3448  00B4  307F               	movlw	127
  3449  00B5  05FC               	andwf	___xxtofl@arg+2,f
  3450  00B6  30FF               	movlw	255
  3451  00B7  05FD               	andwf	___xxtofl@arg+3,f
  3452  00B8                     l773:	
  3453  00B8  1003               	clrc
  3454  00B9  0CF9               	rrf	___xxtofl@exp,f
  3455  00BA  0879               	movf	___xxtofl@exp,w
  3456  00BB  00F4               	movwf	??___xxtofl
  3457  00BC  01F5               	clrf	??___xxtofl+1
  3458  00BD  01F6               	clrf	??___xxtofl+2
  3459  00BE  01F7               	clrf	??___xxtofl+3
  3460  00BF  3018               	movlw	24
  3461  00C0                     u3845:	
  3462  00C0  1003               	clrc
  3463  00C1  0DF4               	rlf	??___xxtofl,f
  3464  00C2  0DF5               	rlf	??___xxtofl+1,f
  3465  00C3  0DF6               	rlf	??___xxtofl+2,f
  3466  00C4  0DF7               	rlf	??___xxtofl+3,f
  3467  00C5  3EFF               	addlw	-1
  3468  00C6  1D03               	skipz
  3469  00C7  28C0               	goto	u3845
  3470  00C8  0874               	movf	??___xxtofl,w
  3471  00C9  04FA               	iorwf	___xxtofl@arg,f
  3472  00CA  0875               	movf	??___xxtofl+1,w
  3473  00CB  04FB               	iorwf	___xxtofl@arg+1,f
  3474  00CC  0876               	movf	??___xxtofl+2,w
  3475  00CD  04FC               	iorwf	___xxtofl@arg+2,f
  3476  00CE  0877               	movf	??___xxtofl+3,w
  3477  00CF  04FD               	iorwf	___xxtofl@arg+3,f
  3478  00D0  0878               	movf	___xxtofl@sign,w
  3479  00D1  1D03               	btfss	3,2
  3480  00D2  1FF3               	btfss	___xxtofl@val+3,7
  3481  00D3  28D5               	goto	l2657
  3482  00D4  17FD               	bsf	___xxtofl@arg+3,7
  3483  00D5                     l2657:	
  3484  00D5  087D               	movf	___xxtofl@arg+3,w
  3485  00D6  00F3               	movwf	?___xxtofl+3
  3486  00D7  087C               	movf	___xxtofl@arg+2,w
  3487  00D8  00F2               	movwf	?___xxtofl+2
  3488  00D9  087B               	movf	___xxtofl@arg+1,w
  3489  00DA  00F1               	movwf	?___xxtofl+1
  3490  00DB  087A               	movf	___xxtofl@arg,w
  3491  00DC  00F0               	movwf	?___xxtofl
  3492  00DD  0008               	return
  3493  00DE                     __end_of___xxtofl:	
  3494                           
  3495                           	psect	text12
  3496  0A97                     __ptext12:	
  3497 ;; *************** function ___fltol *****************
  3498 ;; Defined at:
  3499 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  f1              4   26[BANK0 ] unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  exp1            1   36[BANK0 ] unsigned char 
  3504 ;;  sign1           1   35[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  4   26[BANK0 ] long 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3514 ;;      Params:         0       4       0       0
  3515 ;;      Locals:         0       2       0       0
  3516 ;;      Temps:          0       5       0       0
  3517 ;;      Totals:         0      11       0       0
  3518 ;;Total ram usage:       11 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_ftoa1
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function ___fltol
  3529  0A97                     ___fltol:	
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3533  0A97  1003               	clrc
  3534  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0A9A  0D3C               	rlf	___fltol@f1+2,w
  3537  0A9B  0D3D               	rlf	___fltol@f1+3,w
  3538  0A9C  00BE               	movwf	??___fltol
  3539  0A9D  083E               	movf	??___fltol,w
  3540  0A9E  00C4               	movwf	___fltol@exp1
  3541  0A9F  0844               	movf	___fltol@exp1,w
  3542  0AA0  1D03               	btfss	3,2
  3543  0AA1  2AAB               	goto	l2441
  3544  0AA2                     l2437:	
  3545  0AA2  3000               	movlw	0
  3546  0AA3  00BD               	movwf	?___fltol+3
  3547  0AA4  3000               	movlw	0
  3548  0AA5  00BC               	movwf	?___fltol+2
  3549  0AA6  3000               	movlw	0
  3550  0AA7  00BB               	movwf	?___fltol+1
  3551  0AA8  3000               	movlw	0
  3552  0AA9  00BA               	movwf	?___fltol
  3553  0AAA  0008               	return
  3554  0AAB                     l2441:	
  3555  0AAB  083A               	movf	___fltol@f1,w
  3556  0AAC  00BE               	movwf	??___fltol
  3557  0AAD  083B               	movf	___fltol@f1+1,w
  3558  0AAE  00BF               	movwf	??___fltol+1
  3559  0AAF  083C               	movf	___fltol@f1+2,w
  3560  0AB0  00C0               	movwf	??___fltol+2
  3561  0AB1  083D               	movf	___fltol@f1+3,w
  3562  0AB2  00C1               	movwf	??___fltol+3
  3563  0AB3  301F               	movlw	31
  3564  0AB4                     u3275:	
  3565  0AB4  1003               	clrc
  3566  0AB5  0CC1               	rrf	??___fltol+3,f
  3567  0AB6  0CC0               	rrf	??___fltol+2,f
  3568  0AB7  0CBF               	rrf	??___fltol+1,f
  3569  0AB8  0CBE               	rrf	??___fltol,f
  3570  0AB9  3EFF               	addlw	-1
  3571  0ABA  1D03               	skipz
  3572  0ABB  2AB4               	goto	u3275
  3573  0ABC  083E               	movf	??___fltol,w
  3574  0ABD  00C2               	movwf	??___fltol+4
  3575  0ABE  0842               	movf	??___fltol+4,w
  3576  0ABF  00C3               	movwf	___fltol@sign1
  3577  0AC0  17BC               	bsf	___fltol@f1+2,7
  3578  0AC1  30FF               	movlw	255
  3579  0AC2  05BA               	andwf	___fltol@f1,f
  3580  0AC3  30FF               	movlw	255
  3581  0AC4  05BB               	andwf	___fltol@f1+1,f
  3582  0AC5  30FF               	movlw	255
  3583  0AC6  05BC               	andwf	___fltol@f1+2,f
  3584  0AC7  3000               	movlw	0
  3585  0AC8  05BD               	andwf	___fltol@f1+3,f
  3586  0AC9  3096               	movlw	150
  3587  0ACA  02C4               	subwf	___fltol@exp1,f
  3588  0ACB  1FC4               	btfss	___fltol@exp1,7
  3589  0ACC  2AE2               	goto	l2459
  3590  0ACD  0844               	movf	___fltol@exp1,w
  3591  0ACE  3A80               	xorlw	128
  3592  0ACF  3E97               	addlw	151
  3593  0AD0  1C03               	btfss	3,0
  3594  0AD1  2AA2               	goto	l2437
  3595  0AD2                     l2457:	
  3596  0AD2  3001               	movlw	1
  3597  0AD3                     u3305:	
  3598  0AD3  1003               	clrc
  3599  0AD4  0CBD               	rrf	___fltol@f1+3,f
  3600  0AD5  0CBC               	rrf	___fltol@f1+2,f
  3601  0AD6  0CBB               	rrf	___fltol@f1+1,f
  3602  0AD7  0CBA               	rrf	___fltol@f1,f
  3603  0AD8  3EFF               	addlw	-1
  3604  0AD9  1D03               	skipz
  3605  0ADA  2AD3               	goto	u3305
  3606  0ADB  3001               	movlw	1
  3607  0ADC  00BE               	movwf	??___fltol
  3608  0ADD  083E               	movf	??___fltol,w
  3609  0ADE  07C4               	addwf	___fltol@exp1,f
  3610  0ADF  1903               	btfsc	3,2
  3611  0AE0  2AF5               	goto	l2467
  3612  0AE1  2AD2               	goto	l2457
  3613  0AE2                     l2459:	
  3614  0AE2  3020               	movlw	32
  3615  0AE3  0244               	subwf	___fltol@exp1,w
  3616  0AE4  1803               	btfsc	3,0
  3617  0AE5  2AA2               	goto	l2437
  3618  0AE6                     l525:	
  3619  0AE6  0844               	movf	___fltol@exp1,w
  3620  0AE7  1903               	btfsc	3,2
  3621  0AE8  2AF5               	goto	l2467
  3622  0AE9  3001               	movlw	1
  3623  0AEA  00BE               	movwf	??___fltol
  3624  0AEB                     u3335:	
  3625  0AEB  1003               	clrc
  3626  0AEC  0DBA               	rlf	___fltol@f1,f
  3627  0AED  0DBB               	rlf	___fltol@f1+1,f
  3628  0AEE  0DBC               	rlf	___fltol@f1+2,f
  3629  0AEF  0DBD               	rlf	___fltol@f1+3,f
  3630  0AF0  0BBE               	decfsz	??___fltol,f
  3631  0AF1  2AEB               	goto	u3335
  3632  0AF2  3001               	movlw	1
  3633  0AF3  02C4               	subwf	___fltol@exp1,f
  3634  0AF4  2AE6               	goto	l525
  3635  0AF5                     l2467:	
  3636  0AF5  0843               	movf	___fltol@sign1,w
  3637  0AF6  1903               	btfsc	3,2
  3638  0AF7  0008               	return
  3639  0AF8  09BA               	comf	___fltol@f1,f
  3640  0AF9  09BB               	comf	___fltol@f1+1,f
  3641  0AFA  09BC               	comf	___fltol@f1+2,f
  3642  0AFB  09BD               	comf	___fltol@f1+3,f
  3643  0AFC  0ABA               	incf	___fltol@f1,f
  3644  0AFD  1903               	skipnz
  3645  0AFE  0ABB               	incf	___fltol@f1+1,f
  3646  0AFF  1903               	skipnz
  3647  0B00  0ABC               	incf	___fltol@f1+2,f
  3648  0B01  1903               	skipnz
  3649  0B02  0ABD               	incf	___fltol@f1+3,f
  3650  0B03  0008               	return
  3651  0B04                     __end_of___fltol:	
  3652                           
  3653                           	psect	text13
  3654  0970                     __ptext13:	
  3655 ;; *************** function ___flsub *****************
  3656 ;; Defined at:
  3657 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  a               4    8[BANK0 ] long 
  3660 ;;  b               4   12[BANK0 ] long 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4    8[BANK0 ] long 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3672 ;;      Params:         0       8       0       0
  3673 ;;      Locals:         0       0       0       0
  3674 ;;      Temps:          0       0       0       0
  3675 ;;      Totals:         0       8       0       0
  3676 ;;Total ram usage:        8 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    1
  3679 ;; This function calls:
  3680 ;;		___fladd
  3681 ;; This function is called by:
  3682 ;;		_ftoa1
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function ___flsub
  3688  0970                     ___flsub:	
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3692  0970  3080               	movlw	128
  3693  0971  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0972  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0973  06AB               	xorwf	___flsub@a+3,f
  3696  0974  082F               	movf	___flsub@b+3,w
  3697  0975  00F3               	movwf	___fladd@b+3
  3698  0976  082E               	movf	___flsub@b+2,w
  3699  0977  00F2               	movwf	___fladd@b+2
  3700  0978  082D               	movf	___flsub@b+1,w
  3701  0979  00F1               	movwf	___fladd@b+1
  3702  097A  082C               	movf	___flsub@b,w
  3703  097B  00F0               	movwf	___fladd@b
  3704  097C  082B               	movf	___flsub@a+3,w
  3705  097D  00F7               	movwf	___fladd@a+3
  3706  097E  082A               	movf	___flsub@a+2,w
  3707  097F  00F6               	movwf	___fladd@a+2
  3708  0980  0829               	movf	___flsub@a+1,w
  3709  0981  00F5               	movwf	___fladd@a+1
  3710  0982  0828               	movf	___flsub@a,w
  3711  0983  00F4               	movwf	___fladd@a
  3712  0984  158A  25C1         	fcall	___fladd
  3713  0986  0873               	movf	?___fladd+3,w
  3714  0987  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0988  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0989  00AB               	movwf	?___flsub+3
  3717  098A  0872               	movf	?___fladd+2,w
  3718  098B  00AA               	movwf	?___flsub+2
  3719  098C  0871               	movf	?___fladd+1,w
  3720  098D  00A9               	movwf	?___flsub+1
  3721  098E  0870               	movf	?___fladd,w
  3722  098F  00A8               	movwf	?___flsub
  3723  0990  0008               	return
  3724  0991                     __end_of___flsub:	
  3725                           
  3726                           	psect	text14
  3727  0DC1                     __ptext14:	
  3728 ;; *************** function ___fladd *****************
  3729 ;; Defined at:
  3730 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  b               4    0[COMMON] long 
  3733 ;;  a               4    4[COMMON] long 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  grs             1   11[COMMON] unsigned char 
  3736 ;;  bexp            1   10[COMMON] unsigned char 
  3737 ;;  aexp            1    9[COMMON] unsigned char 
  3738 ;;  signs           1    8[COMMON] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  4    0[COMMON] unsigned char 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, btemp+1
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3748 ;;      Params:         8       0       0       0
  3749 ;;      Locals:         4       0       0       0
  3750 ;;      Temps:          0       8       0       0
  3751 ;;      Totals:        12       8       0       0
  3752 ;;Total ram usage:       20 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		___flsub
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function ___fladd
  3763  0DC1                     ___fladd:	
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3767  0DC1  0873               	movf	___fladd@b+3,w
  3768  0DC2  3980               	andlw	128
  3769  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0DC5  00A0               	movwf	??___fladd
  3772  0DC6  0820               	movf	??___fladd,w
  3773  0DC7  00F8               	movwf	___fladd@signs
  3774  0DC8  0873               	movf	___fladd@b+3,w
  3775  0DC9  00A0               	movwf	??___fladd
  3776  0DCA  0720               	addwf	??___fladd,w
  3777  0DCB  00A1               	movwf	??___fladd+1
  3778  0DCC  0821               	movf	??___fladd+1,w
  3779  0DCD  00FA               	movwf	___fladd@bexp
  3780  0DCE  1BF2               	btfsc	___fladd@b+2,7
  3781  0DCF  147A               	bsf	___fladd@bexp,0
  3782  0DD0  087A               	movf	___fladd@bexp,w
  3783  0DD1  1903               	btfsc	3,2
  3784  0DD2  2DE1               	goto	l2181
  3785  0DD3  0A7A               	incf	___fladd@bexp,w
  3786  0DD4  1D03               	btfss	3,2
  3787  0DD5  2DDE               	goto	l2177
  3788  0DD6  3000               	movlw	0
  3789  0DD7  00F3               	movwf	___fladd@b+3
  3790  0DD8  3000               	movlw	0
  3791  0DD9  00F2               	movwf	___fladd@b+2
  3792  0DDA  3000               	movlw	0
  3793  0DDB  00F1               	movwf	___fladd@b+1
  3794  0DDC  3000               	movlw	0
  3795  0DDD  00F0               	movwf	___fladd@b
  3796  0DDE                     l2177:	
  3797  0DDE  17F2               	bsf	___fladd@b+2,7
  3798  0DDF  01F3               	clrf	___fladd@b+3
  3799  0DE0  2DE9               	goto	l2183
  3800  0DE1                     l2181:	
  3801  0DE1  3000               	movlw	0
  3802  0DE2  00F3               	movwf	___fladd@b+3
  3803  0DE3  3000               	movlw	0
  3804  0DE4  00F2               	movwf	___fladd@b+2
  3805  0DE5  3000               	movlw	0
  3806  0DE6  00F1               	movwf	___fladd@b+1
  3807  0DE7  3000               	movlw	0
  3808  0DE8  00F0               	movwf	___fladd@b
  3809  0DE9                     l2183:	
  3810  0DE9  0877               	movf	___fladd@a+3,w
  3811  0DEA  3980               	andlw	128
  3812  0DEB  00A0               	movwf	??___fladd
  3813  0DEC  0820               	movf	??___fladd,w
  3814  0DED  00F9               	movwf	___fladd@aexp
  3815  0DEE  0879               	movf	___fladd@aexp,w
  3816  0DEF  0678               	xorwf	___fladd@signs,w
  3817  0DF0  1D03               	btfss	3,2
  3818  0DF1  1778               	bsf	___fladd@signs,6
  3819  0DF2  0877               	movf	___fladd@a+3,w
  3820  0DF3  00A0               	movwf	??___fladd
  3821  0DF4  0720               	addwf	??___fladd,w
  3822  0DF5  00A1               	movwf	??___fladd+1
  3823  0DF6  0821               	movf	??___fladd+1,w
  3824  0DF7  00F9               	movwf	___fladd@aexp
  3825  0DF8  1BF6               	btfsc	___fladd@a+2,7
  3826  0DF9  1479               	bsf	___fladd@aexp,0
  3827  0DFA  0879               	movf	___fladd@aexp,w
  3828  0DFB  1903               	btfsc	3,2
  3829  0DFC  2E0B               	goto	l2205
  3830  0DFD  0A79               	incf	___fladd@aexp,w
  3831  0DFE  1D03               	btfss	3,2
  3832  0DFF  2E08               	goto	l2201
  3833  0E00  3000               	movlw	0
  3834  0E01  00F7               	movwf	___fladd@a+3
  3835  0E02  3000               	movlw	0
  3836  0E03  00F6               	movwf	___fladd@a+2
  3837  0E04  3000               	movlw	0
  3838  0E05  00F5               	movwf	___fladd@a+1
  3839  0E06  3000               	movlw	0
  3840  0E07  00F4               	movwf	___fladd@a
  3841  0E08                     l2201:	
  3842  0E08  17F6               	bsf	___fladd@a+2,7
  3843  0E09  01F7               	clrf	___fladd@a+3
  3844  0E0A  2E13               	goto	l625
  3845  0E0B                     l2205:	
  3846  0E0B  3000               	movlw	0
  3847  0E0C  00F7               	movwf	___fladd@a+3
  3848  0E0D  3000               	movlw	0
  3849  0E0E  00F6               	movwf	___fladd@a+2
  3850  0E0F  3000               	movlw	0
  3851  0E10  00F5               	movwf	___fladd@a+1
  3852  0E11  3000               	movlw	0
  3853  0E12  00F4               	movwf	___fladd@a
  3854  0E13                     l625:	
  3855  0E13  087A               	movf	___fladd@bexp,w
  3856  0E14  0279               	subwf	___fladd@aexp,w
  3857  0E15  1803               	skipnc
  3858  0E16  2E59               	goto	l2241
  3859  0E17  1F78               	btfss	___fladd@signs,6
  3860  0E18  2E1D               	goto	l2211
  3861  0E19  3080               	movlw	128
  3862  0E1A  00A0               	movwf	??___fladd
  3863  0E1B  0820               	movf	??___fladd,w
  3864  0E1C  06F8               	xorwf	___fladd@signs,f
  3865  0E1D                     l2211:	
  3866  0E1D  087A               	movf	___fladd@bexp,w
  3867  0E1E  00A0               	movwf	??___fladd
  3868  0E1F  0820               	movf	??___fladd,w
  3869  0E20  00FB               	movwf	___fladd@grs
  3870  0E21  0879               	movf	___fladd@aexp,w
  3871  0E22  00A0               	movwf	??___fladd
  3872  0E23  0820               	movf	??___fladd,w
  3873  0E24  00FA               	movwf	___fladd@bexp
  3874  0E25  087B               	movf	___fladd@grs,w
  3875  0E26  00A0               	movwf	??___fladd
  3876  0E27  0820               	movf	??___fladd,w
  3877  0E28  00F9               	movwf	___fladd@aexp
  3878  0E29  0870               	movf	___fladd@b,w
  3879  0E2A  00A0               	movwf	??___fladd
  3880  0E2B  0820               	movf	??___fladd,w
  3881  0E2C  00FB               	movwf	___fladd@grs
  3882  0E2D  0874               	movf	___fladd@a,w
  3883  0E2E  00A0               	movwf	??___fladd
  3884  0E2F  0820               	movf	??___fladd,w
  3885  0E30  00F0               	movwf	___fladd@b
  3886  0E31  087B               	movf	___fladd@grs,w
  3887  0E32  00A0               	movwf	??___fladd
  3888  0E33  0820               	movf	??___fladd,w
  3889  0E34  00F4               	movwf	___fladd@a
  3890  0E35  0871               	movf	___fladd@b+1,w
  3891  0E36  00A0               	movwf	??___fladd
  3892  0E37  0820               	movf	??___fladd,w
  3893  0E38  00FB               	movwf	___fladd@grs
  3894  0E39  0875               	movf	___fladd@a+1,w
  3895  0E3A  00A0               	movwf	??___fladd
  3896  0E3B  0820               	movf	??___fladd,w
  3897  0E3C  00F1               	movwf	___fladd@b+1
  3898  0E3D  087B               	movf	___fladd@grs,w
  3899  0E3E  00A0               	movwf	??___fladd
  3900  0E3F  0820               	movf	??___fladd,w
  3901  0E40  00F5               	movwf	___fladd@a+1
  3902  0E41  0872               	movf	___fladd@b+2,w
  3903  0E42  00A0               	movwf	??___fladd
  3904  0E43  0820               	movf	??___fladd,w
  3905  0E44  00FB               	movwf	___fladd@grs
  3906  0E45  0876               	movf	___fladd@a+2,w
  3907  0E46  00A0               	movwf	??___fladd
  3908  0E47  0820               	movf	??___fladd,w
  3909  0E48  00F2               	movwf	___fladd@b+2
  3910  0E49  087B               	movf	___fladd@grs,w
  3911  0E4A  00A0               	movwf	??___fladd
  3912  0E4B  0820               	movf	??___fladd,w
  3913  0E4C  00F6               	movwf	___fladd@a+2
  3914  0E4D  0873               	movf	___fladd@b+3,w
  3915  0E4E  00A0               	movwf	??___fladd
  3916  0E4F  0820               	movf	??___fladd,w
  3917  0E50  00FB               	movwf	___fladd@grs
  3918  0E51  0877               	movf	___fladd@a+3,w
  3919  0E52  00A0               	movwf	??___fladd
  3920  0E53  0820               	movf	??___fladd,w
  3921  0E54  00F3               	movwf	___fladd@b+3
  3922  0E55  087B               	movf	___fladd@grs,w
  3923  0E56  00A0               	movwf	??___fladd
  3924  0E57  0820               	movf	??___fladd,w
  3925  0E58  00F7               	movwf	___fladd@a+3
  3926  0E59                     l2241:	
  3927  0E59  01FB               	clrf	___fladd@grs
  3928  0E5A  0879               	movf	___fladd@aexp,w
  3929  0E5B  00A0               	movwf	??___fladd
  3930  0E5C  01A1               	clrf	??___fladd+1
  3931  0E5D  0821               	movf	??___fladd+1,w
  3932  0E5E  00A3               	movwf	??___fladd+3
  3933  0E5F  087A               	movf	___fladd@bexp,w
  3934  0E60  0220               	subwf	??___fladd,w
  3935  0E61  00A2               	movwf	??___fladd+2
  3936  0E62  1C03               	skipc
  3937  0E63  03A3               	decf	??___fladd+3,f
  3938  0E64  0823               	movf	??___fladd+3,w
  3939  0E65  3A80               	xorlw	128
  3940  0E66  00FF               	movwf	127
  3941  0E67  3080               	movlw	128
  3942  0E68  027F               	subwf	127,w
  3943  0E69  1D03               	skipz
  3944  0E6A  2E6D               	goto	u2785
  3945  0E6B  301A               	movlw	26
  3946  0E6C  0222               	subwf	??___fladd+2,w
  3947  0E6D                     u2785:	
  3948  0E6D  1C03               	skipc
  3949  0E6E  2EAA               	goto	l2259
  3950  0E6F  0873               	movf	___fladd@b+3,w
  3951  0E70  0472               	iorwf	___fladd@b+2,w
  3952  0E71  0471               	iorwf	___fladd@b+1,w
  3953  0E72  0470               	iorwf	___fladd@b,w
  3954  0E73  1903               	btfsc	3,2
  3955  0E74  2E77               	goto	u2790
  3956  0E75  3001               	movlw	1
  3957  0E76  2E78               	goto	u2800
  3958  0E77                     u2790:	
  3959  0E77  3000               	movlw	0
  3960  0E78                     u2800:	
  3961  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0E7A  00A0               	movwf	??___fladd
  3964  0E7B  0820               	movf	??___fladd,w
  3965  0E7C  00FB               	movwf	___fladd@grs
  3966  0E7D  3000               	movlw	0
  3967  0E7E  00F3               	movwf	___fladd@b+3
  3968  0E7F  3000               	movlw	0
  3969  0E80  00F2               	movwf	___fladd@b+2
  3970  0E81  3000               	movlw	0
  3971  0E82  00F1               	movwf	___fladd@b+1
  3972  0E83  3000               	movlw	0
  3973  0E84  00F0               	movwf	___fladd@b
  3974  0E85  0879               	movf	___fladd@aexp,w
  3975  0E86  00A0               	movwf	??___fladd
  3976  0E87  0820               	movf	??___fladd,w
  3977  0E88  00FA               	movwf	___fladd@bexp
  3978  0E89  2EAE               	goto	l629
  3979  0E8A                     l631:	
  3980  0E8A  1C7B               	btfss	___fladd@grs,0
  3981  0E8B  2E97               	goto	l2249
  3982  0E8C  087B               	movf	___fladd@grs,w
  3983  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0E8F  00A0               	movwf	??___fladd
  3986  0E90  1003               	clrc
  3987  0E91  0C20               	rrf	??___fladd,w
  3988  0E92  3801               	iorlw	1
  3989  0E93  00A1               	movwf	??___fladd+1
  3990  0E94  0821               	movf	??___fladd+1,w
  3991  0E95  00FB               	movwf	___fladd@grs
  3992  0E96  2E99               	goto	l2251
  3993  0E97                     l2249:	
  3994  0E97  1003               	clrc
  3995  0E98  0CFB               	rrf	___fladd@grs,f
  3996  0E99                     l2251:	
  3997  0E99  1870               	btfsc	___fladd@b,0
  3998  0E9A  17FB               	bsf	___fladd@grs,7
  3999  0E9B  3001               	movlw	1
  4000  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0E9E  00A0               	movwf	??___fladd
  4003  0E9F                     u2835:	
  4004  0E9F  0D73               	rlf	___fladd@b+3,w
  4005  0EA0  0CF3               	rrf	___fladd@b+3,f
  4006  0EA1  0CF2               	rrf	___fladd@b+2,f
  4007  0EA2  0CF1               	rrf	___fladd@b+1,f
  4008  0EA3  0CF0               	rrf	___fladd@b,f
  4009  0EA4  0BA0               	decfsz	??___fladd& (0+127),f
  4010  0EA5  2E9F               	goto	u2835
  4011  0EA6  3001               	movlw	1
  4012  0EA7  00A0               	movwf	??___fladd
  4013  0EA8  0820               	movf	??___fladd,w
  4014  0EA9  07FA               	addwf	___fladd@bexp,f
  4015  0EAA                     l2259:	
  4016  0EAA  0879               	movf	___fladd@aexp,w
  4017  0EAB  027A               	subwf	___fladd@bexp,w
  4018  0EAC  1C03               	skipc
  4019  0EAD  2E8A               	goto	l631
  4020  0EAE                     l629:	
  4021  0EAE  1B78               	btfsc	___fladd@signs,6
  4022  0EAF  2EF3               	goto	l2285
  4023  0EB0  087A               	movf	___fladd@bexp,w
  4024  0EB1  1D03               	btfss	3,2
  4025  0EB2  2EBC               	goto	l2267
  4026  0EB3  3000               	movlw	0
  4027  0EB4  00F3               	movwf	?___fladd+3
  4028  0EB5  3000               	movlw	0
  4029  0EB6  00F2               	movwf	?___fladd+2
  4030  0EB7  3000               	movlw	0
  4031  0EB8  00F1               	movwf	?___fladd+1
  4032  0EB9  3000               	movlw	0
  4033  0EBA  00F0               	movwf	?___fladd
  4034  0EBB  0008               	return
  4035  0EBC                     l2267:	
  4036  0EBC  0874               	movf	___fladd@a,w
  4037  0EBD  07F0               	addwf	___fladd@b,f
  4038  0EBE  0875               	movf	___fladd@a+1,w
  4039  0EBF  1103               	clrz
  4040  0EC0  1803               	skipnc
  4041  0EC1  3E01               	addlw	1
  4042  0EC2  1D03               	btfss	3,2
  4043  0EC3  07F1               	addwf	___fladd@b+1,f
  4044  0EC4  0876               	movf	___fladd@a+2,w
  4045  0EC5  1103               	clrz
  4046  0EC6  1803               	skipnc
  4047  0EC7  3E01               	addlw	1
  4048  0EC8  1D03               	btfss	3,2
  4049  0EC9  07F2               	addwf	___fladd@b+2,f
  4050  0ECA  0877               	movf	___fladd@a+3,w
  4051  0ECB  1103               	clrz
  4052  0ECC  1803               	skipnc
  4053  0ECD  3E01               	addlw	1
  4054  0ECE  1D03               	btfss	3,2
  4055  0ECF  07F3               	addwf	___fladd@b+3,f
  4056  0ED0  1C73               	btfss	___fladd@b+3,0
  4057  0ED1  2F99               	goto	l2319
  4058  0ED2  1C7B               	btfss	___fladd@grs,0
  4059  0ED3  2EDF               	goto	l2275
  4060  0ED4  087B               	movf	___fladd@grs,w
  4061  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0ED7  00A0               	movwf	??___fladd
  4064  0ED8  1003               	clrc
  4065  0ED9  0C20               	rrf	??___fladd,w
  4066  0EDA  3801               	iorlw	1
  4067  0EDB  00A1               	movwf	??___fladd+1
  4068  0EDC  0821               	movf	??___fladd+1,w
  4069  0EDD  00FB               	movwf	___fladd@grs
  4070  0EDE  2EE1               	goto	l2277
  4071  0EDF                     l2275:	
  4072  0EDF  1003               	clrc
  4073  0EE0  0CFB               	rrf	___fladd@grs,f
  4074  0EE1                     l2277:	
  4075  0EE1  1870               	btfsc	___fladd@b,0
  4076  0EE2  17FB               	bsf	___fladd@grs,7
  4077  0EE3  3001               	movlw	1
  4078  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0EE6  00A0               	movwf	??___fladd
  4081  0EE7                     u2915:	
  4082  0EE7  0D73               	rlf	___fladd@b+3,w
  4083  0EE8  0CF3               	rrf	___fladd@b+3,f
  4084  0EE9  0CF2               	rrf	___fladd@b+2,f
  4085  0EEA  0CF1               	rrf	___fladd@b+1,f
  4086  0EEB  0CF0               	rrf	___fladd@b,f
  4087  0EEC  0BA0               	decfsz	??___fladd& (0+127),f
  4088  0EED  2EE7               	goto	u2915
  4089  0EEE  3001               	movlw	1
  4090  0EEF  00A0               	movwf	??___fladd
  4091  0EF0  0820               	movf	??___fladd,w
  4092  0EF1  07FA               	addwf	___fladd@bexp,f
  4093  0EF2  2F99               	goto	l2319
  4094  0EF3                     l2285:	
  4095  0EF3  0873               	movf	___fladd@b+3,w
  4096  0EF4  3A80               	xorlw	128
  4097  0EF5  00FF               	movwf	127
  4098  0EF6  0877               	movf	___fladd@a+3,w
  4099  0EF7  3A80               	xorlw	128
  4100  0EF8  027F               	subwf	127,w
  4101  0EF9  1D03               	skipz
  4102  0EFA  2F05               	goto	u2923
  4103  0EFB  0876               	movf	___fladd@a+2,w
  4104  0EFC  0272               	subwf	___fladd@b+2,w
  4105  0EFD  1D03               	skipz
  4106  0EFE  2F05               	goto	u2923
  4107  0EFF  0875               	movf	___fladd@a+1,w
  4108  0F00  0271               	subwf	___fladd@b+1,w
  4109  0F01  1D03               	skipz
  4110  0F02  2F05               	goto	u2923
  4111  0F03  0874               	movf	___fladd@a,w
  4112  0F04  0270               	subwf	___fladd@b,w
  4113  0F05                     u2923:	
  4114  0F05  1803               	skipnc
  4115  0F06  2F5F               	goto	l2295
  4116  0F07  30FF               	movlw	255
  4117  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0F0A  00A0               	movwf	??___fladd
  4120  0F0B  30FF               	movlw	255
  4121  0F0C  00A1               	movwf	??___fladd+1
  4122  0F0D  30FF               	movlw	255
  4123  0F0E  00A2               	movwf	??___fladd+2
  4124  0F0F  30FF               	movlw	255
  4125  0F10  00A3               	movwf	??___fladd+3
  4126  0F11  0874               	movf	___fladd@a,w
  4127  0F12  00A4               	movwf	??___fladd+4
  4128  0F13  0875               	movf	___fladd@a+1,w
  4129  0F14  00A5               	movwf	??___fladd+5
  4130  0F15  0876               	movf	___fladd@a+2,w
  4131  0F16  00A6               	movwf	??___fladd+6
  4132  0F17  0877               	movf	___fladd@a+3,w
  4133  0F18  00A7               	movwf	??___fladd+7
  4134  0F19  0870               	movf	___fladd@b,w
  4135  0F1A  02A4               	subwf	??___fladd+4,f
  4136  0F1B  0871               	movf	___fladd@b+1,w
  4137  0F1C  1C03               	skipc
  4138  0F1D  0F71               	incfsz	___fladd@b+1,w
  4139  0F1E  2F20               	goto	u2931
  4140  0F1F  2F21               	goto	u2932
  4141  0F20                     u2931:	
  4142  0F20  02A5               	subwf	??___fladd+5,f
  4143  0F21                     u2932:	
  4144  0F21  0872               	movf	___fladd@b+2,w
  4145  0F22  1C03               	skipc
  4146  0F23  0F72               	incfsz	___fladd@b+2,w
  4147  0F24  2F26               	goto	u2933
  4148  0F25  2F27               	goto	u2934
  4149  0F26                     u2933:	
  4150  0F26  02A6               	subwf	??___fladd+6,f
  4151  0F27                     u2934:	
  4152  0F27  0873               	movf	___fladd@b+3,w
  4153  0F28  1C03               	skipc
  4154  0F29  0F73               	incfsz	___fladd@b+3,w
  4155  0F2A  2F2C               	goto	u2935
  4156  0F2B  2F2D               	goto	u2936
  4157  0F2C                     u2935:	
  4158  0F2C  02A7               	subwf	??___fladd+7,f
  4159  0F2D                     u2936:	
  4160  0F2D  0824               	movf	??___fladd+4,w
  4161  0F2E  07A0               	addwf	??___fladd,f
  4162  0F2F  0825               	movf	??___fladd+5,w
  4163  0F30  1803               	skipnc
  4164  0F31  0F25               	incfsz	??___fladd+5,w
  4165  0F32  2F34               	goto	u2940
  4166  0F33  2F35               	goto	u2941
  4167  0F34                     u2940:	
  4168  0F34  07A1               	addwf	??___fladd+1,f
  4169  0F35                     u2941:	
  4170  0F35  0826               	movf	??___fladd+6,w
  4171  0F36  1803               	skipnc
  4172  0F37  0F26               	incfsz	??___fladd+6,w
  4173  0F38  2F3A               	goto	u2942
  4174  0F39  2F3B               	goto	u2943
  4175  0F3A                     u2942:	
  4176  0F3A  07A2               	addwf	??___fladd+2,f
  4177  0F3B                     u2943:	
  4178  0F3B  0827               	movf	??___fladd+7,w
  4179  0F3C  1803               	skipnc
  4180  0F3D  0A27               	incf	??___fladd+7,w
  4181  0F3E  07A3               	addwf	??___fladd+3,f
  4182  0F3F  0823               	movf	??___fladd+3,w
  4183  0F40  00F3               	movwf	___fladd@b+3
  4184  0F41  0822               	movf	??___fladd+2,w
  4185  0F42  00F2               	movwf	___fladd@b+2
  4186  0F43  0821               	movf	??___fladd+1,w
  4187  0F44  00F1               	movwf	___fladd@b+1
  4188  0F45  0820               	movf	??___fladd,w
  4189  0F46  00F0               	movwf	___fladd@b
  4190  0F47  3080               	movlw	128
  4191  0F48  00A0               	movwf	??___fladd
  4192  0F49  0820               	movf	??___fladd,w
  4193  0F4A  06F8               	xorwf	___fladd@signs,f
  4194  0F4B  09FB               	comf	___fladd@grs,f
  4195  0F4C  0AFB               	incf	___fladd@grs,f
  4196  0F4D  087B               	movf	___fladd@grs,w
  4197  0F4E  1D03               	btfss	3,2
  4198  0F4F  2F6D               	goto	l646
  4199  0F50  3001               	movlw	1
  4200  0F51  07F0               	addwf	___fladd@b,f
  4201  0F52  3000               	movlw	0
  4202  0F53  1803               	skipnc
  4203  0F54  3001               	movlw	1
  4204  0F55  07F1               	addwf	___fladd@b+1,f
  4205  0F56  3000               	movlw	0
  4206  0F57  1803               	skipnc
  4207  0F58  3001               	movlw	1
  4208  0F59  07F2               	addwf	___fladd@b+2,f
  4209  0F5A  3000               	movlw	0
  4210  0F5B  1803               	skipnc
  4211  0F5C  3001               	movlw	1
  4212  0F5D  07F3               	addwf	___fladd@b+3,f
  4213  0F5E  2F6D               	goto	l646
  4214  0F5F                     l2295:	
  4215  0F5F  0874               	movf	___fladd@a,w
  4216  0F60  02F0               	subwf	___fladd@b,f
  4217  0F61  0875               	movf	___fladd@a+1,w
  4218  0F62  1C03               	skipc
  4219  0F63  0F75               	incfsz	___fladd@a+1,w
  4220  0F64  02F1               	subwf	___fladd@b+1,f
  4221  0F65  0876               	movf	___fladd@a+2,w
  4222  0F66  1C03               	skipc
  4223  0F67  0F76               	incfsz	___fladd@a+2,w
  4224  0F68  02F2               	subwf	___fladd@b+2,f
  4225  0F69  0877               	movf	___fladd@a+3,w
  4226  0F6A  1C03               	skipc
  4227  0F6B  0F77               	incfsz	___fladd@a+3,w
  4228  0F6C  02F3               	subwf	___fladd@b+3,f
  4229  0F6D                     l646:	
  4230  0F6D  0873               	movf	___fladd@b+3,w
  4231  0F6E  0472               	iorwf	___fladd@b+2,w
  4232  0F6F  0471               	iorwf	___fladd@b+1,w
  4233  0F70  0470               	iorwf	___fladd@b,w
  4234  0F71  1D03               	skipz
  4235  0F72  2F97               	goto	l2317
  4236  0F73  087B               	movf	___fladd@grs,w
  4237  0F74  1D03               	btfss	3,2
  4238  0F75  2F97               	goto	l2317
  4239  0F76  3000               	movlw	0
  4240  0F77  00F3               	movwf	?___fladd+3
  4241  0F78  3000               	movlw	0
  4242  0F79  00F2               	movwf	?___fladd+2
  4243  0F7A  3000               	movlw	0
  4244  0F7B  00F1               	movwf	?___fladd+1
  4245  0F7C  3000               	movlw	0
  4246  0F7D  00F0               	movwf	?___fladd
  4247  0F7E  0008               	return
  4248  0F7F                     l2303:	
  4249  0F7F  3001               	movlw	1
  4250  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4251  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0F82  00A0               	movwf	??___fladd
  4253  0F83                     u2985:	
  4254  0F83  1003               	clrc
  4255  0F84  0DF0               	rlf	___fladd@b,f
  4256  0F85  0DF1               	rlf	___fladd@b+1,f
  4257  0F86  0DF2               	rlf	___fladd@b+2,f
  4258  0F87  0DF3               	rlf	___fladd@b+3,f
  4259  0F88  0BA0               	decfsz	??___fladd,f
  4260  0F89  2F83               	goto	u2985
  4261  0F8A  1BFB               	btfsc	___fladd@grs,7
  4262  0F8B  1470               	bsf	___fladd@b,0
  4263  0F8C  1C7B               	btfss	___fladd@grs,0
  4264  0F8D  2F90               	goto	l2311
  4265  0F8E  1403               	setc
  4266  0F8F  2F91               	goto	L3
  4267  0F90                     l2311:	
  4268  0F90  1003               	clrc
  4269  0F91                     L3:	
  4270  0F91  0DFB               	rlf	___fladd@grs,f
  4271  0F92  087A               	movf	___fladd@bexp,w
  4272  0F93  1903               	btfsc	3,2
  4273  0F94  2F97               	goto	l2317
  4274  0F95  3001               	movlw	1
  4275  0F96  02FA               	subwf	___fladd@bexp,f
  4276  0F97                     l2317:	
  4277  0F97  1FF2               	btfss	___fladd@b+2,7
  4278  0F98  2F7F               	goto	l2303
  4279  0F99                     l2319:	
  4280  0F99  01F9               	clrf	___fladd@aexp
  4281  0F9A  1FFB               	btfss	___fladd@grs,7
  4282  0F9B  2FA4               	goto	l2329
  4283  0F9C  087B               	movf	___fladd@grs,w
  4284  0F9D  397F               	andlw	127
  4285  0F9E  1903               	btfsc	3,2
  4286  0F9F  1870               	btfsc	___fladd@b,0
  4287  0FA0  2FA2               	goto	l2325
  4288  0FA1  2FA4               	goto	l2329
  4289  0FA2                     l2325:	
  4290  0FA2  01F9               	clrf	___fladd@aexp
  4291  0FA3  0AF9               	incf	___fladd@aexp,f
  4292  0FA4                     l2329:	
  4293  0FA4  0879               	movf	___fladd@aexp,w
  4294  0FA5  1903               	btfsc	3,2
  4295  0FA6  2FD9               	goto	l659
  4296  0FA7  3001               	movlw	1
  4297  0FA8  07F0               	addwf	___fladd@b,f
  4298  0FA9  3000               	movlw	0
  4299  0FAA  1803               	skipnc
  4300  0FAB  3001               	movlw	1
  4301  0FAC  07F1               	addwf	___fladd@b+1,f
  4302  0FAD  3000               	movlw	0
  4303  0FAE  1803               	skipnc
  4304  0FAF  3001               	movlw	1
  4305  0FB0  07F2               	addwf	___fladd@b+2,f
  4306  0FB1  3000               	movlw	0
  4307  0FB2  1803               	skipnc
  4308  0FB3  3001               	movlw	1
  4309  0FB4  07F3               	addwf	___fladd@b+3,f
  4310  0FB5  1C73               	btfss	___fladd@b+3,0
  4311  0FB6  2FD9               	goto	l659
  4312  0FB7  0870               	movf	___fladd@b,w
  4313  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4314  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4315  0FBA  00A0               	movwf	??___fladd
  4316  0FBB  0871               	movf	___fladd@b+1,w
  4317  0FBC  00A1               	movwf	??___fladd+1
  4318  0FBD  0872               	movf	___fladd@b+2,w
  4319  0FBE  00A2               	movwf	??___fladd+2
  4320  0FBF  0873               	movf	___fladd@b+3,w
  4321  0FC0  00A3               	movwf	??___fladd+3
  4322  0FC1  3001               	movlw	1
  4323  0FC2  00A4               	movwf	??___fladd+4
  4324  0FC3                     u3085:	
  4325  0FC3  0D23               	rlf	??___fladd+3,w
  4326  0FC4  0CA3               	rrf	??___fladd+3,f
  4327  0FC5  0CA2               	rrf	??___fladd+2,f
  4328  0FC6  0CA1               	rrf	??___fladd+1,f
  4329  0FC7  0CA0               	rrf	??___fladd,f
  4330  0FC8  0BA4               	decfsz	??___fladd+4,f
  4331  0FC9  2FC3               	goto	u3085
  4332  0FCA  0823               	movf	??___fladd+3,w
  4333  0FCB  00F3               	movwf	___fladd@b+3
  4334  0FCC  0822               	movf	??___fladd+2,w
  4335  0FCD  00F2               	movwf	___fladd@b+2
  4336  0FCE  0821               	movf	??___fladd+1,w
  4337  0FCF  00F1               	movwf	___fladd@b+1
  4338  0FD0  0820               	movf	??___fladd,w
  4339  0FD1  00F0               	movwf	___fladd@b
  4340  0FD2  0A7A               	incf	___fladd@bexp,w
  4341  0FD3  1903               	btfsc	3,2
  4342  0FD4  2FD9               	goto	l659
  4343  0FD5  3001               	movlw	1
  4344  0FD6  00A0               	movwf	??___fladd
  4345  0FD7  0820               	movf	??___fladd,w
  4346  0FD8  07FA               	addwf	___fladd@bexp,f
  4347  0FD9                     l659:	
  4348  0FD9  0A7A               	incf	___fladd@bexp,w
  4349  0FDA  1D03               	btfss	3,2
  4350  0FDB  087A               	movf	___fladd@bexp,w
  4351  0FDC  1D03               	btfss	3,2
  4352  0FDD  2FE9               	goto	l2347
  4353  0FDE  3000               	movlw	0
  4354  0FDF  00F3               	movwf	___fladd@b+3
  4355  0FE0  3000               	movlw	0
  4356  0FE1  00F2               	movwf	___fladd@b+2
  4357  0FE2  3000               	movlw	0
  4358  0FE3  00F1               	movwf	___fladd@b+1
  4359  0FE4  3000               	movlw	0
  4360  0FE5  00F0               	movwf	___fladd@b
  4361  0FE6  087A               	movf	___fladd@bexp,w
  4362  0FE7  1903               	btfsc	3,2
  4363  0FE8  01F8               	clrf	___fladd@signs
  4364  0FE9                     l2347:	
  4365  0FE9  1C7A               	btfss	___fladd@bexp,0
  4366  0FEA  2FED               	goto	l2351
  4367  0FEB  17F2               	bsf	___fladd@b+2,7
  4368  0FEC  2FF3               	goto	l667
  4369  0FED                     l2351:	
  4370  0FED  307F               	movlw	127
  4371  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0FF0  00A0               	movwf	??___fladd
  4374  0FF1  0820               	movf	??___fladd,w
  4375  0FF2  05F2               	andwf	___fladd@b+2,f
  4376  0FF3                     l667:	
  4377  0FF3  087A               	movf	___fladd@bexp,w
  4378  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0FF6  00A0               	movwf	??___fladd
  4381  0FF7  1003               	clrc
  4382  0FF8  0C20               	rrf	??___fladd,w
  4383  0FF9  00A1               	movwf	??___fladd+1
  4384  0FFA  0821               	movf	??___fladd+1,w
  4385  0FFB  00F3               	movwf	___fladd@b+3
  4386  0FFC  1FF8               	btfss	___fladd@signs,7
  4387  0FFD  0008               	return
  4388  0FFE  17F3               	bsf	___fladd@b+3,7
  4389  0FFF  0008               	return
  4390  1000                     __end_of___fladd:	
  4391                           
  4392                           	psect	text15
  4393  08F2                     __ptext15:	
  4394 ;; *************** function ___flneg *****************
  4395 ;; Defined at:
  4396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  f1              4    0[COMMON] unsigned char 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  4    0[COMMON] unsigned char 
  4403 ;; Registers used:
  4404 ;;		wreg
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4410 ;;      Params:         4       0       0       0
  4411 ;;      Locals:         0       0       0       0
  4412 ;;      Temps:          0       0       0       0
  4413 ;;      Totals:         4       0       0       0
  4414 ;;Total ram usage:        4 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_ftoa1
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function ___flneg
  4425  08F2                     ___flneg:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in ___flneg: [wreg]
  4429  08F2  0873               	movf	___flneg@f1+3,w
  4430  08F3  0472               	iorwf	___flneg@f1+2,w
  4431  08F4  0471               	iorwf	___flneg@f1+1,w
  4432  08F5  0470               	iorwf	___flneg@f1,w
  4433  08F6  1903               	skipnz
  4434  08F7  0008               	return
  4435  08F8  3080               	movlw	128
  4436  08F9  06F3               	xorwf	___flneg@f1+3,f
  4437  08FA  0008               	return
  4438  08FB                     __end_of___flneg:	
  4439                           
  4440                           	psect	text16
  4441  01A0                     __ptext16:	
  4442 ;; *************** function ___flmul *****************
  4443 ;; Defined at:
  4444 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  b               4    0[BANK0 ] unsigned char 
  4447 ;;  a               4    4[BANK0 ] unsigned char 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  prod            4   20[BANK0 ] struct .
  4450 ;;  grs             4   14[BANK0 ] unsigned long 
  4451 ;;  temp            2   24[BANK0 ] struct .
  4452 ;;  bexp            1   19[BANK0 ] unsigned char 
  4453 ;;  aexp            1   18[BANK0 ] unsigned char 
  4454 ;;  sign            1   13[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  4    0[BANK0 ] unsigned char 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4464 ;;      Params:         0       8       0       0
  4465 ;;      Locals:         0      13       0       0
  4466 ;;      Temps:          0       5       0       0
  4467 ;;      Totals:         0      26       0       0
  4468 ;;Total ram usage:       26 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    1
  4471 ;; This function calls:
  4472 ;;		__Umul8_16
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;;		_ftoa1
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function ___flmul
  4481  01A0                     ___flmul:	
  4482                           
  4483                           ;incstack = 0
  4484                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4485  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4486  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4487  01A2  0823               	movf	___flmul@b+3,w
  4488  01A3  3980               	andlw	128
  4489  01A4  00A8               	movwf	??___flmul
  4490  01A5  0828               	movf	??___flmul,w
  4491  01A6  00AD               	movwf	___flmul@sign
  4492  01A7  0823               	movf	___flmul@b+3,w
  4493  01A8  00A8               	movwf	??___flmul
  4494  01A9  0728               	addwf	??___flmul,w
  4495  01AA  00A9               	movwf	??___flmul+1
  4496  01AB  0829               	movf	??___flmul+1,w
  4497  01AC  00B3               	movwf	___flmul@bexp
  4498  01AD  1BA2               	btfsc	___flmul@b+2,7
  4499  01AE  1433               	bsf	___flmul@bexp,0
  4500  01AF  0833               	movf	___flmul@bexp,w
  4501  01B0  1903               	btfsc	3,2
  4502  01B1  29BF               	goto	l2493
  4503  01B2  0A33               	incf	___flmul@bexp,w
  4504  01B3  1D03               	btfss	3,2
  4505  01B4  29BD               	goto	l2491
  4506  01B5  3000               	movlw	0
  4507  01B6  00A3               	movwf	___flmul@b+3
  4508  01B7  3000               	movlw	0
  4509  01B8  00A2               	movwf	___flmul@b+2
  4510  01B9  3000               	movlw	0
  4511  01BA  00A1               	movwf	___flmul@b+1
  4512  01BB  3000               	movlw	0
  4513  01BC  00A0               	movwf	___flmul@b
  4514  01BD                     l2491:	
  4515  01BD  17A2               	bsf	___flmul@b+2,7
  4516  01BE  29C7               	goto	l2495
  4517  01BF                     l2493:	
  4518  01BF  3000               	movlw	0
  4519  01C0  00A3               	movwf	___flmul@b+3
  4520  01C1  3000               	movlw	0
  4521  01C2  00A2               	movwf	___flmul@b+2
  4522  01C3  3000               	movlw	0
  4523  01C4  00A1               	movwf	___flmul@b+1
  4524  01C5  3000               	movlw	0
  4525  01C6  00A0               	movwf	___flmul@b
  4526  01C7                     l2495:	
  4527  01C7  0827               	movf	___flmul@a+3,w
  4528  01C8  3980               	andlw	128
  4529  01C9  00A8               	movwf	??___flmul
  4530  01CA  0828               	movf	??___flmul,w
  4531  01CB  06AD               	xorwf	___flmul@sign,f
  4532  01CC  0827               	movf	___flmul@a+3,w
  4533  01CD  00A8               	movwf	??___flmul
  4534  01CE  0728               	addwf	??___flmul,w
  4535  01CF  00A9               	movwf	??___flmul+1
  4536  01D0  0829               	movf	??___flmul+1,w
  4537  01D1  00B2               	movwf	___flmul@aexp
  4538  01D2  1BA6               	btfsc	___flmul@a+2,7
  4539  01D3  1432               	bsf	___flmul@aexp,0
  4540  01D4  0832               	movf	___flmul@aexp,w
  4541  01D5  1903               	btfsc	3,2
  4542  01D6  29E4               	goto	l2511
  4543  01D7  0A32               	incf	___flmul@aexp,w
  4544  01D8  1D03               	btfss	3,2
  4545  01D9  29E2               	goto	l2509
  4546  01DA  3000               	movlw	0
  4547  01DB  00A7               	movwf	___flmul@a+3
  4548  01DC  3000               	movlw	0
  4549  01DD  00A6               	movwf	___flmul@a+2
  4550  01DE  3000               	movlw	0
  4551  01DF  00A5               	movwf	___flmul@a+1
  4552  01E0  3000               	movlw	0
  4553  01E1  00A4               	movwf	___flmul@a
  4554  01E2                     l2509:	
  4555  01E2  17A6               	bsf	___flmul@a+2,7
  4556  01E3  29EC               	goto	l2513
  4557  01E4                     l2511:	
  4558  01E4  3000               	movlw	0
  4559  01E5  00A7               	movwf	___flmul@a+3
  4560  01E6  3000               	movlw	0
  4561  01E7  00A6               	movwf	___flmul@a+2
  4562  01E8  3000               	movlw	0
  4563  01E9  00A5               	movwf	___flmul@a+1
  4564  01EA  3000               	movlw	0
  4565  01EB  00A4               	movwf	___flmul@a
  4566  01EC                     l2513:	
  4567  01EC  0832               	movf	___flmul@aexp,w
  4568  01ED  1D03               	btfss	3,2
  4569  01EE  0833               	movf	___flmul@bexp,w
  4570  01EF  1D03               	btfss	3,2
  4571  01F0  29FA               	goto	l2521
  4572  01F1  3000               	movlw	0
  4573  01F2  00A3               	movwf	?___flmul+3
  4574  01F3  3000               	movlw	0
  4575  01F4  00A2               	movwf	?___flmul+2
  4576  01F5  3000               	movlw	0
  4577  01F6  00A1               	movwf	?___flmul+1
  4578  01F7  3000               	movlw	0
  4579  01F8  00A0               	movwf	?___flmul
  4580  01F9  0008               	return
  4581  01FA                     l2521:	
  4582  01FA  0820               	movf	___flmul@b,w
  4583  01FB  00A8               	movwf	??___flmul
  4584  01FC  0828               	movf	??___flmul,w
  4585  01FD  00F0               	movwf	__Umul8_16@multiplicand
  4586  01FE  0826               	movf	___flmul@a+2,w
  4587  01FF  118A  2018  118A   	fcall	__Umul8_16
  4588  0202  0871               	movf	?__Umul8_16+1,w
  4589  0203  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0204  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0205  00B9               	movwf	___flmul@temp+1
  4592  0206  0870               	movf	?__Umul8_16,w
  4593  0207  00B8               	movwf	___flmul@temp
  4594  0208  0838               	movf	___flmul@temp,w
  4595  0209  00A8               	movwf	??___flmul
  4596  020A  01A9               	clrf	??___flmul+1
  4597  020B  01AA               	clrf	??___flmul+2
  4598  020C  01AB               	clrf	??___flmul+3
  4599  020D  082B               	movf	??___flmul+3,w
  4600  020E  00B1               	movwf	___flmul@grs+3
  4601  020F  082A               	movf	??___flmul+2,w
  4602  0210  00B0               	movwf	___flmul@grs+2
  4603  0211  0829               	movf	??___flmul+1,w
  4604  0212  00AF               	movwf	___flmul@grs+1
  4605  0213  0828               	movf	??___flmul,w
  4606  0214  00AE               	movwf	___flmul@grs
  4607  0215  0839               	movf	___flmul@temp+1,w
  4608  0216  00A8               	movwf	??___flmul
  4609  0217  01A9               	clrf	??___flmul+1
  4610  0218  01AA               	clrf	??___flmul+2
  4611  0219  01AB               	clrf	??___flmul+3
  4612  021A  082B               	movf	??___flmul+3,w
  4613  021B  00B7               	movwf	___flmul@prod+3
  4614  021C  082A               	movf	??___flmul+2,w
  4615  021D  00B6               	movwf	___flmul@prod+2
  4616  021E  0829               	movf	??___flmul+1,w
  4617  021F  00B5               	movwf	___flmul@prod+1
  4618  0220  0828               	movf	??___flmul,w
  4619  0221  00B4               	movwf	___flmul@prod
  4620  0222  0821               	movf	___flmul@b+1,w
  4621  0223  00A8               	movwf	??___flmul
  4622  0224  0828               	movf	??___flmul,w
  4623  0225  00F0               	movwf	__Umul8_16@multiplicand
  4624  0226  0825               	movf	___flmul@a+1,w
  4625  0227  118A  2018  118A   	fcall	__Umul8_16
  4626  022A  0871               	movf	?__Umul8_16+1,w
  4627  022B  1283               	bcf	3,5	;RP0=0, select bank0
  4628  022C  1303               	bcf	3,6	;RP1=0, select bank0
  4629  022D  00B9               	movwf	___flmul@temp+1
  4630  022E  0870               	movf	?__Umul8_16,w
  4631  022F  00B8               	movwf	___flmul@temp
  4632  0230  0838               	movf	___flmul@temp,w
  4633  0231  00A8               	movwf	??___flmul
  4634  0232  01A9               	clrf	??___flmul+1
  4635  0233  01AA               	clrf	??___flmul+2
  4636  0234  01AB               	clrf	??___flmul+3
  4637  0235  0828               	movf	??___flmul,w
  4638  0236  07AE               	addwf	___flmul@grs,f
  4639  0237  0829               	movf	??___flmul+1,w
  4640  0238  1103               	clrz
  4641  0239  1803               	skipnc
  4642  023A  3E01               	addlw	1
  4643  023B  1D03               	btfss	3,2
  4644  023C  07AF               	addwf	___flmul@grs+1,f
  4645  023D  082A               	movf	??___flmul+2,w
  4646  023E  1103               	clrz
  4647  023F  1803               	skipnc
  4648  0240  3E01               	addlw	1
  4649  0241  1D03               	btfss	3,2
  4650  0242  07B0               	addwf	___flmul@grs+2,f
  4651  0243  082B               	movf	??___flmul+3,w
  4652  0244  1103               	clrz
  4653  0245  1803               	skipnc
  4654  0246  3E01               	addlw	1
  4655  0247  1D03               	btfss	3,2
  4656  0248  07B1               	addwf	___flmul@grs+3,f
  4657  0249  0839               	movf	___flmul@temp+1,w
  4658  024A  00A8               	movwf	??___flmul
  4659  024B  01A9               	clrf	??___flmul+1
  4660  024C  01AA               	clrf	??___flmul+2
  4661  024D  01AB               	clrf	??___flmul+3
  4662  024E  0828               	movf	??___flmul,w
  4663  024F  07B4               	addwf	___flmul@prod,f
  4664  0250  0829               	movf	??___flmul+1,w
  4665  0251  1103               	clrz
  4666  0252  1803               	skipnc
  4667  0253  3E01               	addlw	1
  4668  0254  1D03               	btfss	3,2
  4669  0255  07B5               	addwf	___flmul@prod+1,f
  4670  0256  082A               	movf	??___flmul+2,w
  4671  0257  1103               	clrz
  4672  0258  1803               	skipnc
  4673  0259  3E01               	addlw	1
  4674  025A  1D03               	btfss	3,2
  4675  025B  07B6               	addwf	___flmul@prod+2,f
  4676  025C  082B               	movf	??___flmul+3,w
  4677  025D  1103               	clrz
  4678  025E  1803               	skipnc
  4679  025F  3E01               	addlw	1
  4680  0260  1D03               	btfss	3,2
  4681  0261  07B7               	addwf	___flmul@prod+3,f
  4682  0262  0822               	movf	___flmul@b+2,w
  4683  0263  00A8               	movwf	??___flmul
  4684  0264  0828               	movf	??___flmul,w
  4685  0265  00F0               	movwf	__Umul8_16@multiplicand
  4686  0266  0824               	movf	___flmul@a,w
  4687  0267  118A  2018  118A   	fcall	__Umul8_16
  4688  026A  0871               	movf	?__Umul8_16+1,w
  4689  026B  1283               	bcf	3,5	;RP0=0, select bank0
  4690  026C  1303               	bcf	3,6	;RP1=0, select bank0
  4691  026D  00B9               	movwf	___flmul@temp+1
  4692  026E  0870               	movf	?__Umul8_16,w
  4693  026F  00B8               	movwf	___flmul@temp
  4694  0270  0838               	movf	___flmul@temp,w
  4695  0271  00A8               	movwf	??___flmul
  4696  0272  01A9               	clrf	??___flmul+1
  4697  0273  01AA               	clrf	??___flmul+2
  4698  0274  01AB               	clrf	??___flmul+3
  4699  0275  0828               	movf	??___flmul,w
  4700  0276  07AE               	addwf	___flmul@grs,f
  4701  0277  0829               	movf	??___flmul+1,w
  4702  0278  1103               	clrz
  4703  0279  1803               	skipnc
  4704  027A  3E01               	addlw	1
  4705  027B  1D03               	btfss	3,2
  4706  027C  07AF               	addwf	___flmul@grs+1,f
  4707  027D  082A               	movf	??___flmul+2,w
  4708  027E  1103               	clrz
  4709  027F  1803               	skipnc
  4710  0280  3E01               	addlw	1
  4711  0281  1D03               	btfss	3,2
  4712  0282  07B0               	addwf	___flmul@grs+2,f
  4713  0283  082B               	movf	??___flmul+3,w
  4714  0284  1103               	clrz
  4715  0285  1803               	skipnc
  4716  0286  3E01               	addlw	1
  4717  0287  1D03               	btfss	3,2
  4718  0288  07B1               	addwf	___flmul@grs+3,f
  4719  0289  0839               	movf	___flmul@temp+1,w
  4720  028A  00A8               	movwf	??___flmul
  4721  028B  01A9               	clrf	??___flmul+1
  4722  028C  01AA               	clrf	??___flmul+2
  4723  028D  01AB               	clrf	??___flmul+3
  4724  028E  0828               	movf	??___flmul,w
  4725  028F  07B4               	addwf	___flmul@prod,f
  4726  0290  0829               	movf	??___flmul+1,w
  4727  0291  1103               	clrz
  4728  0292  1803               	skipnc
  4729  0293  3E01               	addlw	1
  4730  0294  1D03               	btfss	3,2
  4731  0295  07B5               	addwf	___flmul@prod+1,f
  4732  0296  082A               	movf	??___flmul+2,w
  4733  0297  1103               	clrz
  4734  0298  1803               	skipnc
  4735  0299  3E01               	addlw	1
  4736  029A  1D03               	btfss	3,2
  4737  029B  07B6               	addwf	___flmul@prod+2,f
  4738  029C  082B               	movf	??___flmul+3,w
  4739  029D  1103               	clrz
  4740  029E  1803               	skipnc
  4741  029F  3E01               	addlw	1
  4742  02A0  1D03               	btfss	3,2
  4743  02A1  07B7               	addwf	___flmul@prod+3,f
  4744  02A2  3008               	movlw	8
  4745  02A3  00A8               	movwf	??___flmul
  4746  02A4                     u3485:	
  4747  02A4  1003               	clrc
  4748  02A5  0DAE               	rlf	___flmul@grs,f
  4749  02A6  0DAF               	rlf	___flmul@grs+1,f
  4750  02A7  0DB0               	rlf	___flmul@grs+2,f
  4751  02A8  0DB1               	rlf	___flmul@grs+3,f
  4752  02A9  0BA8               	decfsz	??___flmul,f
  4753  02AA  2AA4               	goto	u3485
  4754  02AB  0821               	movf	___flmul@b+1,w
  4755  02AC  00A8               	movwf	??___flmul
  4756  02AD  0828               	movf	??___flmul,w
  4757  02AE  00F0               	movwf	__Umul8_16@multiplicand
  4758  02AF  0824               	movf	___flmul@a,w
  4759  02B0  118A  2018  118A   	fcall	__Umul8_16
  4760  02B3  0871               	movf	?__Umul8_16+1,w
  4761  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  4762  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  4763  02B6  00B9               	movwf	___flmul@temp+1
  4764  02B7  0870               	movf	?__Umul8_16,w
  4765  02B8  00B8               	movwf	___flmul@temp
  4766  02B9  0838               	movf	___flmul@temp,w
  4767  02BA  00A8               	movwf	??___flmul
  4768  02BB  0839               	movf	___flmul@temp+1,w
  4769  02BC  00A9               	movwf	??___flmul+1
  4770  02BD  01AA               	clrf	??___flmul+2
  4771  02BE  01AB               	clrf	??___flmul+3
  4772  02BF  0828               	movf	??___flmul,w
  4773  02C0  07AE               	addwf	___flmul@grs,f
  4774  02C1  0829               	movf	??___flmul+1,w
  4775  02C2  1103               	clrz
  4776  02C3  1803               	skipnc
  4777  02C4  3E01               	addlw	1
  4778  02C5  1D03               	btfss	3,2
  4779  02C6  07AF               	addwf	___flmul@grs+1,f
  4780  02C7  082A               	movf	??___flmul+2,w
  4781  02C8  1103               	clrz
  4782  02C9  1803               	skipnc
  4783  02CA  3E01               	addlw	1
  4784  02CB  1D03               	btfss	3,2
  4785  02CC  07B0               	addwf	___flmul@grs+2,f
  4786  02CD  082B               	movf	??___flmul+3,w
  4787  02CE  1103               	clrz
  4788  02CF  1803               	skipnc
  4789  02D0  3E01               	addlw	1
  4790  02D1  1D03               	btfss	3,2
  4791  02D2  07B1               	addwf	___flmul@grs+3,f
  4792  02D3  0820               	movf	___flmul@b,w
  4793  02D4  00A8               	movwf	??___flmul
  4794  02D5  0828               	movf	??___flmul,w
  4795  02D6  00F0               	movwf	__Umul8_16@multiplicand
  4796  02D7  0825               	movf	___flmul@a+1,w
  4797  02D8  118A  2018  118A   	fcall	__Umul8_16
  4798  02DB  0871               	movf	?__Umul8_16+1,w
  4799  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  4800  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  4801  02DE  00B9               	movwf	___flmul@temp+1
  4802  02DF  0870               	movf	?__Umul8_16,w
  4803  02E0  00B8               	movwf	___flmul@temp
  4804  02E1  0838               	movf	___flmul@temp,w
  4805  02E2  00A8               	movwf	??___flmul
  4806  02E3  0839               	movf	___flmul@temp+1,w
  4807  02E4  00A9               	movwf	??___flmul+1
  4808  02E5  01AA               	clrf	??___flmul+2
  4809  02E6  01AB               	clrf	??___flmul+3
  4810  02E7  0828               	movf	??___flmul,w
  4811  02E8  07AE               	addwf	___flmul@grs,f
  4812  02E9  0829               	movf	??___flmul+1,w
  4813  02EA  1103               	clrz
  4814  02EB  1803               	skipnc
  4815  02EC  3E01               	addlw	1
  4816  02ED  1D03               	btfss	3,2
  4817  02EE  07AF               	addwf	___flmul@grs+1,f
  4818  02EF  082A               	movf	??___flmul+2,w
  4819  02F0  1103               	clrz
  4820  02F1  1803               	skipnc
  4821  02F2  3E01               	addlw	1
  4822  02F3  1D03               	btfss	3,2
  4823  02F4  07B0               	addwf	___flmul@grs+2,f
  4824  02F5  082B               	movf	??___flmul+3,w
  4825  02F6  1103               	clrz
  4826  02F7  1803               	skipnc
  4827  02F8  3E01               	addlw	1
  4828  02F9  1D03               	btfss	3,2
  4829  02FA  07B1               	addwf	___flmul@grs+3,f
  4830  02FB  3008               	movlw	8
  4831  02FC  00A8               	movwf	??___flmul
  4832  02FD                     u3515:	
  4833  02FD  1003               	clrc
  4834  02FE  0DAE               	rlf	___flmul@grs,f
  4835  02FF  0DAF               	rlf	___flmul@grs+1,f
  4836  0300  0DB0               	rlf	___flmul@grs+2,f
  4837  0301  0DB1               	rlf	___flmul@grs+3,f
  4838  0302  0BA8               	decfsz	??___flmul,f
  4839  0303  2AFD               	goto	u3515
  4840  0304  0820               	movf	___flmul@b,w
  4841  0305  00A8               	movwf	??___flmul
  4842  0306  0828               	movf	??___flmul,w
  4843  0307  00F0               	movwf	__Umul8_16@multiplicand
  4844  0308  0824               	movf	___flmul@a,w
  4845  0309  118A  2018  118A   	fcall	__Umul8_16
  4846  030C  0871               	movf	?__Umul8_16+1,w
  4847  030D  1283               	bcf	3,5	;RP0=0, select bank0
  4848  030E  1303               	bcf	3,6	;RP1=0, select bank0
  4849  030F  00B9               	movwf	___flmul@temp+1
  4850  0310  0870               	movf	?__Umul8_16,w
  4851  0311  00B8               	movwf	___flmul@temp
  4852  0312  0838               	movf	___flmul@temp,w
  4853  0313  00A8               	movwf	??___flmul
  4854  0314  0839               	movf	___flmul@temp+1,w
  4855  0315  00A9               	movwf	??___flmul+1
  4856  0316  01AA               	clrf	??___flmul+2
  4857  0317  01AB               	clrf	??___flmul+3
  4858  0318  0828               	movf	??___flmul,w
  4859  0319  07AE               	addwf	___flmul@grs,f
  4860  031A  0829               	movf	??___flmul+1,w
  4861  031B  1103               	clrz
  4862  031C  1803               	skipnc
  4863  031D  3E01               	addlw	1
  4864  031E  1D03               	btfss	3,2
  4865  031F  07AF               	addwf	___flmul@grs+1,f
  4866  0320  082A               	movf	??___flmul+2,w
  4867  0321  1103               	clrz
  4868  0322  1803               	skipnc
  4869  0323  3E01               	addlw	1
  4870  0324  1D03               	btfss	3,2
  4871  0325  07B0               	addwf	___flmul@grs+2,f
  4872  0326  082B               	movf	??___flmul+3,w
  4873  0327  1103               	clrz
  4874  0328  1803               	skipnc
  4875  0329  3E01               	addlw	1
  4876  032A  1D03               	btfss	3,2
  4877  032B  07B1               	addwf	___flmul@grs+3,f
  4878  032C  0821               	movf	___flmul@b+1,w
  4879  032D  00A8               	movwf	??___flmul
  4880  032E  0828               	movf	??___flmul,w
  4881  032F  00F0               	movwf	__Umul8_16@multiplicand
  4882  0330  0826               	movf	___flmul@a+2,w
  4883  0331  118A  2018  118A   	fcall	__Umul8_16
  4884  0334  0871               	movf	?__Umul8_16+1,w
  4885  0335  1283               	bcf	3,5	;RP0=0, select bank0
  4886  0336  1303               	bcf	3,6	;RP1=0, select bank0
  4887  0337  00B9               	movwf	___flmul@temp+1
  4888  0338  0870               	movf	?__Umul8_16,w
  4889  0339  00B8               	movwf	___flmul@temp
  4890  033A  0838               	movf	___flmul@temp,w
  4891  033B  00A8               	movwf	??___flmul
  4892  033C  0839               	movf	___flmul@temp+1,w
  4893  033D  00A9               	movwf	??___flmul+1
  4894  033E  01AA               	clrf	??___flmul+2
  4895  033F  01AB               	clrf	??___flmul+3
  4896  0340  0828               	movf	??___flmul,w
  4897  0341  07B4               	addwf	___flmul@prod,f
  4898  0342  0829               	movf	??___flmul+1,w
  4899  0343  1103               	clrz
  4900  0344  1803               	skipnc
  4901  0345  3E01               	addlw	1
  4902  0346  1D03               	btfss	3,2
  4903  0347  07B5               	addwf	___flmul@prod+1,f
  4904  0348  082A               	movf	??___flmul+2,w
  4905  0349  1103               	clrz
  4906  034A  1803               	skipnc
  4907  034B  3E01               	addlw	1
  4908  034C  1D03               	btfss	3,2
  4909  034D  07B6               	addwf	___flmul@prod+2,f
  4910  034E  082B               	movf	??___flmul+3,w
  4911  034F  1103               	clrz
  4912  0350  1803               	skipnc
  4913  0351  3E01               	addlw	1
  4914  0352  1D03               	btfss	3,2
  4915  0353  07B7               	addwf	___flmul@prod+3,f
  4916  0354  0822               	movf	___flmul@b+2,w
  4917  0355  00A8               	movwf	??___flmul
  4918  0356  0828               	movf	??___flmul,w
  4919  0357  00F0               	movwf	__Umul8_16@multiplicand
  4920  0358  0825               	movf	___flmul@a+1,w
  4921  0359  118A  2018  118A   	fcall	__Umul8_16
  4922  035C  0871               	movf	?__Umul8_16+1,w
  4923  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4924  035E  1303               	bcf	3,6	;RP1=0, select bank0
  4925  035F  00B9               	movwf	___flmul@temp+1
  4926  0360  0870               	movf	?__Umul8_16,w
  4927  0361  00B8               	movwf	___flmul@temp
  4928  0362  0838               	movf	___flmul@temp,w
  4929  0363  00A8               	movwf	??___flmul
  4930  0364  0839               	movf	___flmul@temp+1,w
  4931  0365  00A9               	movwf	??___flmul+1
  4932  0366  01AA               	clrf	??___flmul+2
  4933  0367  01AB               	clrf	??___flmul+3
  4934  0368  0828               	movf	??___flmul,w
  4935  0369  07B4               	addwf	___flmul@prod,f
  4936  036A  0829               	movf	??___flmul+1,w
  4937  036B  1103               	clrz
  4938  036C  1803               	skipnc
  4939  036D  3E01               	addlw	1
  4940  036E  1D03               	btfss	3,2
  4941  036F  07B5               	addwf	___flmul@prod+1,f
  4942  0370  082A               	movf	??___flmul+2,w
  4943  0371  1103               	clrz
  4944  0372  1803               	skipnc
  4945  0373  3E01               	addlw	1
  4946  0374  1D03               	btfss	3,2
  4947  0375  07B6               	addwf	___flmul@prod+2,f
  4948  0376  082B               	movf	??___flmul+3,w
  4949  0377  1103               	clrz
  4950  0378  1803               	skipnc
  4951  0379  3E01               	addlw	1
  4952  037A  1D03               	btfss	3,2
  4953  037B  07B7               	addwf	___flmul@prod+3,f
  4954  037C  0822               	movf	___flmul@b+2,w
  4955  037D  00A8               	movwf	??___flmul
  4956  037E  0828               	movf	??___flmul,w
  4957  037F  00F0               	movwf	__Umul8_16@multiplicand
  4958  0380  0826               	movf	___flmul@a+2,w
  4959  0381  118A  2018  118A   	fcall	__Umul8_16
  4960  0384  0871               	movf	?__Umul8_16+1,w
  4961  0385  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0386  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0387  00B9               	movwf	___flmul@temp+1
  4964  0388  0870               	movf	?__Umul8_16,w
  4965  0389  00B8               	movwf	___flmul@temp
  4966  038A  0838               	movf	___flmul@temp,w
  4967  038B  00A8               	movwf	??___flmul
  4968  038C  0839               	movf	___flmul@temp+1,w
  4969  038D  00A9               	movwf	??___flmul+1
  4970  038E  01AA               	clrf	??___flmul+2
  4971  038F  01AB               	clrf	??___flmul+3
  4972  0390  3008               	movlw	8
  4973  0391                     u3555:	
  4974  0391  1003               	clrc
  4975  0392  0DA8               	rlf	??___flmul,f
  4976  0393  0DA9               	rlf	??___flmul+1,f
  4977  0394  0DAA               	rlf	??___flmul+2,f
  4978  0395  0DAB               	rlf	??___flmul+3,f
  4979  0396  3EFF               	addlw	-1
  4980  0397  1D03               	skipz
  4981  0398  2B91               	goto	u3555
  4982  0399  0828               	movf	??___flmul,w
  4983  039A  07B4               	addwf	___flmul@prod,f
  4984  039B  0829               	movf	??___flmul+1,w
  4985  039C  1103               	clrz
  4986  039D  1803               	skipnc
  4987  039E  3E01               	addlw	1
  4988  039F  1D03               	btfss	3,2
  4989  03A0  07B5               	addwf	___flmul@prod+1,f
  4990  03A1  082A               	movf	??___flmul+2,w
  4991  03A2  1103               	clrz
  4992  03A3  1803               	skipnc
  4993  03A4  3E01               	addlw	1
  4994  03A5  1D03               	btfss	3,2
  4995  03A6  07B6               	addwf	___flmul@prod+2,f
  4996  03A7  082B               	movf	??___flmul+3,w
  4997  03A8  1103               	clrz
  4998  03A9  1803               	skipnc
  4999  03AA  3E01               	addlw	1
  5000  03AB  1D03               	btfss	3,2
  5001  03AC  07B7               	addwf	___flmul@prod+3,f
  5002  03AD  082E               	movf	___flmul@grs,w
  5003  03AE  00A8               	movwf	??___flmul
  5004  03AF  082F               	movf	___flmul@grs+1,w
  5005  03B0  00A9               	movwf	??___flmul+1
  5006  03B1  0830               	movf	___flmul@grs+2,w
  5007  03B2  00AA               	movwf	??___flmul+2
  5008  03B3  0831               	movf	___flmul@grs+3,w
  5009  03B4  00AB               	movwf	??___flmul+3
  5010  03B5  3018               	movlw	24
  5011  03B6                     u3575:	
  5012  03B6  1003               	clrc
  5013  03B7  0CAB               	rrf	??___flmul+3,f
  5014  03B8  0CAA               	rrf	??___flmul+2,f
  5015  03B9  0CA9               	rrf	??___flmul+1,f
  5016  03BA  0CA8               	rrf	??___flmul,f
  5017  03BB  3EFF               	addlw	-1
  5018  03BC  1D03               	skipz
  5019  03BD  2BB6               	goto	u3575
  5020  03BE  0828               	movf	??___flmul,w
  5021  03BF  07B4               	addwf	___flmul@prod,f
  5022  03C0  0829               	movf	??___flmul+1,w
  5023  03C1  1103               	clrz
  5024  03C2  1803               	skipnc
  5025  03C3  3E01               	addlw	1
  5026  03C4  1D03               	btfss	3,2
  5027  03C5  07B5               	addwf	___flmul@prod+1,f
  5028  03C6  082A               	movf	??___flmul+2,w
  5029  03C7  1103               	clrz
  5030  03C8  1803               	skipnc
  5031  03C9  3E01               	addlw	1
  5032  03CA  1D03               	btfss	3,2
  5033  03CB  07B6               	addwf	___flmul@prod+2,f
  5034  03CC  082B               	movf	??___flmul+3,w
  5035  03CD  1103               	clrz
  5036  03CE  1803               	skipnc
  5037  03CF  3E01               	addlw	1
  5038  03D0  1D03               	btfss	3,2
  5039  03D1  07B7               	addwf	___flmul@prod+3,f
  5040  03D2  3008               	movlw	8
  5041  03D3  00A8               	movwf	??___flmul
  5042  03D4                     u3595:	
  5043  03D4  1003               	clrc
  5044  03D5  0DAE               	rlf	___flmul@grs,f
  5045  03D6  0DAF               	rlf	___flmul@grs+1,f
  5046  03D7  0DB0               	rlf	___flmul@grs+2,f
  5047  03D8  0DB1               	rlf	___flmul@grs+3,f
  5048  03D9  0BA8               	decfsz	??___flmul,f
  5049  03DA  2BD4               	goto	u3595
  5050  03DB  0833               	movf	___flmul@bexp,w
  5051  03DC  0732               	addwf	___flmul@aexp,w
  5052  03DD  00A8               	movwf	??___flmul
  5053  03DE  01A9               	clrf	??___flmul+1
  5054  03DF  0DA9               	rlf	??___flmul+1,f
  5055  03E0  0828               	movf	??___flmul,w
  5056  03E1  3E82               	addlw	130
  5057  03E2  00B8               	movwf	___flmul@temp
  5058  03E3  0829               	movf	??___flmul+1,w
  5059  03E4  1803               	skipnc
  5060  03E5  3E01               	addlw	1
  5061  03E6  3EFF               	addlw	255
  5062  03E7  00B9               	movwf	___flmul@temp+1
  5063  03E8                     l2573:	
  5064  03E8  1BB6               	btfsc	___flmul@prod+2,7
  5065  03E9  2C05               	goto	l2575
  5066  03EA  3001               	movlw	1
  5067  03EB  00A8               	movwf	??___flmul
  5068  03EC                     u3605:	
  5069  03EC  1003               	clrc
  5070  03ED  0DB4               	rlf	___flmul@prod,f
  5071  03EE  0DB5               	rlf	___flmul@prod+1,f
  5072  03EF  0DB6               	rlf	___flmul@prod+2,f
  5073  03F0  0DB7               	rlf	___flmul@prod+3,f
  5074  03F1  0BA8               	decfsz	??___flmul,f
  5075  03F2  2BEC               	goto	u3605
  5076  03F3  1BB1               	btfsc	___flmul@grs+3,7
  5077  03F4  1434               	bsf	___flmul@prod,0
  5078  03F5  3001               	movlw	1
  5079  03F6  00A8               	movwf	??___flmul
  5080  03F7                     u3625:	
  5081  03F7  1003               	clrc
  5082  03F8  0DAE               	rlf	___flmul@grs,f
  5083  03F9  0DAF               	rlf	___flmul@grs+1,f
  5084  03FA  0DB0               	rlf	___flmul@grs+2,f
  5085  03FB  0DB1               	rlf	___flmul@grs+3,f
  5086  03FC  0BA8               	decfsz	??___flmul,f
  5087  03FD  2BF7               	goto	u3625
  5088  03FE  30FF               	movlw	255
  5089  03FF  07B8               	addwf	___flmul@temp,f
  5090  0400  1803               	skipnc
  5091  0401  0AB9               	incf	___flmul@temp+1,f
  5092  0402  30FF               	movlw	255
  5093  0403  07B9               	addwf	___flmul@temp+1,f
  5094  0404  2BE8               	goto	l2573
  5095  0405                     l2575:	
  5096  0405  01B2               	clrf	___flmul@aexp
  5097  0406  1FB1               	btfss	___flmul@grs+3,7
  5098  0407  2C1E               	goto	l2585
  5099  0408  30FF               	movlw	255
  5100  0409  052E               	andwf	___flmul@grs,w
  5101  040A  00A8               	movwf	??___flmul
  5102  040B  30FF               	movlw	255
  5103  040C  052F               	andwf	___flmul@grs+1,w
  5104  040D  00A9               	movwf	??___flmul+1
  5105  040E  30FF               	movlw	255
  5106  040F  0530               	andwf	___flmul@grs+2,w
  5107  0410  00AA               	movwf	??___flmul+2
  5108  0411  307F               	movlw	127
  5109  0412  0531               	andwf	___flmul@grs+3,w
  5110  0413  00AB               	movwf	??___flmul+3
  5111  0414  082B               	movf	??___flmul+3,w
  5112  0415  042A               	iorwf	??___flmul+2,w
  5113  0416  0429               	iorwf	??___flmul+1,w
  5114  0417  0428               	iorwf	??___flmul,w
  5115  0418  1903               	skipnz
  5116  0419  1834               	btfsc	___flmul@prod,0
  5117  041A  2C1C               	goto	l2581
  5118  041B  2C1E               	goto	l2585
  5119  041C                     l2581:	
  5120  041C  01B2               	clrf	___flmul@aexp
  5121  041D  0AB2               	incf	___flmul@aexp,f
  5122  041E                     l2585:	
  5123  041E  0832               	movf	___flmul@aexp,w
  5124  041F  1903               	btfsc	3,2
  5125  0420  2C50               	goto	l2595
  5126  0421  3001               	movlw	1
  5127  0422  07B4               	addwf	___flmul@prod,f
  5128  0423  3000               	movlw	0
  5129  0424  1803               	skipnc
  5130  0425  3001               	movlw	1
  5131  0426  07B5               	addwf	___flmul@prod+1,f
  5132  0427  3000               	movlw	0
  5133  0428  1803               	skipnc
  5134  0429  3001               	movlw	1
  5135  042A  07B6               	addwf	___flmul@prod+2,f
  5136  042B  3000               	movlw	0
  5137  042C  1803               	skipnc
  5138  042D  3001               	movlw	1
  5139  042E  07B7               	addwf	___flmul@prod+3,f
  5140  042F  1C37               	btfss	___flmul@prod+3,0
  5141  0430  2C50               	goto	l2595
  5142  0431  0834               	movf	___flmul@prod,w
  5143  0432  00A8               	movwf	??___flmul
  5144  0433  0835               	movf	___flmul@prod+1,w
  5145  0434  00A9               	movwf	??___flmul+1
  5146  0435  0836               	movf	___flmul@prod+2,w
  5147  0436  00AA               	movwf	??___flmul+2
  5148  0437  0837               	movf	___flmul@prod+3,w
  5149  0438  00AB               	movwf	??___flmul+3
  5150  0439  3001               	movlw	1
  5151  043A  00AC               	movwf	??___flmul+4
  5152  043B                     u3695:	
  5153  043B  0D2B               	rlf	??___flmul+3,w
  5154  043C  0CAB               	rrf	??___flmul+3,f
  5155  043D  0CAA               	rrf	??___flmul+2,f
  5156  043E  0CA9               	rrf	??___flmul+1,f
  5157  043F  0CA8               	rrf	??___flmul,f
  5158  0440  0BAC               	decfsz	??___flmul+4,f
  5159  0441  2C3B               	goto	u3695
  5160  0442  082B               	movf	??___flmul+3,w
  5161  0443  00B7               	movwf	___flmul@prod+3
  5162  0444  082A               	movf	??___flmul+2,w
  5163  0445  00B6               	movwf	___flmul@prod+2
  5164  0446  0829               	movf	??___flmul+1,w
  5165  0447  00B5               	movwf	___flmul@prod+1
  5166  0448  0828               	movf	??___flmul,w
  5167  0449  00B4               	movwf	___flmul@prod
  5168  044A  3001               	movlw	1
  5169  044B  07B8               	addwf	___flmul@temp,f
  5170  044C  1803               	skipnc
  5171  044D  0AB9               	incf	___flmul@temp+1,f
  5172  044E  3000               	movlw	0
  5173  044F  07B9               	addwf	___flmul@temp+1,f
  5174  0450                     l2595:	
  5175  0450  0839               	movf	___flmul@temp+1,w
  5176  0451  3A80               	xorlw	128
  5177  0452  00FF               	movwf	127
  5178  0453  3080               	movlw	128
  5179  0454  027F               	subwf	127,w
  5180  0455  1D03               	skipz
  5181  0456  2C59               	goto	u3705
  5182  0457  30FF               	movlw	255
  5183  0458  0238               	subwf	___flmul@temp,w
  5184  0459                     u3705:	
  5185  0459  1C03               	skipc
  5186  045A  2C66               	goto	l2599
  5187  045B  307F               	movlw	127
  5188  045C  1283               	bcf	3,5	;RP0=0, select bank0
  5189  045D  1303               	bcf	3,6	;RP1=0, select bank0
  5190  045E  00B7               	movwf	___flmul@prod+3
  5191  045F  3080               	movlw	128
  5192  0460  00B6               	movwf	___flmul@prod+2
  5193  0461  3000               	movlw	0
  5194  0462  00B5               	movwf	___flmul@prod+1
  5195  0463  3000               	movlw	0
  5196  0464  00B4               	movwf	___flmul@prod
  5197  0465  2C96               	goto	l733
  5198  0466                     l2599:	
  5199  0466  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0467  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0468  0839               	movf	___flmul@temp+1,w
  5202  0469  3A80               	xorlw	128
  5203  046A  00FF               	movwf	127
  5204  046B  3080               	movlw	128
  5205  046C  027F               	subwf	127,w
  5206  046D  1D03               	skipz
  5207  046E  2C71               	goto	u3715
  5208  046F  3001               	movlw	1
  5209  0470  0238               	subwf	___flmul@temp,w
  5210  0471                     u3715:	
  5211  0471  1803               	skipnc
  5212  0472  2C7F               	goto	l2605
  5213  0473  3000               	movlw	0
  5214  0474  1283               	bcf	3,5	;RP0=0, select bank0
  5215  0475  1303               	bcf	3,6	;RP1=0, select bank0
  5216  0476  00B7               	movwf	___flmul@prod+3
  5217  0477  3000               	movlw	0
  5218  0478  00B6               	movwf	___flmul@prod+2
  5219  0479  3000               	movlw	0
  5220  047A  00B5               	movwf	___flmul@prod+1
  5221  047B  3000               	movlw	0
  5222  047C  00B4               	movwf	___flmul@prod
  5223  047D  01AD               	clrf	___flmul@sign
  5224  047E  2C96               	goto	l733
  5225  047F                     l2605:	
  5226  047F  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0480  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0481  0838               	movf	___flmul@temp,w
  5229  0482  00A8               	movwf	??___flmul
  5230  0483  0828               	movf	??___flmul,w
  5231  0484  00B3               	movwf	___flmul@bexp
  5232  0485  30FF               	movlw	255
  5233  0486  05B4               	andwf	___flmul@prod,f
  5234  0487  30FF               	movlw	255
  5235  0488  05B5               	andwf	___flmul@prod+1,f
  5236  0489  307F               	movlw	127
  5237  048A  05B6               	andwf	___flmul@prod+2,f
  5238  048B  3000               	movlw	0
  5239  048C  05B7               	andwf	___flmul@prod+3,f
  5240  048D  1833               	btfsc	___flmul@bexp,0
  5241  048E  17B6               	bsf	___flmul@prod+2,7
  5242  048F  0833               	movf	___flmul@bexp,w
  5243  0490  00A8               	movwf	??___flmul
  5244  0491  1003               	clrc
  5245  0492  0C28               	rrf	??___flmul,w
  5246  0493  00A9               	movwf	??___flmul+1
  5247  0494  0829               	movf	??___flmul+1,w
  5248  0495  00B7               	movwf	___flmul@prod+3
  5249  0496                     l733:	
  5250  0496  082D               	movf	___flmul@sign,w
  5251  0497  00A8               	movwf	??___flmul
  5252  0498  0828               	movf	??___flmul,w
  5253  0499  04B7               	iorwf	___flmul@prod+3,f
  5254  049A  0837               	movf	___flmul@prod+3,w
  5255  049B  00A3               	movwf	?___flmul+3
  5256  049C  0836               	movf	___flmul@prod+2,w
  5257  049D  00A2               	movwf	?___flmul+2
  5258  049E  0835               	movf	___flmul@prod+1,w
  5259  049F  00A1               	movwf	?___flmul+1
  5260  04A0  0834               	movf	___flmul@prod,w
  5261  04A1  00A0               	movwf	?___flmul
  5262  04A2  0008               	return
  5263  04A3                     __end_of___flmul:	
  5264                           
  5265                           	psect	text17
  5266  0018                     __ptext17:	
  5267 ;; *************** function __Umul8_16 *****************
  5268 ;; Defined at:
  5269 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  multiplier      1    wreg     unsigned char 
  5272 ;;  multiplicand    1    0[COMMON] unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  multiplier      1    8[COMMON] unsigned char 
  5275 ;;  word_mpld       2    6[COMMON] unsigned int 
  5276 ;;  product         2    4[COMMON] unsigned int 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2    0[COMMON] unsigned int 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5286 ;;      Params:         2       0       0       0
  5287 ;;      Locals:         5       0       0       0
  5288 ;;      Temps:          2       0       0       0
  5289 ;;      Totals:         9       0       0       0
  5290 ;;Total ram usage:        9 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		___flmul
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           
  5300                           ;psect for function __Umul8_16
  5301  0018                     __Umul8_16:	
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5305                           ;__Umul8_16@multiplier stored from wreg
  5306  0018  00F8               	movwf	__Umul8_16@multiplier
  5307  0019  01F4               	clrf	__Umul8_16@product
  5308  001A  01F5               	clrf	__Umul8_16@product+1
  5309  001B  0870               	movf	__Umul8_16@multiplicand,w
  5310  001C  00F2               	movwf	??__Umul8_16
  5311  001D  01F3               	clrf	??__Umul8_16+1
  5312  001E  0872               	movf	??__Umul8_16,w
  5313  001F  00F6               	movwf	__Umul8_16@word_mpld
  5314  0020  0873               	movf	??__Umul8_16+1,w
  5315  0021  00F7               	movwf	__Umul8_16@word_mpld+1
  5316  0022                     l2361:	
  5317  0022  1C78               	btfss	__Umul8_16@multiplier,0
  5318  0023  282A               	goto	l799
  5319  0024  0876               	movf	__Umul8_16@word_mpld,w
  5320  0025  07F4               	addwf	__Umul8_16@product,f
  5321  0026  1803               	skipnc
  5322  0027  0AF5               	incf	__Umul8_16@product+1,f
  5323  0028  0877               	movf	__Umul8_16@word_mpld+1,w
  5324  0029  07F5               	addwf	__Umul8_16@product+1,f
  5325  002A                     l799:	
  5326  002A  3001               	movlw	1
  5327  002B                     u3165:	
  5328  002B  1003               	clrc
  5329  002C  0DF6               	rlf	__Umul8_16@word_mpld,f
  5330  002D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5331  002E  3EFF               	addlw	-1
  5332  002F  1D03               	skipz
  5333  0030  282B               	goto	u3165
  5334  0031  1003               	clrc
  5335  0032  0CF8               	rrf	__Umul8_16@multiplier,f
  5336  0033  0878               	movf	__Umul8_16@multiplier,w
  5337  0034  1D03               	btfss	3,2
  5338  0035  2822               	goto	l2361
  5339  0036  0875               	movf	__Umul8_16@product+1,w
  5340  0037  00F1               	movwf	?__Umul8_16+1
  5341  0038  0874               	movf	__Umul8_16@product,w
  5342  0039  00F0               	movwf	?__Umul8_16
  5343  003A  0008               	return
  5344  003B                     __end_of__Umul8_16:	
  5345                           
  5346                           	psect	text18
  5347  0B8B                     __ptext18:	
  5348 ;; *************** function ___flge *****************
  5349 ;; Defined at:
  5350 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  ff1             4    0[COMMON] unsigned int 
  5353 ;;  ff2             4    4[COMMON] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;		None               void
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5365 ;;      Params:         8       0       0       0
  5366 ;;      Locals:         0       0       0       0
  5367 ;;      Temps:          4       0       0       0
  5368 ;;      Totals:        12       0       0       0
  5369 ;;Total ram usage:       12 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_ftoa1
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           
  5379                           ;psect for function ___flge
  5380  0B8B                     ___flge:	
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5384  0B8B  3000               	movlw	0
  5385  0B8C  0570               	andwf	___flge@ff1,w
  5386  0B8D  00F8               	movwf	??___flge
  5387  0B8E  3000               	movlw	0
  5388  0B8F  0571               	andwf	___flge@ff1+1,w
  5389  0B90  00F9               	movwf	??___flge+1
  5390  0B91  3080               	movlw	128
  5391  0B92  0572               	andwf	___flge@ff1+2,w
  5392  0B93  00FA               	movwf	??___flge+2
  5393  0B94  307F               	movlw	127
  5394  0B95  0573               	andwf	___flge@ff1+3,w
  5395  0B96  00FB               	movwf	??___flge+3
  5396  0B97  087B               	movf	??___flge+3,w
  5397  0B98  047A               	iorwf	??___flge+2,w
  5398  0B99  0479               	iorwf	??___flge+1,w
  5399  0B9A  0478               	iorwf	??___flge,w
  5400  0B9B  1D03               	skipz
  5401  0B9C  2BA5               	goto	l506
  5402  0B9D  3000               	movlw	0
  5403  0B9E  00F3               	movwf	___flge@ff1+3
  5404  0B9F  3000               	movlw	0
  5405  0BA0  00F2               	movwf	___flge@ff1+2
  5406  0BA1  3000               	movlw	0
  5407  0BA2  00F1               	movwf	___flge@ff1+1
  5408  0BA3  3000               	movlw	0
  5409  0BA4  00F0               	movwf	___flge@ff1
  5410  0BA5                     l506:	
  5411  0BA5  3000               	movlw	0
  5412  0BA6  0574               	andwf	___flge@ff2,w
  5413  0BA7  00F8               	movwf	??___flge
  5414  0BA8  3000               	movlw	0
  5415  0BA9  0575               	andwf	___flge@ff2+1,w
  5416  0BAA  00F9               	movwf	??___flge+1
  5417  0BAB  3080               	movlw	128
  5418  0BAC  0576               	andwf	___flge@ff2+2,w
  5419  0BAD  00FA               	movwf	??___flge+2
  5420  0BAE  307F               	movlw	127
  5421  0BAF  0577               	andwf	___flge@ff2+3,w
  5422  0BB0  00FB               	movwf	??___flge+3
  5423  0BB1  087B               	movf	??___flge+3,w
  5424  0BB2  047A               	iorwf	??___flge+2,w
  5425  0BB3  0479               	iorwf	??___flge+1,w
  5426  0BB4  0478               	iorwf	??___flge,w
  5427  0BB5  1D03               	skipz
  5428  0BB6  2BBF               	goto	l2413
  5429  0BB7  3000               	movlw	0
  5430  0BB8  00F7               	movwf	___flge@ff2+3
  5431  0BB9  3000               	movlw	0
  5432  0BBA  00F6               	movwf	___flge@ff2+2
  5433  0BBB  3000               	movlw	0
  5434  0BBC  00F5               	movwf	___flge@ff2+1
  5435  0BBD  3000               	movlw	0
  5436  0BBE  00F4               	movwf	___flge@ff2
  5437  0BBF                     l2413:	
  5438  0BBF  1FF3               	btfss	___flge@ff1+3,7
  5439  0BC0  2BE5               	goto	l2417
  5440  0BC1  3000               	movlw	0
  5441  0BC2  00F8               	movwf	??___flge
  5442  0BC3  3000               	movlw	0
  5443  0BC4  00F9               	movwf	??___flge+1
  5444  0BC5  3000               	movlw	0
  5445  0BC6  00FA               	movwf	??___flge+2
  5446  0BC7  3080               	movlw	128
  5447  0BC8  00FB               	movwf	??___flge+3
  5448  0BC9  0870               	movf	___flge@ff1,w
  5449  0BCA  02F8               	subwf	??___flge,f
  5450  0BCB  0871               	movf	___flge@ff1+1,w
  5451  0BCC  1C03               	skipc
  5452  0BCD  0F71               	incfsz	___flge@ff1+1,w
  5453  0BCE  2BD0               	goto	u3211
  5454  0BCF  2BD1               	goto	u3212
  5455  0BD0                     u3211:	
  5456  0BD0  02F9               	subwf	??___flge+1,f
  5457  0BD1                     u3212:	
  5458  0BD1  0872               	movf	___flge@ff1+2,w
  5459  0BD2  1C03               	skipc
  5460  0BD3  0F72               	incfsz	___flge@ff1+2,w
  5461  0BD4  2BD6               	goto	u3213
  5462  0BD5  2BD7               	goto	u3214
  5463  0BD6                     u3213:	
  5464  0BD6  02FA               	subwf	??___flge+2,f
  5465  0BD7                     u3214:	
  5466  0BD7  0873               	movf	___flge@ff1+3,w
  5467  0BD8  1C03               	skipc
  5468  0BD9  0F73               	incfsz	___flge@ff1+3,w
  5469  0BDA  2BDC               	goto	u3215
  5470  0BDB  2BDD               	goto	u3216
  5471  0BDC                     u3215:	
  5472  0BDC  02FB               	subwf	??___flge+3,f
  5473  0BDD                     u3216:	
  5474  0BDD  087B               	movf	??___flge+3,w
  5475  0BDE  00F3               	movwf	___flge@ff1+3
  5476  0BDF  087A               	movf	??___flge+2,w
  5477  0BE0  00F2               	movwf	___flge@ff1+2
  5478  0BE1  0879               	movf	??___flge+1,w
  5479  0BE2  00F1               	movwf	___flge@ff1+1
  5480  0BE3  0878               	movf	??___flge,w
  5481  0BE4  00F0               	movwf	___flge@ff1
  5482  0BE5                     l2417:	
  5483  0BE5  1FF7               	btfss	___flge@ff2+3,7
  5484  0BE6  2C0B               	goto	l509
  5485  0BE7  3000               	movlw	0
  5486  0BE8  00F8               	movwf	??___flge
  5487  0BE9  3000               	movlw	0
  5488  0BEA  00F9               	movwf	??___flge+1
  5489  0BEB  3000               	movlw	0
  5490  0BEC  00FA               	movwf	??___flge+2
  5491  0BED  3080               	movlw	128
  5492  0BEE  00FB               	movwf	??___flge+3
  5493  0BEF  0874               	movf	___flge@ff2,w
  5494  0BF0  02F8               	subwf	??___flge,f
  5495  0BF1  0875               	movf	___flge@ff2+1,w
  5496  0BF2  1C03               	skipc
  5497  0BF3  0F75               	incfsz	___flge@ff2+1,w
  5498  0BF4  2BF6               	goto	u3231
  5499  0BF5  2BF7               	goto	u3232
  5500  0BF6                     u3231:	
  5501  0BF6  02F9               	subwf	??___flge+1,f
  5502  0BF7                     u3232:	
  5503  0BF7  0876               	movf	___flge@ff2+2,w
  5504  0BF8  1C03               	skipc
  5505  0BF9  0F76               	incfsz	___flge@ff2+2,w
  5506  0BFA  2BFC               	goto	u3233
  5507  0BFB  2BFD               	goto	u3234
  5508  0BFC                     u3233:	
  5509  0BFC  02FA               	subwf	??___flge+2,f
  5510  0BFD                     u3234:	
  5511  0BFD  0877               	movf	___flge@ff2+3,w
  5512  0BFE  1C03               	skipc
  5513  0BFF  0F77               	incfsz	___flge@ff2+3,w
  5514  0C00  2C02               	goto	u3235
  5515  0C01  2C03               	goto	u3236
  5516  0C02                     u3235:	
  5517  0C02  02FB               	subwf	??___flge+3,f
  5518  0C03                     u3236:	
  5519  0C03  087B               	movf	??___flge+3,w
  5520  0C04  00F7               	movwf	___flge@ff2+3
  5521  0C05  087A               	movf	??___flge+2,w
  5522  0C06  00F6               	movwf	___flge@ff2+2
  5523  0C07  0879               	movf	??___flge+1,w
  5524  0C08  00F5               	movwf	___flge@ff2+1
  5525  0C09  0878               	movf	??___flge,w
  5526  0C0A  00F4               	movwf	___flge@ff2
  5527  0C0B                     l509:	
  5528  0C0B  3080               	movlw	128
  5529  0C0C  06F3               	xorwf	___flge@ff1+3,f
  5530  0C0D  3080               	movlw	128
  5531  0C0E  06F7               	xorwf	___flge@ff2+3,f
  5532  0C0F  0877               	movf	___flge@ff2+3,w
  5533  0C10  0273               	subwf	___flge@ff1+3,w
  5534  0C11  1D03               	skipz
  5535  0C12  0008               	return
  5536  0C13  0876               	movf	___flge@ff2+2,w
  5537  0C14  0272               	subwf	___flge@ff1+2,w
  5538  0C15  1D03               	skipz
  5539  0C16  0008               	return
  5540  0C17  0875               	movf	___flge@ff2+1,w
  5541  0C18  0271               	subwf	___flge@ff1+1,w
  5542  0C19  1D03               	skipz
  5543  0C1A  0008               	return
  5544  0C1B  0874               	movf	___flge@ff2,w
  5545  0C1C  0270               	subwf	___flge@ff1,w
  5546  0C1D  0008               	return
  5547  0C1E                     __end_of___flge:	
  5548                           
  5549                           	psect	text19
  5550  0C1E                     __ptext19:	
  5551 ;; *************** function ___fldiv *****************
  5552 ;; Defined at:
  5553 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  a               4   26[BANK0 ] unsigned int 
  5556 ;;  b               4   30[BANK0 ] unsigned int 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  grs             4   46[BANK0 ] unsigned long 
  5559 ;;  rem             4   39[BANK0 ] unsigned long 
  5560 ;;  new_exp         2   44[BANK0 ] int 
  5561 ;;  aexp            1   51[BANK0 ] unsigned char 
  5562 ;;  bexp            1   50[BANK0 ] unsigned char 
  5563 ;;  sign            1   43[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4   26[BANK0 ] unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, btemp+1
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5573 ;;      Params:         0       8       0       0
  5574 ;;      Locals:         0      13       0       0
  5575 ;;      Temps:          0       5       0       0
  5576 ;;      Totals:         0      26       0       0
  5577 ;;Total ram usage:       26 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_main
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function ___fldiv
  5588  0C1E                     ___fldiv:	
  5589                           
  5590                           ;incstack = 0
  5591                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5592  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  5593  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  5594  0C20  0841               	movf	___fldiv@b+3,w
  5595  0C21  3980               	andlw	128
  5596  0C22  00C2               	movwf	??___fldiv
  5597  0C23  0842               	movf	??___fldiv,w
  5598  0C24  00CB               	movwf	___fldiv@sign
  5599  0C25  0841               	movf	___fldiv@b+3,w
  5600  0C26  00C2               	movwf	??___fldiv
  5601  0C27  0742               	addwf	??___fldiv,w
  5602  0C28  00C3               	movwf	??___fldiv+1
  5603  0C29  0843               	movf	??___fldiv+1,w
  5604  0C2A  00D2               	movwf	___fldiv@bexp
  5605  0C2B  1BC0               	btfsc	___fldiv@b+2,7
  5606  0C2C  1452               	bsf	___fldiv@bexp,0
  5607  0C2D  0852               	movf	___fldiv@bexp,w
  5608  0C2E  1903               	btfsc	3,2
  5609  0C2F  2C3E               	goto	l2731
  5610  0C30  0A52               	incf	___fldiv@bexp,w
  5611  0C31  1D03               	btfss	3,2
  5612  0C32  2C3B               	goto	l2727
  5613  0C33  3000               	movlw	0
  5614  0C34  00C1               	movwf	___fldiv@b+3
  5615  0C35  3000               	movlw	0
  5616  0C36  00C0               	movwf	___fldiv@b+2
  5617  0C37  3000               	movlw	0
  5618  0C38  00BF               	movwf	___fldiv@b+1
  5619  0C39  3000               	movlw	0
  5620  0C3A  00BE               	movwf	___fldiv@b
  5621  0C3B                     l2727:	
  5622  0C3B  17C0               	bsf	___fldiv@b+2,7
  5623  0C3C  01C1               	clrf	___fldiv@b+3
  5624  0C3D  2C46               	goto	l2733
  5625  0C3E                     l2731:	
  5626  0C3E  3000               	movlw	0
  5627  0C3F  00C1               	movwf	___fldiv@b+3
  5628  0C40  3000               	movlw	0
  5629  0C41  00C0               	movwf	___fldiv@b+2
  5630  0C42  3000               	movlw	0
  5631  0C43  00BF               	movwf	___fldiv@b+1
  5632  0C44  3000               	movlw	0
  5633  0C45  00BE               	movwf	___fldiv@b
  5634  0C46                     l2733:	
  5635  0C46  083D               	movf	___fldiv@a+3,w
  5636  0C47  3980               	andlw	128
  5637  0C48  00C2               	movwf	??___fldiv
  5638  0C49  0842               	movf	??___fldiv,w
  5639  0C4A  06CB               	xorwf	___fldiv@sign,f
  5640  0C4B  083D               	movf	___fldiv@a+3,w
  5641  0C4C  00C2               	movwf	??___fldiv
  5642  0C4D  0742               	addwf	??___fldiv,w
  5643  0C4E  00C3               	movwf	??___fldiv+1
  5644  0C4F  0843               	movf	??___fldiv+1,w
  5645  0C50  00D3               	movwf	___fldiv@aexp
  5646  0C51  1BBC               	btfsc	___fldiv@a+2,7
  5647  0C52  1453               	bsf	___fldiv@aexp,0
  5648  0C53  0853               	movf	___fldiv@aexp,w
  5649  0C54  1903               	btfsc	3,2
  5650  0C55  2C64               	goto	l2751
  5651  0C56  0A53               	incf	___fldiv@aexp,w
  5652  0C57  1D03               	btfss	3,2
  5653  0C58  2C61               	goto	l2747
  5654  0C59  3000               	movlw	0
  5655  0C5A  00BD               	movwf	___fldiv@a+3
  5656  0C5B  3000               	movlw	0
  5657  0C5C  00BC               	movwf	___fldiv@a+2
  5658  0C5D  3000               	movlw	0
  5659  0C5E  00BB               	movwf	___fldiv@a+1
  5660  0C5F  3000               	movlw	0
  5661  0C60  00BA               	movwf	___fldiv@a
  5662  0C61                     l2747:	
  5663  0C61  17BC               	bsf	___fldiv@a+2,7
  5664  0C62  01BD               	clrf	___fldiv@a+3
  5665  0C63  2C6C               	goto	l681
  5666  0C64                     l2751:	
  5667  0C64  3000               	movlw	0
  5668  0C65  00BD               	movwf	___fldiv@a+3
  5669  0C66  3000               	movlw	0
  5670  0C67  00BC               	movwf	___fldiv@a+2
  5671  0C68  3000               	movlw	0
  5672  0C69  00BB               	movwf	___fldiv@a+1
  5673  0C6A  3000               	movlw	0
  5674  0C6B  00BA               	movwf	___fldiv@a
  5675  0C6C                     l681:	
  5676  0C6C  083D               	movf	___fldiv@a+3,w
  5677  0C6D  043C               	iorwf	___fldiv@a+2,w
  5678  0C6E  043B               	iorwf	___fldiv@a+1,w
  5679  0C6F  043A               	iorwf	___fldiv@a,w
  5680  0C70  1D03               	skipz
  5681  0C71  2C8B               	goto	l2761
  5682  0C72  3000               	movlw	0
  5683  0C73  00C1               	movwf	___fldiv@b+3
  5684  0C74  3000               	movlw	0
  5685  0C75  00C0               	movwf	___fldiv@b+2
  5686  0C76  3000               	movlw	0
  5687  0C77  00BF               	movwf	___fldiv@b+1
  5688  0C78  3000               	movlw	0
  5689  0C79  00BE               	movwf	___fldiv@b
  5690  0C7A  3080               	movlw	128
  5691  0C7B  04C0               	iorwf	___fldiv@b+2,f
  5692  0C7C  307F               	movlw	127
  5693  0C7D  04C1               	iorwf	___fldiv@b+3,f
  5694  0C7E                     L5:	
  5695  0C7E  084B               	movf	___fldiv@sign,w
  5696  0C7F  00C2               	movwf	??___fldiv
  5697  0C80  0842               	movf	??___fldiv,w
  5698  0C81  04C1               	iorwf	___fldiv@b+3,f
  5699  0C82  0841               	movf	___fldiv@b+3,w
  5700  0C83  00BD               	movwf	?___fldiv+3
  5701  0C84  0840               	movf	___fldiv@b+2,w
  5702  0C85  00BC               	movwf	?___fldiv+2
  5703  0C86  083F               	movf	___fldiv@b+1,w
  5704  0C87  00BB               	movwf	?___fldiv+1
  5705  0C88  083E               	movf	___fldiv@b,w
  5706  0C89  00BA               	movwf	?___fldiv
  5707  0C8A  0008               	return
  5708  0C8B                     l2761:	
  5709  0C8B  0852               	movf	___fldiv@bexp,w
  5710  0C8C  1D03               	btfss	3,2
  5711  0C8D  2C97               	goto	l2767
  5712  0C8E  3000               	movlw	0
  5713  0C8F  00BD               	movwf	?___fldiv+3
  5714  0C90  3000               	movlw	0
  5715  0C91  00BC               	movwf	?___fldiv+2
  5716  0C92  3000               	movlw	0
  5717  0C93  00BB               	movwf	?___fldiv+1
  5718  0C94  3000               	movlw	0
  5719  0C95  00BA               	movwf	?___fldiv
  5720  0C96  0008               	return
  5721  0C97                     l2767:	
  5722  0C97  0852               	movf	___fldiv@bexp,w
  5723  0C98  00C2               	movwf	??___fldiv
  5724  0C99  01C3               	clrf	??___fldiv+1
  5725  0C9A  0843               	movf	??___fldiv+1,w
  5726  0C9B  00C5               	movwf	??___fldiv+3
  5727  0C9C  0853               	movf	___fldiv@aexp,w
  5728  0C9D  0242               	subwf	??___fldiv,w
  5729  0C9E  00C4               	movwf	??___fldiv+2
  5730  0C9F  1C03               	skipc
  5731  0CA0  03C5               	decf	??___fldiv+3,f
  5732  0CA1  0844               	movf	??___fldiv+2,w
  5733  0CA2  3E7F               	addlw	127
  5734  0CA3  00CC               	movwf	___fldiv@new_exp
  5735  0CA4  0845               	movf	??___fldiv+3,w
  5736  0CA5  1803               	skipnc
  5737  0CA6  3E01               	addlw	1
  5738  0CA7  3E00               	addlw	0
  5739  0CA8  00CD               	movwf	___fldiv@new_exp+1
  5740  0CA9  0841               	movf	___fldiv@b+3,w
  5741  0CAA  00CA               	movwf	___fldiv@rem+3
  5742  0CAB  0840               	movf	___fldiv@b+2,w
  5743  0CAC  00C9               	movwf	___fldiv@rem+2
  5744  0CAD  083F               	movf	___fldiv@b+1,w
  5745  0CAE  00C8               	movwf	___fldiv@rem+1
  5746  0CAF  083E               	movf	___fldiv@b,w
  5747  0CB0  00C7               	movwf	___fldiv@rem
  5748  0CB1  3000               	movlw	0
  5749  0CB2  00C1               	movwf	___fldiv@b+3
  5750  0CB3  3000               	movlw	0
  5751  0CB4  00C0               	movwf	___fldiv@b+2
  5752  0CB5  3000               	movlw	0
  5753  0CB6  00BF               	movwf	___fldiv@b+1
  5754  0CB7  3000               	movlw	0
  5755  0CB8  00BE               	movwf	___fldiv@b
  5756  0CB9  3000               	movlw	0
  5757  0CBA  00D1               	movwf	___fldiv@grs+3
  5758  0CBB  3000               	movlw	0
  5759  0CBC  00D0               	movwf	___fldiv@grs+2
  5760  0CBD  3000               	movlw	0
  5761  0CBE  00CF               	movwf	___fldiv@grs+1
  5762  0CBF  3000               	movlw	0
  5763  0CC0  00CE               	movwf	___fldiv@grs
  5764  0CC1  01D3               	clrf	___fldiv@aexp
  5765  0CC2                     l2795:	
  5766  0CC2  301A               	movlw	26
  5767  0CC3  0253               	subwf	___fldiv@aexp,w
  5768  0CC4  1803               	btfsc	3,0
  5769  0CC5  2D0A               	goto	l2797
  5770  0CC6  0853               	movf	___fldiv@aexp,w
  5771  0CC7  1903               	btfsc	3,2
  5772  0CC8  2CE6               	goto	l2787
  5773  0CC9  3001               	movlw	1
  5774  0CCA  00C2               	movwf	??___fldiv
  5775  0CCB                     u3995:	
  5776  0CCB  1003               	clrc
  5777  0CCC  0DC7               	rlf	___fldiv@rem,f
  5778  0CCD  0DC8               	rlf	___fldiv@rem+1,f
  5779  0CCE  0DC9               	rlf	___fldiv@rem+2,f
  5780  0CCF  0DCA               	rlf	___fldiv@rem+3,f
  5781  0CD0  0BC2               	decfsz	??___fldiv,f
  5782  0CD1  2CCB               	goto	u3995
  5783  0CD2  3001               	movlw	1
  5784  0CD3  00C2               	movwf	??___fldiv
  5785  0CD4                     u4005:	
  5786  0CD4  1003               	clrc
  5787  0CD5  0DBE               	rlf	___fldiv@b,f
  5788  0CD6  0DBF               	rlf	___fldiv@b+1,f
  5789  0CD7  0DC0               	rlf	___fldiv@b+2,f
  5790  0CD8  0DC1               	rlf	___fldiv@b+3,f
  5791  0CD9  0BC2               	decfsz	??___fldiv,f
  5792  0CDA  2CD4               	goto	u4005
  5793  0CDB  1BD1               	btfsc	___fldiv@grs+3,7
  5794  0CDC  143E               	bsf	___fldiv@b,0
  5795  0CDD  3001               	movlw	1
  5796  0CDE  00C2               	movwf	??___fldiv
  5797  0CDF                     u4025:	
  5798  0CDF  1003               	clrc
  5799  0CE0  0DCE               	rlf	___fldiv@grs,f
  5800  0CE1  0DCF               	rlf	___fldiv@grs+1,f
  5801  0CE2  0DD0               	rlf	___fldiv@grs+2,f
  5802  0CE3  0DD1               	rlf	___fldiv@grs+3,f
  5803  0CE4  0BC2               	decfsz	??___fldiv,f
  5804  0CE5  2CDF               	goto	u4025
  5805  0CE6                     l2787:	
  5806  0CE6  083D               	movf	___fldiv@a+3,w
  5807  0CE7  024A               	subwf	___fldiv@rem+3,w
  5808  0CE8  1D03               	skipz
  5809  0CE9  2CF4               	goto	u4035
  5810  0CEA  083C               	movf	___fldiv@a+2,w
  5811  0CEB  0249               	subwf	___fldiv@rem+2,w
  5812  0CEC  1D03               	skipz
  5813  0CED  2CF4               	goto	u4035
  5814  0CEE  083B               	movf	___fldiv@a+1,w
  5815  0CEF  0248               	subwf	___fldiv@rem+1,w
  5816  0CF0  1D03               	skipz
  5817  0CF1  2CF4               	goto	u4035
  5818  0CF2  083A               	movf	___fldiv@a,w
  5819  0CF3  0247               	subwf	___fldiv@rem,w
  5820  0CF4                     u4035:	
  5821  0CF4  1C03               	skipc
  5822  0CF5  2D05               	goto	l2793
  5823  0CF6  1751               	bsf	___fldiv@grs+3,6
  5824  0CF7  083A               	movf	___fldiv@a,w
  5825  0CF8  02C7               	subwf	___fldiv@rem,f
  5826  0CF9  083B               	movf	___fldiv@a+1,w
  5827  0CFA  1C03               	skipc
  5828  0CFB  0F3B               	incfsz	___fldiv@a+1,w
  5829  0CFC  02C8               	subwf	___fldiv@rem+1,f
  5830  0CFD  083C               	movf	___fldiv@a+2,w
  5831  0CFE  1C03               	skipc
  5832  0CFF  0F3C               	incfsz	___fldiv@a+2,w
  5833  0D00  02C9               	subwf	___fldiv@rem+2,f
  5834  0D01  083D               	movf	___fldiv@a+3,w
  5835  0D02  1C03               	skipc
  5836  0D03  0F3D               	incfsz	___fldiv@a+3,w
  5837  0D04  02CA               	subwf	___fldiv@rem+3,f
  5838  0D05                     l2793:	
  5839  0D05  3001               	movlw	1
  5840  0D06  00C2               	movwf	??___fldiv
  5841  0D07  0842               	movf	??___fldiv,w
  5842  0D08  07D3               	addwf	___fldiv@aexp,f
  5843  0D09  2CC2               	goto	l2795
  5844  0D0A                     l2797:	
  5845  0D0A  084A               	movf	___fldiv@rem+3,w
  5846  0D0B  0449               	iorwf	___fldiv@rem+2,w
  5847  0D0C  0448               	iorwf	___fldiv@rem+1,w
  5848  0D0D  0447               	iorwf	___fldiv@rem,w
  5849  0D0E  1D03               	btfss	3,2
  5850  0D0F  144E               	bsf	___fldiv@grs,0
  5851  0D10                     l2811:	
  5852  0D10  1BC0               	btfsc	___fldiv@b+2,7
  5853  0D11  2D2D               	goto	l2813
  5854  0D12  3001               	movlw	1
  5855  0D13  00C2               	movwf	??___fldiv
  5856  0D14                     u4065:	
  5857  0D14  1003               	clrc
  5858  0D15  0DBE               	rlf	___fldiv@b,f
  5859  0D16  0DBF               	rlf	___fldiv@b+1,f
  5860  0D17  0DC0               	rlf	___fldiv@b+2,f
  5861  0D18  0DC1               	rlf	___fldiv@b+3,f
  5862  0D19  0BC2               	decfsz	??___fldiv,f
  5863  0D1A  2D14               	goto	u4065
  5864  0D1B  1BD1               	btfsc	___fldiv@grs+3,7
  5865  0D1C  143E               	bsf	___fldiv@b,0
  5866  0D1D  3001               	movlw	1
  5867  0D1E  00C2               	movwf	??___fldiv
  5868  0D1F                     u4085:	
  5869  0D1F  1003               	clrc
  5870  0D20  0DCE               	rlf	___fldiv@grs,f
  5871  0D21  0DCF               	rlf	___fldiv@grs+1,f
  5872  0D22  0DD0               	rlf	___fldiv@grs+2,f
  5873  0D23  0DD1               	rlf	___fldiv@grs+3,f
  5874  0D24  0BC2               	decfsz	??___fldiv,f
  5875  0D25  2D1F               	goto	u4085
  5876  0D26  30FF               	movlw	255
  5877  0D27  07CC               	addwf	___fldiv@new_exp,f
  5878  0D28  1803               	skipnc
  5879  0D29  0ACD               	incf	___fldiv@new_exp+1,f
  5880  0D2A  30FF               	movlw	255
  5881  0D2B  07CD               	addwf	___fldiv@new_exp+1,f
  5882  0D2C  2D10               	goto	l2811
  5883  0D2D                     l2813:	
  5884  0D2D  01D3               	clrf	___fldiv@aexp
  5885  0D2E  1FD1               	btfss	___fldiv@grs+3,7
  5886  0D2F  2D46               	goto	l2823
  5887  0D30  30FF               	movlw	255
  5888  0D31  054E               	andwf	___fldiv@grs,w
  5889  0D32  00C2               	movwf	??___fldiv
  5890  0D33  30FF               	movlw	255
  5891  0D34  054F               	andwf	___fldiv@grs+1,w
  5892  0D35  00C3               	movwf	??___fldiv+1
  5893  0D36  30FF               	movlw	255
  5894  0D37  0550               	andwf	___fldiv@grs+2,w
  5895  0D38  00C4               	movwf	??___fldiv+2
  5896  0D39  307F               	movlw	127
  5897  0D3A  0551               	andwf	___fldiv@grs+3,w
  5898  0D3B  00C5               	movwf	??___fldiv+3
  5899  0D3C  0845               	movf	??___fldiv+3,w
  5900  0D3D  0444               	iorwf	??___fldiv+2,w
  5901  0D3E  0443               	iorwf	??___fldiv+1,w
  5902  0D3F  0442               	iorwf	??___fldiv,w
  5903  0D40  1903               	skipnz
  5904  0D41  183E               	btfsc	___fldiv@b,0
  5905  0D42  2D44               	goto	l2819
  5906  0D43  2D46               	goto	l2823
  5907  0D44                     l2819:	
  5908  0D44  01D3               	clrf	___fldiv@aexp
  5909  0D45  0AD3               	incf	___fldiv@aexp,f
  5910  0D46                     l2823:	
  5911  0D46  0853               	movf	___fldiv@aexp,w
  5912  0D47  1903               	btfsc	3,2
  5913  0D48  2D78               	goto	l2833
  5914  0D49  3001               	movlw	1
  5915  0D4A  07BE               	addwf	___fldiv@b,f
  5916  0D4B  3000               	movlw	0
  5917  0D4C  1803               	skipnc
  5918  0D4D  3001               	movlw	1
  5919  0D4E  07BF               	addwf	___fldiv@b+1,f
  5920  0D4F  3000               	movlw	0
  5921  0D50  1803               	skipnc
  5922  0D51  3001               	movlw	1
  5923  0D52  07C0               	addwf	___fldiv@b+2,f
  5924  0D53  3000               	movlw	0
  5925  0D54  1803               	skipnc
  5926  0D55  3001               	movlw	1
  5927  0D56  07C1               	addwf	___fldiv@b+3,f
  5928  0D57  1C41               	btfss	___fldiv@b+3,0
  5929  0D58  2D78               	goto	l2833
  5930  0D59  083E               	movf	___fldiv@b,w
  5931  0D5A  00C2               	movwf	??___fldiv
  5932  0D5B  083F               	movf	___fldiv@b+1,w
  5933  0D5C  00C3               	movwf	??___fldiv+1
  5934  0D5D  0840               	movf	___fldiv@b+2,w
  5935  0D5E  00C4               	movwf	??___fldiv+2
  5936  0D5F  0841               	movf	___fldiv@b+3,w
  5937  0D60  00C5               	movwf	??___fldiv+3
  5938  0D61  3001               	movlw	1
  5939  0D62  00C6               	movwf	??___fldiv+4
  5940  0D63                     u4155:	
  5941  0D63  0D45               	rlf	??___fldiv+3,w
  5942  0D64  0CC5               	rrf	??___fldiv+3,f
  5943  0D65  0CC4               	rrf	??___fldiv+2,f
  5944  0D66  0CC3               	rrf	??___fldiv+1,f
  5945  0D67  0CC2               	rrf	??___fldiv,f
  5946  0D68  0BC6               	decfsz	??___fldiv+4,f
  5947  0D69  2D63               	goto	u4155
  5948  0D6A  0845               	movf	??___fldiv+3,w
  5949  0D6B  00C1               	movwf	___fldiv@b+3
  5950  0D6C  0844               	movf	??___fldiv+2,w
  5951  0D6D  00C0               	movwf	___fldiv@b+2
  5952  0D6E  0843               	movf	??___fldiv+1,w
  5953  0D6F  00BF               	movwf	___fldiv@b+1
  5954  0D70  0842               	movf	??___fldiv,w
  5955  0D71  00BE               	movwf	___fldiv@b
  5956  0D72  3001               	movlw	1
  5957  0D73  07CC               	addwf	___fldiv@new_exp,f
  5958  0D74  1803               	skipnc
  5959  0D75  0ACD               	incf	___fldiv@new_exp+1,f
  5960  0D76  3000               	movlw	0
  5961  0D77  07CD               	addwf	___fldiv@new_exp+1,f
  5962  0D78                     l2833:	
  5963  0D78  084D               	movf	___fldiv@new_exp+1,w
  5964  0D79  3A80               	xorlw	128
  5965  0D7A  00FF               	movwf	127
  5966  0D7B  3080               	movlw	128
  5967  0D7C  027F               	subwf	127,w
  5968  0D7D  1D03               	skipz
  5969  0D7E  2D81               	goto	u4165
  5970  0D7F  30FF               	movlw	255
  5971  0D80  024C               	subwf	___fldiv@new_exp,w
  5972  0D81                     u4165:	
  5973  0D81  1C03               	skipc
  5974  0D82  2D91               	goto	l2837
  5975  0D83  30FF               	movlw	255
  5976  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  5977  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  5978  0D86  00CC               	movwf	___fldiv@new_exp
  5979  0D87  3000               	movlw	0
  5980  0D88  00CD               	movwf	___fldiv@new_exp+1
  5981  0D89  3000               	movlw	0
  5982  0D8A  00C1               	movwf	___fldiv@b+3
  5983  0D8B  3000               	movlw	0
  5984  0D8C  00C0               	movwf	___fldiv@b+2
  5985  0D8D  3000               	movlw	0
  5986  0D8E  00BF               	movwf	___fldiv@b+1
  5987  0D8F  3000               	movlw	0
  5988  0D90  00BE               	movwf	___fldiv@b
  5989  0D91                     l2837:	
  5990  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  5991  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  5992  0D93  084D               	movf	___fldiv@new_exp+1,w
  5993  0D94  3A80               	xorlw	128
  5994  0D95  00FF               	movwf	127
  5995  0D96  3080               	movlw	128
  5996  0D97  027F               	subwf	127,w
  5997  0D98  1D03               	skipz
  5998  0D99  2D9C               	goto	u4175
  5999  0D9A  3001               	movlw	1
  6000  0D9B  024C               	subwf	___fldiv@new_exp,w
  6001  0D9C                     u4175:	
  6002  0D9C  1803               	skipnc
  6003  0D9D  2DAB               	goto	l703
  6004  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  6006  0DA0  01CC               	clrf	___fldiv@new_exp
  6007  0DA1  01CD               	clrf	___fldiv@new_exp+1
  6008  0DA2  3000               	movlw	0
  6009  0DA3  00C1               	movwf	___fldiv@b+3
  6010  0DA4  3000               	movlw	0
  6011  0DA5  00C0               	movwf	___fldiv@b+2
  6012  0DA6  3000               	movlw	0
  6013  0DA7  00BF               	movwf	___fldiv@b+1
  6014  0DA8  3000               	movlw	0
  6015  0DA9  00BE               	movwf	___fldiv@b
  6016  0DAA  01CB               	clrf	___fldiv@sign
  6017  0DAB                     l703:	
  6018  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0DAD  084C               	movf	___fldiv@new_exp,w
  6021  0DAE  00C2               	movwf	??___fldiv
  6022  0DAF  0842               	movf	??___fldiv,w
  6023  0DB0  00D2               	movwf	___fldiv@bexp
  6024  0DB1  1C52               	btfss	___fldiv@bexp,0
  6025  0DB2  2DB5               	goto	l2849
  6026  0DB3  17C0               	bsf	___fldiv@b+2,7
  6027  0DB4  2DB9               	goto	l705
  6028  0DB5                     l2849:	
  6029  0DB5  307F               	movlw	127
  6030  0DB6  00C2               	movwf	??___fldiv
  6031  0DB7  0842               	movf	??___fldiv,w
  6032  0DB8  05C0               	andwf	___fldiv@b+2,f
  6033  0DB9                     l705:	
  6034  0DB9  0852               	movf	___fldiv@bexp,w
  6035  0DBA  00C2               	movwf	??___fldiv
  6036  0DBB  1003               	clrc
  6037  0DBC  0C42               	rrf	??___fldiv,w
  6038  0DBD  00C3               	movwf	??___fldiv+1
  6039  0DBE  0843               	movf	??___fldiv+1,w
  6040  0DBF  00C1               	movwf	___fldiv@b+3
  6041  0DC0  2C7E               	goto	L5
  6042  0DC1                     __end_of___fldiv:	
  6043                           
  6044                           	psect	text20
  6045  0907                     __ptext20:	
  6046 ;; *************** function _SYSTEM_Initialize *****************
  6047 ;; Defined at:
  6048 ;;		line 28 in file "config.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6062 ;;      Params:         0       0       0       0
  6063 ;;      Locals:         0       0       0       0
  6064 ;;      Temps:          0       0       0       0
  6065 ;;      Totals:         0       0       0       0
  6066 ;;Total ram usage:        0 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    1
  6069 ;; This function calls:
  6070 ;;		_ADC_Initialize
  6071 ;;		_EUSART_Initialize
  6072 ;;		_OSCILLATOR_Initialize
  6073 ;;		_PIN_MANAGER_Initialize
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function _SYSTEM_Initialize
  6081  0907                     _SYSTEM_Initialize:	
  6082                           
  6083                           ;config.c: 30:     OSCILLATOR_Initialize();
  6084                           
  6085                           ;incstack = 0
  6086                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6087  0907  158A  20DA  158A   	fcall	_OSCILLATOR_Initialize
  6088                           
  6089                           ;config.c: 31:     PIN_MANAGER_Initialize();
  6090  090A  158A  2124  158A   	fcall	_PIN_MANAGER_Initialize
  6091                           
  6092                           ;config.c: 32:     ADC_Initialize();
  6093  090D  158A  20FB  158A   	fcall	_ADC_Initialize
  6094                           
  6095                           ;config.c: 33:     EUSART_Initialize();
  6096  0910  158A  2113         	fcall	_EUSART_Initialize
  6097  0912  0008               	return
  6098  0913                     __end_of_SYSTEM_Initialize:	
  6099                           
  6100                           	psect	text21
  6101  0924                     __ptext21:	
  6102 ;; *************** function _PIN_MANAGER_Initialize *****************
  6103 ;; Defined at:
  6104 ;;		line 7 in file "pin_manager.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6118 ;;      Params:         0       0       0       0
  6119 ;;      Locals:         0       0       0       0
  6120 ;;      Temps:          0       0       0       0
  6121 ;;      Totals:         0       0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_SYSTEM_Initialize
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           
  6132                           ;psect for function _PIN_MANAGER_Initialize
  6133  0924                     _PIN_MANAGER_Initialize:	
  6134                           
  6135                           ;pin_manager.c: 9:     PORTE = 0x00;
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6139  0924  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0925  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0926  0189               	clrf	9	;volatile
  6142                           
  6143                           ;pin_manager.c: 10:     PORTA = 0x00;
  6144  0927  0185               	clrf	5	;volatile
  6145                           
  6146                           ;pin_manager.c: 11:     PORTB = 0x00;
  6147  0928  0186               	clrf	6	;volatile
  6148                           
  6149                           ;pin_manager.c: 12:     PORTC = 0x00;
  6150  0929  0187               	clrf	7	;volatile
  6151                           
  6152                           ;pin_manager.c: 14:     TRISE = 0x08;
  6153  092A  3008               	movlw	8
  6154  092B  1683               	bsf	3,5	;RP0=1, select bank1
  6155  092C  1303               	bcf	3,6	;RP1=0, select bank1
  6156  092D  0089               	movwf	9	;volatile
  6157                           
  6158                           ;pin_manager.c: 15:     TRISA = 0x03;
  6159  092E  3003               	movlw	3
  6160  092F  0085               	movwf	5	;volatile
  6161                           
  6162                           ;pin_manager.c: 16:     TRISB = 0x80;
  6163  0930  3080               	movlw	128
  6164  0931  0086               	movwf	6	;volatile
  6165                           
  6166                           ;pin_manager.c: 17:     TRISC = 0x00;
  6167  0932  0187               	clrf	7	;volatile
  6168                           
  6169                           ;pin_manager.c: 19:     ANSEL = 0x03;
  6170  0933  3003               	movlw	3
  6171  0934  1683               	bsf	3,5	;RP0=1, select bank3
  6172  0935  1703               	bsf	3,6	;RP1=1, select bank3
  6173  0936  0088               	movwf	8	;volatile
  6174                           
  6175                           ;pin_manager.c: 20:     ANSELH = 0;
  6176  0937  0189               	clrf	9	;volatile
  6177  0938  0008               	return
  6178  0939                     __end_of_PIN_MANAGER_Initialize:	
  6179                           
  6180                           	psect	text22
  6181  08DA                     __ptext22:	
  6182 ;; *************** function _OSCILLATOR_Initialize *****************
  6183 ;; Defined at:
  6184 ;;		line 36 in file "config.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		status,2
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6198 ;;      Params:         0       0       0       0
  6199 ;;      Locals:         0       0       0       0
  6200 ;;      Temps:          0       0       0       0
  6201 ;;      Totals:         0       0       0       0
  6202 ;;Total ram usage:        0 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_SYSTEM_Initialize
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function _OSCILLATOR_Initialize
  6213  08DA                     _OSCILLATOR_Initialize:	
  6214                           
  6215                           ;config.c: 38:     OSCCON = 0x00;
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  6219  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  6220  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  6221  08DC  018F               	clrf	15	;volatile
  6222  08DD  0008               	return
  6223  08DE                     __end_of_OSCILLATOR_Initialize:	
  6224                           
  6225                           	psect	text23
  6226  0913                     __ptext23:	
  6227 ;; *************** function _EUSART_Initialize *****************
  6228 ;; Defined at:
  6229 ;;		line 55 in file "eusart.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6243 ;;      Params:         0       0       0       0
  6244 ;;      Locals:         0       0       0       0
  6245 ;;      Temps:          0       0       0       0
  6246 ;;      Totals:         0       0       0       0
  6247 ;;Total ram usage:        0 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_SYSTEM_Initialize
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           
  6257                           ;psect for function _EUSART_Initialize
  6258  0913                     _EUSART_Initialize:	
  6259                           
  6260                           ;eusart.c: 60:     BAUDCTL = 0x08;
  6261                           
  6262                           ;incstack = 0
  6263                           ; Regs used in _EUSART_Initialize: [wreg]
  6264  0913  3008               	movlw	8
  6265  0914  1683               	bsf	3,5	;RP0=1, select bank3
  6266  0915  1703               	bsf	3,6	;RP1=1, select bank3
  6267  0916  0087               	movwf	7	;volatile
  6268                           
  6269                           ;eusart.c: 63:     RCSTA = 0x90;
  6270  0917  3090               	movlw	144
  6271  0918  1283               	bcf	3,5	;RP0=0, select bank0
  6272  0919  1303               	bcf	3,6	;RP1=0, select bank0
  6273  091A  0098               	movwf	24	;volatile
  6274                           
  6275                           ;eusart.c: 66:     TXSTA = 0x24;
  6276  091B  3024               	movlw	36
  6277  091C  1683               	bsf	3,5	;RP0=1, select bank1
  6278  091D  1303               	bcf	3,6	;RP1=0, select bank1
  6279  091E  0098               	movwf	24	;volatile
  6280                           
  6281                           ;eusart.c: 69:     SPBRG = 0xA0;
  6282  091F  30A0               	movlw	160
  6283  0920  0099               	movwf	25	;volatile
  6284                           
  6285                           ;eusart.c: 72:     SPBRGH = 0x01;
  6286  0921  3001               	movlw	1
  6287  0922  009A               	movwf	26	;volatile
  6288  0923  0008               	return
  6289  0924                     __end_of_EUSART_Initialize:	
  6290                           
  6291                           	psect	text24
  6292  08FB                     __ptext24:	
  6293 ;; *************** function _ADC_Initialize *****************
  6294 ;; Defined at:
  6295 ;;		line 8 in file "adc.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6309 ;;      Params:         0       0       0       0
  6310 ;;      Locals:         0       0       0       0
  6311 ;;      Temps:          0       0       0       0
  6312 ;;      Totals:         0       0       0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_SYSTEM_Initialize
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function _ADC_Initialize
  6324  08FB                     _ADC_Initialize:	
  6325                           
  6326                           ;adc.c: 13:     ADCON0 = 0x81;
  6327                           
  6328                           ;incstack = 0
  6329                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6330  08FB  3081               	movlw	129
  6331  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  6332  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  6333  08FE  009F               	movwf	31	;volatile
  6334                           
  6335                           ;adc.c: 16:     ADCON1 = 0x00;
  6336  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  6337  0900  1303               	bcf	3,6	;RP1=0, select bank1
  6338  0901  019F               	clrf	31	;volatile
  6339                           
  6340                           ;adc.c: 19:     ADRESL = 0x00;
  6341  0902  019E               	clrf	30	;volatile
  6342                           
  6343                           ;adc.c: 22:     ADRESH = 0x00;
  6344  0903  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0904  1303               	bcf	3,6	;RP1=0, select bank0
  6346  0905  019E               	clrf	30	;volatile
  6347  0906  0008               	return
  6348  0907                     __end_of_ADC_Initialize:	
  6349                           
  6350                           	psect	text25
  6351  09B2                     __ptext25:	
  6352 ;; *************** function _ADC_GetConversion *****************
  6353 ;; Defined at:
  6354 ;;		line 53 in file "adc.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  channel         1    wreg     enum E1305
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  channel         1    7[COMMON] enum E1305
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  2    0[COMMON] unsigned int 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6368 ;;      Params:         2       0       0       0
  6369 ;;      Locals:         1       0       0       0
  6370 ;;      Temps:          5       0       0       0
  6371 ;;      Totals:         8       0       0       0
  6372 ;;Total ram usage:        8 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function _ADC_GetConversion
  6383  09B2                     _ADC_GetConversion:	
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6387                           ;ADC_GetConversion@channel stored from wreg
  6388  09B2  00F7               	movwf	ADC_GetConversion@channel
  6389                           
  6390                           ;adc.c: 53: adc_result_t ADC_GetConversion(adc_channel_t channel);adc.c: 54: {;adc.c: 56
      +                          :     ADCON0bits.CHS = channel;
  6391  09B3  0877               	movf	ADC_GetConversion@channel,w
  6392  09B4  00F2               	movwf	??_ADC_GetConversion
  6393  09B5  0DF2               	rlf	??_ADC_GetConversion,f
  6394  09B6  0DF2               	rlf	??_ADC_GetConversion,f
  6395  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  6396  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  6397  09B9  081F               	movf	31,w	;volatile
  6398  09BA  0672               	xorwf	??_ADC_GetConversion,w
  6399  09BB  39C3               	andlw	-61
  6400  09BC  0672               	xorwf	??_ADC_GetConversion,w
  6401  09BD  009F               	movwf	31	;volatile
  6402                           
  6403                           ;adc.c: 59:     ADCON0bits.ADON = 1;
  6404  09BE  141F               	bsf	31,0	;volatile
  6405                           
  6406                           ;adc.c: 62:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  6407  09BF  3006               	movlw	6
  6408  09C0  00F2               	movwf	??_ADC_GetConversion
  6409  09C1                     u4207:	
  6410  09C1  0BF2               	decfsz	??_ADC_GetConversion,f
  6411  09C2  29C1               	goto	u4207
  6412  09C3  0000               	nop
  6413                           
  6414                           ;adc.c: 65:     ADCON0bits.GO_nDONE = 1;
  6415  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  6416  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  6417  09C6  149F               	bsf	31,1	;volatile
  6418  09C7                     l46:	
  6419                           ;adc.c: 69:     {;adc.c: 70:     }
  6420                           
  6421                           
  6422                           ;adc.c: 68:     while (ADCON0bits.GO_nDONE)
  6423  09C7  189F               	btfsc	31,1	;volatile
  6424  09C8  29C7               	goto	l46
  6425                           
  6426                           ;adc.c: 73:     return ((adc_result_t)((ADRESH << 2) + (ADRESL >> 6)));
  6427  09C9  1683               	bsf	3,5	;RP0=1, select bank1
  6428  09CA  1303               	bcf	3,6	;RP1=0, select bank1
  6429  09CB  081E               	movf	30,w	;volatile
  6430  09CC  00F2               	movwf	??_ADC_GetConversion
  6431  09CD  3006               	movlw	6
  6432  09CE                     u3885:	
  6433  09CE  1003               	clrc
  6434  09CF  0CF2               	rrf	??_ADC_GetConversion,f
  6435  09D0  3EFF               	addlw	-1
  6436  09D1  1D03               	skipz
  6437  09D2  29CE               	goto	u3885
  6438  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  6439  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  6440  09D5  081E               	movf	30,w	;volatile
  6441  09D6  00F3               	movwf	??_ADC_GetConversion+1
  6442  09D7  01F4               	clrf	??_ADC_GetConversion+2
  6443  09D8  1003               	clrc
  6444  09D9  0DF3               	rlf	??_ADC_GetConversion+1,f
  6445  09DA  0DF4               	rlf	??_ADC_GetConversion+2,f
  6446  09DB  1003               	clrc
  6447  09DC  0DF3               	rlf	??_ADC_GetConversion+1,f
  6448  09DD  0DF4               	rlf	??_ADC_GetConversion+2,f
  6449  09DE  0872               	movf	??_ADC_GetConversion,w
  6450  09DF  0773               	addwf	??_ADC_GetConversion+1,w
  6451  09E0  00F5               	movwf	??_ADC_GetConversion+3
  6452  09E1  3000               	movlw	0
  6453  09E2  1803               	skipnc
  6454  09E3  3001               	movlw	1
  6455  09E4  0774               	addwf	??_ADC_GetConversion+2,w
  6456  09E5  00F6               	movwf	??_ADC_GetConversion+4
  6457  09E6  0875               	movf	??_ADC_GetConversion+3,w
  6458  09E7  00F0               	movwf	?_ADC_GetConversion
  6459  09E8  0876               	movf	??_ADC_GetConversion+4,w
  6460  09E9  00F1               	movwf	?_ADC_GetConversion+1
  6461  09EA  0008               	return
  6462  09EB                     __end_of_ADC_GetConversion:	
  6463  0002                     
  6464                           	psect	functab
  6465  0002                     __pfunctab:	
  6466  0002                     __fptable:	
  6467  0002                     fptable:	
  6468  0002  00FF               	movwf	(btemp+1)& (0+127)
  6469  0003  3000               	movlw	high fptable
  6470  0004  008A               	movwf	10
  6471  0005  087F               	movf	(btemp+1)& (0+127),w
  6472  0006  0782               	addwf	2,f
  6473  0007                     fpbase:	
  6474  0007  2807               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  6475  0008                     fp__putch:	
  6476  0008  158A  28DE         	ljmp	_putch
  6477  000A                     __end_of__fptable:	
  6478  007E                     btemp	set	126	;btemp
  6479  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80      0      17
    BANK2            80      0       0

Pointer List with Targets:

    ftoa1@status	PTR int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa1@buf(BANK1[17]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa1@buf(BANK1[17]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa1@buf(BANK1[17]), STR_2(CODE[15]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa1@buf(BANK1[17]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> _doprnt@c(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[11]), ftoa1@buf(BANK1[17]), STR_2(CODE[15]), STR_1(CODE[7]), 

    S479__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S479__prbuf$ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa1@buf(BANK1[17]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa1@buf(BANK1[17]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    ftoa1@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa1@buf(BANK1[17]), 

    sp__ftoa1	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa1@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _ftoa1->___xxtofl
    __doprnt->___lldiv
    _putch->_EUSART_Write
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_ftoa1
    _ftoa1->_sprintf
    _sprintf->__doprnt
    __doprnt->___llmod
    ___fltol->___flmul
    ___flsub->___fladd
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   19157
                                             70 BANK0      9     9      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _ftoa1
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    4112
                                             62 BANK0      8     4      4
                            __doprnt
                              _ftoa1 (ARG)
 ---------------------------------------------------------------------------------
 (1) _ftoa1                                               16    10      6   10639
                                             46 BANK0     16    10      6
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     5      9    4049
                                             32 BANK0     14     5      9
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             26    23      3    3754
                                             10 BANK0     22    19      3
                   Absolute function *
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     362
                                              1 COMMON     1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2333
                                              8 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    8     6      2      22
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _ftoa1
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART_Write
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
         _EUSART_Write
     _ftoa1 (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     4F      4F       3       98.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      11       5       21.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      6E       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      6E      10        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 17:07:41 2019

                   ___fldiv@aexp 0053                     ___fldiv@bexp 0052                                pc 0002  
                   ___fldiv@sign 004B                      __CFG_CP$OFF 0000                               l46 09C7  
                             l96 08E3                               fsr 0004              ___wmul@multiplicand 0072  
            __Umul8_16@word_mpld 0076                              l145 0B07                              l332 099B  
                            l264 057C                              l506 0BA5                              l267 063A  
                            l509 0C0B                              l525 0AE6                              l269 058E  
                            l703 0DAB                              l631 0E8A                              l287 060F  
                            l288 067B                              l705 0DB9                              l625 0E13  
                            l733 0496                              l629 0EAE                              l646 0F6D  
                            l681 0C6C                              l667 0FF3                              l659 0FD9  
                            l772 00AE                              l773 00B8                              l765 0098  
                            l759 0058                              l799 002A                     __CFG_CPD$OFF 0000  
                            fsr0 0004                              indf 0000                     __CFG_IESO$ON 0000  
                   __CFG_FOSC$HS 0000                     ___flmul@aexp 0032                     ___flmul@bexp 0033  
                   ___flmul@sign 002D                     ___flmul@temp 0038                     ___flmul@prod 0034  
                   __CFG_LVP$OFF 0000                     ___fltol@exp1 0044                             l2101 0716  
                           l2005 052D                             l2015 0541                             l2201 0E08  
                           l2121 0743                             l2113 0726                             l2033 05BD  
                           l2017 0579                             l2211 0E1D                             l2131 076E  
                           l2051 05F9                             l2027 059D                             l2019 057E  
                           l2205 0E0B                             l2125 0754                             l2117 073B  
                           l2053 0606                             l2045 05E5                             l2037 059F  
                           l2311 0F90                             l2303 0F7F                             l2151 0791  
                           l2119 073F                             l2063 0652                             l2039 05CC  
                           l2241 0E59                             l2137 0783                             l2129 0762  
                           l2081 06B6                             l2073 0692                             l2057 0611  
                           l2153 04A6                             l2251 0E99                             l2147 07F2  
                           l2075 06A6                             l2155 07F4                             l2413 0BBF  
                           l2325 0FA2                             l2317 0F97                             l2181 0DE1  
                           l2093 06F0                             l2511 01E4                             l2351 0FED  
                           l2319 0F99                             l2183 0DE9                             l2087 06BC  
                           l2417 0BE5                             l2361 0022                             l2521 01FA  
                           l2513 01EC                             l2329 0FA4                             l2249 0E97  
                           l2177 0DDE                             l2441 0AAB                             l2097 0700  
                           l2347 0FE9                             l2275 0EDF                             l2267 0EBC  
                           l2259 0EAA                             l2605 047F                             l2509 01E2  
                           l2277 0EE1                             l2285 0EF3                             l2437 0AA2  
                           l2701 011B                             l2295 0F5F                             l2623 0050  
                           l2457 0AD2                             l2633 006B                             l2811 0D10  
                           l2731 0C3E                             l2491 01BD                             l2467 0AF5  
                           l2459 0AE2                             l2643 00AC                             l2635 007D  
                           l1923 0993                             l2813 0D2D                             l2733 0C46  
                           l2581 041C                             l2573 03E8                             l2493 01BF  
                           l2645 009D                             l2629 0067                             l1941 0A49  
                           l1917 0016                             l2823 0D46                             l2751 0C64  
                           l2727 0C3B                             l2575 0405                             l2495 01C7  
                           l1951 0A81                             l1943 0A59                             l2833 0D78  
                           l2761 0C8B                             l2585 041E                             l2657 00D5  
                           l2819 0D44                             l2747 0C61                             l2595 0450  
                           l1955 0A8E                             l1971 0A23                             l2837 0D91  
                           l1965 09F5                             l2767 0C97                             l2599 0466  
                           l1967 0A05                             l1975 0A30                             l1991 04E2  
                           l2849 0DB5                             l2793 0D05                             l2787 0CE6  
                           l2795 0CC2                             l1987 04D3                             l2797 0D0A  
                           l1997 04F5                             l2887 0629                             STR_1 0852  
                   __CFG_WDTE$ON 0000                             STR_2 0838                             STR_3 0847  
                           u2205 0A4D                             u2225 0A5B                             u2305 0A24  
                           u3211 0BD0                             u2235 0A70                             u3212 0BD1  
                           u4005 0CD4                             u3213 0BD6                             u2245 0A82  
                           u2165 099C                             u2405 0594                             u3214 0BD7  
                           u3231 0BF6                             u3215 0BDC                             u2175 09A3  
                           u3232 0BF7                             u3216 0BDD                             u4025 0CDF  
                           u3233 0BFC                             u3305 0AD3                             u3234 0BFD  
                           u4035 0CF4                             u3235 0C02                             u2275 09F9  
                           u3236 0C03                             u3165 002B                             u3085 0FC3  
                           u2525 06BF                             u4207 09C1                             u3335 0AEB  
                           u2295 0A13                             u2535 06E6                             u2800 0E78  
                           u4065 0D14                             u4155 0D63                             u3515 02FD  
                           u3275 0AB4                             u2555 06F7                             u2395 0588  
                           u4165 0D81                             u4085 0D1F                             u3605 03EC  
                           u2565 070B                             u4175 0D9C                             u2655 07A9  
                           u3705 0459                             u3625 03F7                             u3715 0471  
                           u3555 0391                             u2931 0F20                             u2923 0F05  
                           u2915 0EE7                             u2835 0E9F                             u2595 072D  
                           u2940 0F34                             u2932 0F21                             u3485 02A4  
                           u2941 0F35                             u2933 0F26                             u3805 00A5  
                           u4197 0B84                             u2942 0F3A                             u2934 0F27  
                           u2790 0E77                             u3575 03B6                             u2943 0F3B  
                           u2935 0F2C                             u2936 0F2D                             u2785 0E6D  
                           u3595 03D4                             u3845 00C0                             u3765 0074  
                           u3695 043B                             u2985 0F83                             u3785 0090  
                           u3885 09CE                             u3995 0CCB                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 0B04                             btemp 007E  
                  __CFG_BOREN$ON 0000                      ftoa1@status 0052                             start 0000  
                ___fldiv@new_exp 004C                    __CFG_MCLRE$ON 0000                    ?_EUSART_Write 0070  
 __size_of_OSCILLATOR_Initialize 0004    __end_of_OSCILLATOR_Initialize 08DE                    ___fltol@sign1 0043  
                __end_of___fladd 1000                            ?_main 0070                  __end_of___fldiv 0DC1  
                __end_of___flneg 08FB                  __end_of___flmul 04A3                  __end_of___flsub 0991  
                __end_of___fltol 0B04                            _ANSEL 0188                  __end_of___lldiv 0A97  
                __end_of___llmod 0A39                            _RCREG 001A                            _RCSTA 0018  
                          _SPBRG 0099                            _PORTA 0005                            _PORTB 0006  
                          _PORTC 0007                            _PORTE 0009                  __end_of__doprnt 07F7  
                          _TRISA 0085                            _TRISB 0086                            _TRISC 0087  
                          _TRISE 0089                            _TXREG 0019                            _TXSTA 0098  
                __end_of_dpowers 0838                            _ftoa1 00DE                  __end_of_isdigit 0018  
                          _putch 08DE                            fpbase 0007                            pclath 000A  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0970  
                __initialization 07F7                     __end_of_main 0B8B                   ??_EUSART_Write 0070  
                         ??_main 0066                           _ADCON0 001F                           _ADCON1 009F  
                         ?_ftoa1 004E                 ___llmod@dividend 0024                           _ADRESH 001E  
                         _ADRESL 009E                           ?_putch 0071                           _ANSELH 0189  
                         _OSCCON 008F                           _SPBRGH 009A                 __end_of__fptable 000A  
               __end_of___xxtofl 00DE                   __CFG_PWRTE$OFF 0000                           ___flge 0B8B  
                      ??___fladd 0020                           ___wmul 0991                        ??___fldiv 0042  
                      ??___flneg 0074                        ??___flmul 0028                        ??___flsub 007E  
                      ??___fltol 003E                        ??___lldiv 0078                        ??___llmod 0028  
                      ??__doprnt 002D                     __doprnt@flag 0039                           _printf 0939  
                   __doprnt@prec 003C                           ftoa1@f 004E                           ftoa1@l 0059  
                         fptable 0002                           fptotal 0002                        ??_isdigit 0070  
             __size_of__Umul8_16 0023         ADC_GetConversion@channel 0077                        ??_sprintf 0049  
                     ___flge@ff1 0070                       ___flge@ff2 0074                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                _SYSTEM_Initialize 0907                     ___xxtofl@val 0070  
        __end_of__initialization 07FD                       ___flneg@f1 0070               ?_SYSTEM_Initialize 0070  
                     ___fltol@f1 003A                   __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070  
                  __end_of_ftoa1 01A0                    __end_of_putch 08E2                       __doprnt@ap 002C  
                     __doprnt@cp 0032                       __doprnt@pb 003F                          ??_ftoa1 0054  
      __end_of_SYSTEM_Initialize 0913                          ??_putch 0072                       __pbssBANK1 00A0  
           __end_of_EUSART_Write 08EA                __end_of__Umul8_16 003B                       __pmaintext 0B04  
                        ?___flge 0070                          ?___wmul 0070                          _BAUDCTL 0187  
                        ?_printf 005E          __size_of_ADC_Initialize 000C                        ?___xxtofl 0070  
                     __stringtab 0800                  __size_of___flge 0093                          ___fladd 0DC1  
                        ___fldiv 0C1E                          ___flneg 08F2                          ___flmul 01A0  
                        ___flsub 0970                          ___fltol 0A97                          ___lldiv 0A39  
                __size_of___wmul 0021                          ___llmod 09EB                          __doprnt 04A3  
                        __ptext1 0939                          __ptext2 00DE                          __ptext3 0950  
                        __ptext4 04A3                          __ptext5 08DE                          __ptext6 08E2  
                        __ptext7 000A                          __ptext8 0991                          __ptext9 09EB  
                __size_of_printf 0017                          _dpowers 0810            _OSCILLATOR_Initialize 08DA  
                        _isdigit 000A                       ??___xxtofl 0074         ??_PIN_MANAGER_Initialize 0070  
                        main@adc 006D       __size_of_SYSTEM_Initialize 000C                          ftoa1@cp 005D  
                        _sprintf 0950                          clrloop0 08EB                    __doprnt@width 003A  
           end_of_initialization 07FD                _EUSART_Initialize 0913                  ___lldiv@divisor 0070  
                ___lldiv@counter 007D               ?_EUSART_Initialize 0070                        _RCSTAbits 0018  
                        printf@f 005E              ??_EUSART_Initialize 0070                      ___fladd@grs 007B  
                  ___xxtofl@sign 0078            __size_of_EUSART_Write 0008                      ___fldiv@grs 004E  
                    ___fldiv@rem 0047                      ___flmul@grs 002E        __end_of_EUSART_Initialize 0924  
                      _TXSTAbits 0098                   __end_of___flge 0C1E                   __end_of___wmul 09B2  
                   _EUSART_Write 08E2                   _ADC_Initialize 08FB           ?_OSCILLATOR_Initialize 0070  
                 __end_of_printf 0950              start_initialization 07F7  __size_of_PIN_MANAGER_Initialize 0015  
                    putch@txData 0071                  ___llmod@divisor 0020                  ___llmod@counter 0029  
                       ??___flge 0078                         ??___wmul 0074                      __doprnt@len 0033  
         __end_of_ADC_Initialize 0907                        __Umul8_16 0018                      __doprnt@val 0035  
                       ??_printf 0062                        ___fladd@a 0074                        ___fladd@b 0070  
                      ___fldiv@a 003A                        ___fldiv@b 003E                        ___flmul@a 0024  
                      ___flmul@b 0020                        ___flsub@a 0028                        ___flsub@b 002C  
                      ___latbits 0001                    __pcstackBANK0 0020                __size_of__fptable 0008  
              __size_of___xxtofl 00A3       __size_of_EUSART_Initialize 0011                        __doprnt@c 003E  
                      __doprnt@f 002A           _PIN_MANAGER_Initialize 0924                        __pfunctab 0002  
                       ?___fladd 0070                         ?___fldiv 003A                         ?___flneg 0070  
                       ?___flmul 0020                         ?___flsub 0028                         ?___fltol 003A  
                       ?___lldiv 0070                         ?___llmod 0020                       ?__Umul8_16 0070  
                ?_ADC_Initialize 0070                         ?__doprnt 002A                        __pstrings 0800  
                       ?_isdigit 0070                   __size_of_ftoa1 00C2                         ?_sprintf 0040  
                 __size_of_putch 0004                   ___wmul@product 0074                        clear_ram0 08EA  
                       _PIR1bits 000C                       _ADCON0bits 001F                      __stringbase 080F  
              ___wmul@multiplier 0070                _ADC_GetConversion 09B2          ??_OSCILLATOR_Initialize 0070  
                    ??__Umul8_16 0072               ?_ADC_GetConversion 0070                 __size_of___fladd 023F  
               __size_of___fldiv 01A3                 __size_of___flneg 0009                 __size_of___flmul 0303  
               __size_of___flsub 0021                 __size_of___fltol 006D                 __size_of___lldiv 005E  
               __size_of___llmod 004E                 __size_of__doprnt 0354               __end_of__stringtab 0810  
                    _isdigit$804 0070              ??_ADC_GetConversion 0072                         __fptable 0002  
                       ___xxtofl 003B                 __size_of_isdigit 000E                         __ptext10 0A39  
                       __ptext11 003B                         __ptext20 0907                         __ptext12 0A97  
                       __ptext21 0924                         __ptext13 0970                         __ptext22 08DA  
                       __ptext14 0DC1                         __ptext23 0913                         __ptext15 08F2  
                       __ptext24 08FB                         __ptext16 01A0                         __ptext25 09B2  
                       __ptext17 0018                         __ptext18 0B8B                         __ptext19 0C1E  
              __CFG_BOR4V$BOR40V 0000                 __size_of_sprintf 0020                    __size_of_main 0087  
      __end_of_ADC_GetConversion 09EB                         fp__putch 0008                         ftoa1@buf 00A0  
                       ftoa1@rem 0055                         main@volt 0069                         isdigit@c 0071  
                      sprintf@ap 004B                        sprintf@pb 004C                        sprintf@wh 004A  
               ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070                 ??_ADC_Initialize 0070  
                      stringcode 080A                         printf@ap 0063                         printf@pb 0064  
         __Umul8_16@multiplicand 0070                         sprintf@f 0040                 ___lldiv@quotient 0079  
                       stringdir 080A                         stringtab 0800                    ___fladd@signs 0078  
             EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 0939                     ___fladd@aexp 0079  
                   ___fladd@bexp 007A             __Umul8_16@multiplier 0078       __size_of_ADC_GetConversion 0039  
              __Umul8_16@product 0074  
